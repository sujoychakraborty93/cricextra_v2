{"version":3,"sources":["components/auth.jsx","components/navbarTop.jsx","components/navbarFooter.jsx","components/tables/requestSubmitTbl.jsx","components/reducer/fetchData.jsx","components/tables/requestAllTbl.jsx","components/tables/requestMyTbl.jsx","components/tables/requestOverviewTbl.jsx","components/requestOverview.jsx","components/homePage.jsx","components/home-incomplete.jsx","components/tables/createTableHeader.jsx","components/tables/matchScheduleTbl.jsx","components/allMatchesPage.jsx","components/myTeamMatchPage.jsx","components/tables/teamTbl.jsx","components/teamsPage.jsx","components/tables/playerTbl.jsx","components/tables/playerDetailsTbl.jsx","components/playerPage.jsx","components/tables/venueTbl.jsx","components/venuePage.jsx","components/tables/umpireTbl.jsx","components/umpirepage.jsx","components/loginPage.jsx","components/registrationPage.jsx","components/forgotPasswordPage.jsx","components/requestAll.jsx","components/requestMy.jsx","components/requestSubmit.jsx","components/tables/requestDetailsTbl.jsx","components/requestDetails.jsx","components/errorPage.jsx","App.js","serviceWorker.js","components/reducer/allReducer.jsx","index.js","images/GC.jpg","images/00_default_image.jpg","images/ball33.png"],"names":["authenticate","a","axios","get","process","withCredentials","res","data","undefined","setTrue","authenticated","this","red","localStorage","setItem","sessionStorage","NavbarDispClass","props","toggleNavbar","setState","navbarOpen","state","logout","then","auth","setFalse","history","replace","userEmail","location","Navbar","color","dark","expand","fixed","NavbarBrand","href","Image","src","ball","alt","roundedCircle","height","width","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","className","NavItem","activeClassName","to","pathname","exact","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Form","inline","FormControl","type","placeholder","Button","variant","Component","withRouter","NavbarFooterClass","bg","Link","icon","faFacebook","faGithubAlt","faTwitter","faLinkedinIn","faGoogle","RequestSubmitTblClass","alrt","msg","Alert","handleOnChange","e","preventDefault","console","log","target","value","name","addRequest","validate","titleErrMsg","title","header","requestTemplateId","description","requestorId","requestStatusId","sportType","address","venueId","date","time","matchId","created","lastModified","requestDetails","myRequestDetails","requestTemplateList","sportTypeList","requestCommentList","requestStatusList","user","cityList","zipList","countryStateList","countryList","matchList","addMsg","errMsg","reqTemp","filter","f","request_template","length","id","Number","Date","toUTCString","post","status","push","catch","error","document","getElementById","reset","FormGroup","Label","for","Input","list","onChange","map","t","key","s","sport_type","dateErrMsg","m","bind","resetForm","index","self","indexOf","req","email_id","params","submitForm","AllRequests","AllMatches","RequestAllTblClass","addCommentData","requestId","comment","userId","addToCommentList","request_id","user_id","full_name","last_modified","commentList","userImageDataList","timestamp","toDateString","toLocaleTimeString","slice","split","requestid","requestData","r","c","style","scrollHeight","Math","min","row","i","sendData","u","image_data","GC","requestor","Row","Col","xs","dateConvert","onKeyDown","handleKeyDown","size","add","item","requestTbl","connect","requests","allRequests","RequestMyTblClass","userImageData","RequestOverviewTblClass","RequestOverviewClass","HomePageClass","componentCalled","HomeClass","class","tblHeaderClass","colHead","col","MatchScheduleTblClass","resetStates","timeErrMsg","hTeamErrMsg","aTeamErrMsg","venueErrMsg","umpireErrMsg","mTypeErrMsg","addDetails","hTeam","aTeam","venue","umpire","matchType","filterDetails","teamId","td","details","teams","venues","umpires","columns","tdLinkCls","team_name","toString","v","venue_name","handleOnViewAllClick","matchDetails","filterMatchDetails","editModalDisplay","deleteModalDisplay","addModalDisplay","filterModalDisplay","editDetails","mType","modalData","matchTypeValues","matchTypesList","teamList","venueList","umpireList","updateMsg","delMsg","matchesLink","fromPage","showAdd","showEdit","showDelete","prevState","toggleEditMatchModal","toggleDeleteMatchModal","hasValue","team","put","request","responseText","delete","headers","toggleAddMatchModal","team_id","venue_id","match_type","umpire_id","toggleFilterMatchModal","setEditMatchModalData","Home_Team","Away_Team","setDeleteMatchModalData","Modal","toggle","ModalHeader","ModalBody","ModalFooter","addNewMatch","filterData","disabled","editMatch","deleteMatch","adminUser","el","onlyUnique","tbl","addModal","editModal","deleteModal","filterModal","filterBtn","viewAllBtn","addBtn","Table","bordered","createHeader","formatRows","AllMatchesPageClass","MyTeamMatchPageClass","TeamTblClass","teamNameErrMsg","captainErrMsg","managerErrMsg","teamName","captainUserId","managerUserId","trim","modalDataOriginal","isNaN","isValidString","d","playersErrMsg","filterTeamList","playerList","captainList","managerList","str","test","match","toggleEditModal","toggleDeleteModal","player","toggleAddModal","captain_id","manager_id","players","p","setEditModalData","captain_name","manager_name","setDeleteModalData","captain","manager","update","role_id","TeamsClass","PlayerTblClass","firstNameErrMsg","lastNameErrMsg","middleNameErrMsg","emailNameErrMsg","phoneErrMsg","passwordErrMsg","confirmPasswordErrMsg","secretQErrMsg","secretAErrMsg","firstName","lastName","middleName","emailId","fullName","phone","modified","roleId","checkExtra","emailIdErrMsg","isValidName","isValidEmail","isValidPhone","password","isValidPassword","confirmPassword","secretQid","secretA","isValidAnswer","filterPlayerList","userRoleList","secretQList","email","toLowerCase","first_name","last_name","middle_name","contact_no","q","question","role","PlayerDetailsClass","photoAlert","msgPhoto","setImageVariable","playerEmailId","imageSrc","userAlreadyHasImage_id","userAlreadyHasImage_userId","isDefaultImage","updateImageForExistingUser","image","append","fileChangeHandler","addPhotoDetails","files","fileUpload","imageType","every","imageSize","FormData","showImage","imgSrc","imageList","selectedPhoto","loaded","Object","keys","multiple","verticalTable","PlayerClass","VenueTblClass","venueNameErrMsg","streetErrMsg","cityErrMsg","stateErrMsg","zipErrMsg","countryErrMsg","venueName","street","city","zip","country","handleOnAddChange","filterVenueList","country_name","state_name","streetNameErrMsg","includes","VenueClass","UmpireTblClass","umpireNameErrMsg","filterUmpireList","umpireName","UmpireClass","LoginClass","handleOnSubmit","nameValues","nameEmail","namePassword","userLogin","fireRedirect","onSubmit","required","autoFocus","LoginForm","RegistrationClass","nameFirstname","nameMiddlename","nameLastname","nameConfirmPassword","nameSecretQ","nameSecretA","window","userid","RegistrationForm","ForgotPasswordClass","userLoginList","RequestAllClass","RequestMyClass","RequestSubmitClass","RequestDetailsTblClass","addComment","onChangeEdit","comments","modalDataComment","editedCommentData","editRequestModalDisplay","deleteRequestModalDisplay","editCommentModalDisplay","deleteCommentModalDisplay","requestStatus","editRequestData","editRequestDataToUpdate","phone_no","request_status","match_id","originalComment","addCommentMsg","updateRequestMsg","deleteRequestMsg","updateCommentMsg","deleteCommentMsg","showEditRequest","showEditComment","inputid","divid","divactionid","divs","inputs","divactions","display","toggleEditRequestModal","toggleDeleteRequestModal","tempArr","JSON","stringify","errRequestMsg","toggleEditCommentModal","findIndex","innerHTML","toggleDeleteCommentModal","deleteCommentFunc","default_image","setEditRequestModalData","setDeleteRequestModalData","addCommentFunc","inputId","divId","divActionId","updateComment","cancelEditComment","setEditCommentModalData","setDeleteCommentModalData","editRequestModal","deleteRequestModal","deleteCommentModal","displayRequest","displayComment","RequestDetailsClass","ErrorClass","PrivateRoute","children","rest","render","getItem","from","App","path","component","Boolean","hostname","allReducers","combineReducers","allMatches","store","createStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.629769c8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nclass Auth {\r\n  constructor() {\r\n    this.authenticated = false;\r\n    this.red = this.authenticate();\r\n    // localStorage.setItem(\"loggedIn\", false);\r\n    // sessionStorage.setItem(\"loggedIn\", false);\r\n  }\r\n\r\n  // login(cb) {\r\n  //   this.authenticated = true;\r\n  //   cb();\r\n  // }\r\n  setTrue() {\r\n    this.authenticated = true;\r\n    localStorage.setItem(\"loggedIn\", true);\r\n    sessionStorage.setItem(\"loggedIn\", true);\r\n  }\r\n\r\n  // logout(cb) {\r\n  //   this.authenticated = false;\r\n  //   cb();\r\n  // }\r\n\r\n  setFalse() {\r\n    this.authenticated = false;\r\n    localStorage.setItem(\"loggedIn\", false);\r\n    sessionStorage.setItem(\"loggedIn\", false);\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n\r\n  authenticate = async () => {\r\n    // console.log(\"inside authenticate\");\r\n    const res = await axios.get(process.env.REACT_APP_GET_AUTHENTICATE, {\r\n      withCredentials: true\r\n    });\r\n\r\n    // console.log(\"inside authenticate then\");\r\n    // console.log(res.data);\r\n    if (!res.data || res.data.data === \"\" || res.data === undefined) {\r\n      // console.log(\"inside authenticate then if\");\r\n    } else {\r\n      // console.log(\"inside authenticate then else\");\r\n      this.setTrue();\r\n    }\r\n    // cb();\r\n    return this.authenticated;\r\n  };\r\n\r\n  //   authenticate = () => {\r\n  //     console.log(\"inside authenticate\");\r\n  //     axios\r\n  //       .get(process.env.REACT_APP_GET_AUTHENTICATE, { withCredentials: true })\r\n  //       .then(res => {\r\n  //         console.log(\"inside authenticate then\");\r\n  //         console.log(res.data);\r\n  //         // if (res.status === 200) {\r\n  //         if (!res.data || res.data.data === \"\" || res.data === undefined) {\r\n  //           console.log(\"inside authenticate then if\");\r\n  //           //   this.setState({ msg: \"User does not have permission\" });\r\n  //         } else {\r\n  //           console.log(\"inside authenticate then else\");\r\n  //           //   this.setState({ authentic: true });\r\n  //           this.authenticated = true;\r\n  //         }\r\n  //       })\r\n  //       .catch(error => {\r\n  //         console.log(\"inside authenticate catch\", error);\r\n  //         // this.setState({ msg: error });\r\n  //       });\r\n  //   };\r\n}\r\n\r\nexport default new Auth();\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  //   NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Collapse,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\";\r\nimport { Form, FormControl, Button, Image } from \"react-bootstrap\";\r\nimport ball from \"../images/ball33.png\";\r\nimport { NavLink as RouteNavLink, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport auth from \"./auth\";\r\n\r\nclass NavbarDispClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navbarOpen: false,\r\n      userEmail: this.props.location.state.userEmail\r\n      // matchActive: this.props.matchActive,\r\n      // homeActive: this.props.homeActive,\r\n      // requestActive: this.props.requestActive\r\n    };\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      navbarOpen: !this.state.navbarOpen\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    axios\r\n      // .post(process.env.REACT_APP_POST_LOGOUT)\r\n      .get(process.env.REACT_APP_GET_LOGOUT, { withCredentials: true })\r\n      .then(res => {\r\n        // if (res.status === 200) {\r\n        // this.props.history.push(\"/login\");\r\n        // console.log(\"in logout\");\r\n        auth.setFalse();\r\n        // return <Redirect to=\"/login\" />;\r\n        // window.location.href = `/login`;\r\n        this.props.history.replace(\"/login\");\r\n        // } else {\r\n        // console.log(\"error while logging out\", res.status);\r\n        // }\r\n      });\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   this.setState({\r\n  //     allMatchSchedule: \"/allMatchSchedule/\" + this.state.userEmail\r\n  //   })\r\n  // }\r\n\r\n  // activeLink = props => {\r\n  //   if (props === \"home\") {\r\n  //     this.setState({ homeActive: true });\r\n  //   }\r\n  //   if (props === \"match\") {\r\n  //     this.setState({ matchActive: true });\r\n  //   }\r\n  //   if (props === \"request\") {\r\n  //     this.setState({ requestActive: true });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    // this.activeLink(this.props.value);\r\n    // console.log(\"this.props from navbartop\");\r\n    // console.log(this.props);\r\n    //\r\n    // {\r\n    //   this.props.value === \"home\"\r\n    //     ? this.setState({ homeActive: true })\r\n    //     : this.props.value === \"match\"\r\n    //     ? this.setState({ matchActive: true })\r\n    //     : this.props.value === \"request\"\r\n    //     ? this.setState({ requestActive: true })\r\n    //     : this.setState({ homeActive: true });\r\n    // }\r\n    return (\r\n      //   <Navbar color=\"light\" light expand=\"md\">\r\n      <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\r\n        <NavbarBrand\r\n          // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n          href=\"/home\"\r\n        >\r\n          {/* <img src={ball} alt=\"CRICEXTRA\" />*/}\r\n          <Image\r\n            src={ball}\r\n            alt=\"CRICEXTRA\"\r\n            roundedCircle\r\n            height=\"50px\"\r\n            width=\"50px\"\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggleNavbar} />\r\n        <Collapse isOpen={this.state.navbarOpen} navbar>\r\n          {/* <Nav className=\"ml-auto\" navbar> */}\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              {/* <NavLink\r\n                //   taken care by <Navbar> tag 'dark' property, not the color=dark but dark property.\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                href=\"/\"\r\n                active={this.state.homeActive}\r\n              >\r\n                Home\r\n              </NavLink> */}\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                to={{\r\n                  pathname: \"/home\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n                exact\r\n              >\r\n                Home\r\n              </RouteNavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle\r\n                //   taken care by <Navbar> tag 'dark' property, not the color=dark but dark property.\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                nav\r\n                caret\r\n              >\r\n                Schedule\r\n              </DropdownToggle>\r\n              <DropdownMenu\r\n                // style={{ backgroundColor: \"rgba(55, 55, 55, 1.0)\" }}\r\n                right\r\n              >\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    // to={\"/allMatchSchedule/\" + this.state.userEmail}\r\n                    to={{\r\n                      pathname: \"/allMatchSchedule\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    All Matches\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  {/* <NavLink\r\n                    href=\"/myTeamSchedule\"\r\n                    active={this.state.matchActive}\r\n                  >\r\n                    My Team Matches\r\n                  </NavLink> */}\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    to={{\r\n                      pathname: \"/myTeamSchedule\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    My Team Matches\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                {/* <DropdownItem divider /> */}\r\n                {/* <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  Reset\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem>\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                to={{\r\n                  pathname: \"/teamsList\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n              >\r\n                Teams\r\n              </RouteNavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                // to={\"/venuesList/\" + this.state.userEmail}\r\n                to={{\r\n                  pathname: \"/venuesList\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n              >\r\n                Venues\r\n              </RouteNavLink>\r\n            </NavItem>\r\n            {/* <NavItem>\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                // to={\"/venuesList/\" + this.state.userEmail}\r\n                to={{\r\n                  pathname: \"/requests\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n              >\r\n                Requests\r\n              </RouteNavLink>\r\n            </NavItem> */}\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle\r\n                //   taken care by <Navbar> tag 'dark' property, not the color=dark but dark property.\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                nav\r\n                caret\r\n              >\r\n                Requests\r\n              </DropdownToggle>\r\n              <DropdownMenu\r\n                // style={{ backgroundColor: \"rgba(55, 55, 55, 1.0)\" }}\r\n                right\r\n              >\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    // to={\"/allMatchSchedule/\" + this.state.userEmail}\r\n                    to={{\r\n                      pathname: \"/requestOverview\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    Requests Overview\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  {/* <NavLink\r\n                    href=\"/myTeamSchedule\"\r\n                    active={this.state.matchActive}\r\n                  >\r\n                    My Team Matches\r\n                  </NavLink> */}\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    to={{\r\n                      pathname: \"/allRequest\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    All Requests\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  {/* <NavLink\r\n                    href=\"/myTeamSchedule\"\r\n                    active={this.state.matchActive}\r\n                  >\r\n                    My Team Matches\r\n                  </NavLink> */}\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    to={{\r\n                      pathname: \"/myRequest\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    My Requests\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  <RouteNavLink\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    // activeStyle={{ color: \"red\" }}\r\n                    // to={\"/allMatchSchedule/\" + this.state.userEmail}\r\n                    to={{\r\n                      pathname: \"/submitRequest\",\r\n                      state: { userEmail: this.state.userEmail }\r\n                    }}\r\n                    exact\r\n                  >\r\n                    Submit Request\r\n                  </RouteNavLink>\r\n                </DropdownItem>\r\n                {/* <DropdownItem divider /> */}\r\n                {/* <DropdownItem\r\n                // style={{ color: \"rgba(255, 255, 255, 0.9)\" }}\r\n                >\r\n                  Reset\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem>\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                // to={\"/umpiresList/\" + this.state.userEmail}\r\n                to={{\r\n                  pathname: \"/umpiresList\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n              >\r\n                Umpires\r\n              </RouteNavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <RouteNavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                // activeStyle={{ color: \"red\" }}\r\n                // to={\"/playersList/\" + this.state.userEmail}\r\n                to={{\r\n                  pathname: \"/playersList/\",\r\n                  state: { userEmail: this.state.userEmail }\r\n                }}\r\n              >\r\n                Players\r\n              </RouteNavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n          <Button variant=\"outline-info\" className=\"ml-2\" onClick={this.logout}>\r\n            Profile\r\n          </Button>\r\n          <Button variant=\"outline-info\" className=\"ml-2\" onClick={this.logout}>\r\n            Logout\r\n          </Button>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n\r\n  //   navbarDisplay = () => {\r\n  //     return (\r\n  //       <Navbar color=\"light\" light expand=\"md\">\r\n  //         <NavbarBrand href=\"/\">CricExtra</NavbarBrand>\r\n  //         <NavbarToggler onClick={this.toggleNavbar} />\r\n  //         <Collapse isOpen={this.state.navbarOpen} navbar>\r\n  //           <Nav className=\"ml-auto\" navbar>\r\n  //             <NavItem>\r\n  //               <NavLink href=\"/components/\">Components</NavLink>\r\n  //             </NavItem>\r\n  //             <NavItem>\r\n  //               <NavLink href=\"https://github.com/reactstrap/reactstrap\">\r\n  //                 GitHub\r\n  //               </NavLink>\r\n  //             </NavItem>\r\n  //             <UncontrolledDropdown nav inNavbar>\r\n  //               <DropdownToggle nav caret>\r\n  //                 Options\r\n  //               </DropdownToggle>\r\n  //               <DropdownMenu right>\r\n  //                 <DropdownItem>Option 1</DropdownItem>\r\n  //                 <DropdownItem>Option 2</DropdownItem>\r\n  //                 <DropdownItem divider />\r\n  //                 <DropdownItem>Reset</DropdownItem>\r\n  //               </DropdownMenu>\r\n  //             </UncontrolledDropdown>\r\n  //           </Nav>\r\n  //         </Collapse>\r\n  //       </Navbar>\r\n  //     );\r\n  //   };\r\n}\r\n\r\nexport default withRouter(NavbarDispClass);\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGithubAlt,\r\n  faGoogle,\r\n  faFacebook,\r\n  faTwitter,\r\n  faLinkedinIn\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nclass NavbarFooterClass extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      // <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" >\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"jumbotron\">\r\n        {/* <Navbar.Brand href=\"/\">CRICEXTRA</Navbar.Brand> */}\r\n        <div\r\n          // className=\"ml-auto\"\r\n          className=\"navFoot navFootGroup\"\r\n        >\r\n          <Nav.Link href=\"/\">Our Team</Nav.Link>\r\n          <Nav.Link href=\"/\">About Us</Nav.Link>\r\n          <Nav.Link href=\"/\">Contact Us</Nav.Link>\r\n        </div>\r\n        {/* <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form> */}\r\n        {/* <Form inline>\r\n          <FontAwesomeIcon icon={faFacebook} />\r\n          <FontAwesomeIcon icon={faGithubAlt} />\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n          <FontAwesomeIcon icon={faLinkedinIn} />\r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </Form> */}\r\n        <div className=\"navFootGroup\">\r\n          <FontAwesomeIcon icon={faFacebook} className=\"iconCls\" />\r\n          <FontAwesomeIcon icon={faGithubAlt} className=\"iconCls\" />\r\n          <FontAwesomeIcon icon={faTwitter} className=\"iconCls\" />\r\n          <FontAwesomeIcon icon={faLinkedinIn} className=\"iconCls\" />\r\n          <FontAwesomeIcon icon={faGoogle} className=\"iconCls\" />\r\n        </div>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarFooterClass;\r\n","import React, { Component } from \"react\";\r\n// import tblHeaderClass from \"./createTableHeader\";\r\n// import NavbarDispClass from \"../navbarTop\";\r\n// import NavbarFooterClass from \"../navbarFooter\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Alert, Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nclass RequestSubmitTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      header: \"Submit Requests\",\r\n      msg: \"\",\r\n      addRequest: {\r\n        title: \"\",\r\n        requestTemplateId: null,\r\n        description: \"\",\r\n        requestorId: null,\r\n        requestStatusId: null,\r\n        sportType: \"\",\r\n        address: \"\",\r\n        venueId: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        matchId: null,\r\n        created: \"\",\r\n        lastModified: \"\"\r\n      },\r\n      requestDetails: [],\r\n      myRequestDetails: [],\r\n      requestTemplateList: [],\r\n      sportTypeList: [],\r\n      requestCommentList: [],\r\n      requestStatusList: [],\r\n      user: [],\r\n      cityList: [],\r\n      zipList: [],\r\n      countryStateList: [],\r\n      countryList: [],\r\n      matchList: [],\r\n      titleErrMsg: \"\",\r\n      addMsg: \"Added successfully\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page`\r\n    };\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    const { name, value } = e.target;\r\n    const { addRequest } = this.state;\r\n    addRequest[name] = value;\r\n    this.setState({ addRequest });\r\n  };\r\n\r\n  addRequest() {\r\n    console.log(\"user is in addrequest \", this.state.user);\r\n    let { addRequest } = this.state;\r\n    // fillup addRequest fields\r\n    const reqTemp = this.state.requestTemplateList.filter(\r\n      f => f.request_template === addRequest.title\r\n    );\r\n    if (reqTemp.length > 0) {\r\n      addRequest.requestTemplateId = reqTemp[0].id;\r\n    }\r\n    addRequest.requestTemplateId = Number(addRequest.requestTemplateId);\r\n    addRequest.requestorId = this.state.user[0].id;\r\n    addRequest.requestorId = Number(addRequest.requestorId);\r\n    addRequest.requestStatusId = 1; // active\r\n    if (addRequest.matchId === \"--Select--\") {\r\n      addRequest.matchId = null;\r\n    }\r\n    const d = new Date();\r\n    // let date =\r\n    //   d.getFullYear() +\r\n    //   \"-\" +\r\n    //   (d.getMonth() + 1) +\r\n    //   \"-\" +\r\n    //   d.getDate() +\r\n    //   \" \" +\r\n    //   d.toTimeString();\r\n    // date = date.slice(0, 19);\r\n    let date = d.toUTCString();\r\n    addRequest.created = date;\r\n    addRequest.lastModified = date;\r\n    this.setState({ addRequest });\r\n    axios\r\n      .post(process.env.REACT_APP_ADD_NEW_REQUEST, this.state.addRequest)\r\n      .then(res => {\r\n        this.setState({\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.addMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        // axios.get(this.state.matchesLink).then(res => {\r\n        //   this.setState({\r\n        //     matchDetails: res.data\r\n        //   });\r\n        // });\r\n        return this.props.history.push({\r\n          pathname: \"/myRequest\",\r\n          state: {\r\n            userEmail: this.state.userEmail,\r\n            msg: \"request submitted successfully\"\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n      });\r\n  }\r\n\r\n  resetForm() {\r\n    document.getElementById(\"formId\").reset();\r\n  }\r\n\r\n  validate = data => {\r\n    let titleErrMsg = \"\";\r\n\r\n    if (!data.title || data.title === \"\") {\r\n      titleErrMsg = \"please provide a title\";\r\n    }\r\n\r\n    if (titleErrMsg) {\r\n      this.setState({ titleErrMsg });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  submitForm() {\r\n    return (\r\n      <Form id=\"formId\">\r\n        <FormGroup className=\"formRequired\">\r\n          {/* <div className=\"inLine\"> */}\r\n          <Label className=\"labelRequired\" for=\"titleId\">\r\n            Title\r\n          </Label>\r\n          {/* <p className=\"hintPara\">\r\n            (Hint: if not decided, select any date now and change it later)\r\n          </p> */}\r\n          {/* </div> */}\r\n          <Input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"titleId\"\r\n            // placeholder=\"title\"\r\n            // value={this.state.addDetails.date}\r\n            list=\"requesttemplate\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <datalist id=\"requesttemplate\">\r\n            {this.state.requestTemplateList.map(t => (\r\n              <option key={t.id} value={t.request_template}>\r\n                {t.request_template}\r\n              </option>\r\n            ))}\r\n          </datalist>\r\n          <p className=\"validationMsg\">{this.state.titleErrMsg}</p>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"descriptionId\">Description</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            id=\"descriptionId\"\r\n            placeholder=\"Description\"\r\n            onChange={this.handleOnChange}\r\n          ></Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"sporttypedid\">Sport</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"sportType\"\r\n            id=\"sporttypedid\"\r\n            placeholder=\"sport type\"\r\n            list=\"sporttype\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <datalist id=\"sporttype\">\r\n            {this.state.sportTypeList.map(s => (\r\n              <option key={s.id} value={s.sport_type}>\r\n                {/* {s.sport_type} */}\r\n              </option>\r\n            ))}\r\n          </datalist>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"addressid\">Address</Label>\r\n          <p className=\"hintPara\">(Hint: e.g. deer valley community park)</p>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            id=\"addressid\"\r\n            placeholder=\"Address\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n        </FormGroup>\r\n        {/* <FormGroup>\r\n          <Label for=\"venueid\">Venue</Label>\r\n          <p className=\"hintPara\">\r\n            (Hint: can be same or different than address. e.g. cholla park)\r\n          </p>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"venueId\"\r\n            id=\"venueid\"\r\n            placeholder=\"venue\"\r\n            list=\"venuelist\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <datalist id=\"venuelist\">\r\n            {this.state.venueList.map(v => (\r\n              <option key={v.id} value={v.venue_name}>\r\n              </option>\r\n            ))}\r\n          </datalist>\r\n        </FormGroup> */}\r\n        <FormGroup>\r\n          <Label for=\"dateId\">Date</Label>\r\n          <Input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            id=\"dateId\"\r\n            placeholder=\"date placeholder\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <p className=\"validationMsg\">{this.state.dateErrMsg}</p>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"timeId\">Time</Label>\r\n          <p className=\"hintPara\">\r\n            (Hint: e.g. 6pm/6-7pm/around 6-6:30pm/etc.)\r\n          </p>\r\n          <Input\r\n            // type=\"time\"\r\n            type=\"text\"\r\n            name=\"time\"\r\n            id=\"timeId\"\r\n            placeholder=\"time placeholder\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"matchid\">\r\n            Match reference{\" \"}\r\n            {/* <p>\r\n              <i> (optional)</i>\r\n            </p> */}\r\n          </Label>\r\n          <p className=\"hintPara\">\r\n            (Hint: e.g. refer a match for which you need umpire - if you have\r\n            one)\r\n          </p>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"matchId\"\r\n            id=\"matchid\"\r\n            onChange={this.handleOnChange}\r\n          >\r\n            <option key=\"0\">--Select--</option>\r\n            {this.state.matchList.map(m => (\r\n              <option key={m.id} value={m.id}>\r\n                {m.id}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={this.addRequest.bind(this)}>\r\n          Save\r\n        </Button>{\" \"}\r\n        <Button color=\"secondary\" onClick={this.resetForm.bind(this)}>\r\n          Reset\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_REQUEST_LIST\r\n        // {\r\n        //   params: { email_id: this.state.userId }\r\n        // },\r\n        // { withCredentials: true }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          requestDetails: res.data,\r\n          //   filterMatchDetails: res.data,\r\n          myRequestDetails: res.data\r\n            // .map(el => {\r\n            //   return el.match_type;\r\n            // })\r\n            .filter(req => req.email_id === this.state.userEmail)\r\n        });\r\n      });\r\n\r\n    // axios.get(\"http://localhost:4000/getteamlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_REQUEST_TEMPLATE_LIST).then(res => {\r\n      this.setState({\r\n        requestTemplateList: res.data\r\n      });\r\n      // this.state.teamList.splice(0, 0, \"--Select--\");\r\n    });\r\n    axios.get(process.env.REACT_APP_SPORT_TYPE_LIST).then(res => {\r\n      this.setState({\r\n        sportTypeList: res.data\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n      this.setState({\r\n        requestCommentList: res.data\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_REQUEST_STATUS_LIST).then(res => {\r\n      this.setState({\r\n        requestStatusList: res.data\r\n      });\r\n    });\r\n    console.log(\"useremail is in component did update \", this.state.userEmail);\r\n    axios\r\n      .get(process.env.REACT_APP_GET_PLAYER, {\r\n        params: {\r\n          email_id: this.state.userEmail\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          user: res.data\r\n        });\r\n        console.log(\"user fetched from database is \", res.data);\r\n      });\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_ALL_MATCHES, {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          matchList: res.data\r\n        });\r\n      });\r\n  }\r\n\r\n  //   hi = <h1>hi</h1>;\r\n\r\n  render() {\r\n    // this.tbl = new tblHeaderClass();\r\n    return (\r\n      //   <div id=\"pageTop\">\r\n      //     <NavbarDispClass userEmail={this.state.userEmail} />\r\n      <div className=\"container\">\r\n        <h1 className=\"pageHead\">{this.state.header}</h1>\r\n        <this.alrt />\r\n        {this.submitForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestSubmitTblClass);\r\n","import axios from \"axios\";\r\n\r\nexport function getAllRequests() {\r\n  console.log(\"fetching data for all requets\");\r\n  return axios.get(process.env.REACT_APP_REQUEST_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\nexport const AllRequests = axios\r\n  .get(process.env.REACT_APP_REQUEST_LIST)\r\n  .then(res => {\r\n    return res.data;\r\n  });\r\n\r\nexport function getAllRequestComments() {\r\n  console.log(\"fetching data for all comments\");\r\n  return axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\nexport function getAllMatches() {\r\n  console.log(\"fetching data for all matches\");\r\n  return axios.get(process.env.REACT_APP_ALL_MATCHES).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport const AllMatches = axios\r\n  .get(process.env.REACT_APP_ALL_MATCHES)\r\n  .then(res => {\r\n    return res.data;\r\n  });\r\n\r\nexport function getAllTeams() {\r\n  console.log(\"fetching data for all teams\");\r\n  return axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllVenues() {\r\n  console.log(\"fetching data for all venues\");\r\n  return axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllUmpires() {\r\n  console.log(\"fetching data for all umpires\");\r\n  return axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllPlayers() {\r\n  console.log(\"fetching data for all players\");\r\n  return axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllCountryStates() {\r\n  console.log(\"fetching data for all states\");\r\n  return axios.get(process.env.REACT_APP_COUNTRY_STATE_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllCountries() {\r\n  console.log(\"fetching data for all countries\");\r\n  return axios.get(process.env.REACT_APP_COUNTRY_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllUserRoles() {\r\n  console.log(\"fetching data for all user roles\");\r\n  return axios.get(process.env.REACT_APP_USER_ROLE_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllSecretQuestions() {\r\n  console.log(\"fetching data for all secret questions\");\r\n  return axios.get(process.env.REACT_APP_SECRET_QUESTION_LIST).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\nexport function getAllImagesS3() {\r\n  console.log(\"fetching data for all images from S3\");\r\n  return axios.get(process.env.REACT_APP_GET_IMAGE_S3).then(res => {\r\n    return res.data;\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport GC from \"../../images/GC.jpg\";\r\nimport {\r\n  getAllRequests,\r\n  getAllRequestComments,\r\n  getAllPlayers,\r\n  getAllImagesS3\r\n} from \"../reducer/fetchData\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass RequestAllTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      msg: this.props.msg ? this.props.msg : \"\",\r\n      header: \"All Requests\",\r\n      addCommentData: {\r\n        requestId: \"\",\r\n        comment: \"\",\r\n        userId: \"\",\r\n        created: \"\",\r\n        lastModified: \"\"\r\n      },\r\n      addToCommentList: {\r\n        id: null,\r\n        request_id: null,\r\n        comment: \"\",\r\n        user_id: null,\r\n        full_name: \"\",\r\n        email_id: \"\",\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      requestDetails: [],\r\n      myRequestDetails: [],\r\n      user: [],\r\n      commentList: [],\r\n      userImageDataList: [],\r\n      addMsg: \"comment added!\",\r\n      errMsg: \"error while adding added!\"\r\n    };\r\n  }\r\n\r\n  dateConvert(timestamp) {\r\n    // format YYYY-MM-DD HH:MM:SS AM/PM\r\n    // console.log(\"timestamp\");\r\n    // console.log(timestamp);\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    if (today.toDateString() === date.toDateString()) {\r\n      return (\r\n        date.toLocaleTimeString().slice(0, 4) +\r\n        \" \" +\r\n        date.toLocaleTimeString().split(\" \")[1]\r\n      );\r\n    } else {\r\n      return (\r\n        date.toDateString().split(\" \")[1] +\r\n        \" \" +\r\n        date.toDateString().split(\" \")[2]\r\n      );\r\n    }\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { addCommentData } = this.state;\r\n    addCommentData[name] = value;\r\n    this.setState({ addCommentData });\r\n  };\r\n\r\n  // add = (requestid, userid) => {\r\n  add(requestid) {\r\n    const { addCommentData } = this.state;\r\n    if (addCommentData.comment.length > 0) {\r\n      addCommentData.requestId = requestid;\r\n      // addCommentData.userId = userid;\r\n      addCommentData.userId = this.state.user[0].id;\r\n      // addCommentData.userId = 2;\r\n\r\n      const d = new Date();\r\n      let date = d.toUTCString();\r\n      addCommentData.created = date;\r\n      addCommentData.lastModified = date;\r\n\r\n      // add the comment to commentList\r\n      const { addToCommentList } = this.state;\r\n      let { commentList } = this.state;\r\n\r\n      addToCommentList.id =\r\n        this.state.commentList[this.state.commentList.length - 1].id + 1;\r\n      addToCommentList.request_id = requestid;\r\n      addToCommentList.comment = addCommentData.comment;\r\n      addToCommentList.user_id = this.state.user[0].id;\r\n      addToCommentList.full_name = this.state.user[0].full_name;\r\n      addToCommentList.email_id = this.state.user[0].email_id;\r\n      addToCommentList.created = date;\r\n      addToCommentList.last_modified = date;\r\n\r\n      commentList.push(addToCommentList);\r\n\r\n      this.setState({ addCommentData, addToCommentList, commentList });\r\n      axios\r\n        .post(process.env.REACT_APP_ADD_NEW_COMMENT, this.state.addCommentData)\r\n        .then(res => {\r\n          this.setState({\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          return this.props.history.push({\r\n            pathname: `/request/${requestid}`,\r\n            state: {\r\n              userEmail: this.state.userEmail,\r\n              msg: this.state.addMsg,\r\n              requestData: this.state.requestDetails.filter(\r\n                r => r.id === requestid\r\n              ),\r\n              comment: this.state.commentList.filter(\r\n                c => c.request_id === requestid\r\n              ),\r\n              user: this.state.user\r\n            }\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  // resetForm() {\r\n  //   document.getElementById(\"formId\").reset();\r\n  // }\r\n  handleKeyDown(e) {\r\n    const heightLimit = 130;\r\n    e.target.style.height = \"inherit\";\r\n    e.target.style.height = `${e.target.scrollHeight + 10}px`;\r\n    // In case you have a limitation\r\n    e.target.style.height = `${Math.min(e.target.scrollHeight, heightLimit)}px`;\r\n  }\r\n\r\n  requestTbl(data) {\r\n    return data.map((row, i) => {\r\n      let sendData = [];\r\n      sendData.push(row);\r\n      // console.log(this.state.requestDetails.filter(r => r.id === row.id));\r\n      return (\r\n        <div key={row.id} className=\"disp-div\">\r\n          <div className=\"displayFlex\">\r\n            <div className=\"disp-div-requestor\">\r\n              <div>\r\n                <img\r\n                  src={\r\n                    this.state.userImageDataList.filter(\r\n                      u => u.email_id === row.email_id\r\n                    ).length > 0\r\n                      ? this.state.userImageDataList.filter(\r\n                          u => u.email_id === row.email_id\r\n                        )[0].image_data\r\n                      : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                        GC\r\n                  }\r\n                  className=\"disp-div-photo\"\r\n                  alt={\r\n                    this.state.userImageDataList.filter(\r\n                      u => u.email_id === row.email_id\r\n                    ).length > 0\r\n                      ? this.state.userImageDataList.filter(\r\n                          u => u.email_id === row.email_id\r\n                        )[0].image_data\r\n                      : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                        GC\r\n                  }\r\n                />\r\n              </div>\r\n              <NavLink\r\n                className=\"fontSmall\"\r\n                to={{\r\n                  pathname: `/player/${row.email_id}`,\r\n                  state: {\r\n                    userEmail: this.state.userEmail\r\n                  }\r\n                }}\r\n              >\r\n                {row.requestor}\r\n              </NavLink>\r\n            </div>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={{\r\n                pathname: `/request/${row.id}`,\r\n                state: {\r\n                  userEmail: this.state.userEmail,\r\n                  // requestData: data.filter(\r\n                  //   r => r.id === row.id\r\n                  // )\r\n                  requestData: sendData,\r\n                  comment: this.state.commentList.filter(\r\n                    c => c.request_id === row.id\r\n                  ),\r\n                  user: this.state.user\r\n                }\r\n              }}\r\n            >\r\n              <Row className=\"disp-div-row\">\r\n                <Col xs=\"10\" className=\"disp-div-row-col title\">\r\n                  {row.title}\r\n                </Col>\r\n                <Col xs=\"2\" className=\"disp-div-row-col textAlignRight\">\r\n                  {/* {row.created.split(\" \")[0]} */}\r\n                  {this.dateConvert(row.created)}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"disp-div-row\">\r\n                <Col className=\"disp-div-row-col sportType\">\r\n                  {row.sport_type ? row.sport_type : \"No sport selected\"}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"disp-div-row\">\r\n                <Col xs=\"6\" className=\"disp-div-row-col\">\r\n                  <i>Venue:</i> {row.address ? row.address : \"N/A\"}\r\n                </Col>\r\n                <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                  <i>Date:</i> {row.date ? row.date : \"N/A\"}\r\n                </Col>\r\n                <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                  <i>Time:</i> {row.time ? row.time : \"N/A\"}\r\n                </Col>\r\n              </Row>\r\n              {/* <Row className=\"disp-div-row\">\r\n              <Col className=\"disp-div-row-col\">\r\n                {row.description ? row.description : \"No description added\"}\r\n              </Col>\r\n            </Row> */}\r\n            </NavLink>\r\n          </div>\r\n          <Row className=\"disp-div-row\">\r\n            <Col className=\"disp-div-row-col\">\r\n              {/* <Form id=\"formId\" onSubmit={this.add.bind(this, row.id)}> */}\r\n              {/* <Form id=\"formId\"> */}\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for={\"comment\" + row.id}>Comment</Label>\r\n                  <div className=\"dispFlex comments\">\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"comment\"\r\n                      className=\"commentId\"\r\n                      id={\"comment\" + row.id}\r\n                      placeholder=\"Comment\"\r\n                      onKeyDown={this.handleKeyDown}\r\n                      onChange={this.handleOnChange}\r\n                    />\r\n                    <Button\r\n                      // type=\"submit\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      // onClick={this.add(row.id, this.state.user[0].id)}\r\n                      onClick={this.add.bind(this, row.id)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      type=\"reset\"\r\n                      color=\"secondary\"\r\n                      size=\"sm\"\r\n                      // onClick={this.resetForm.bind(this)}\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(\"inside componentdidmount\");\r\n    // axios\r\n    //   .get(\r\n    //     process.env.REACT_APP_REQUEST_LIST\r\n    //     // {\r\n    //     //   params: { email_id: this.state.userId }\r\n    //     // },\r\n    //     // { withCredentials: true }\r\n    //   )\r\n    //   .then(res => {\r\n    //     this.setState({\r\n    //       requestDetails: res.data,\r\n    //       //   filterMatchDetails: res.data,\r\n    //       myRequestDetails: res.data\r\n    //         // .map(el => {\r\n    //         //   return el.match_type;\r\n    //         // })\r\n    //         .filter(req => req.email_id === this.state.userEmail)\r\n    //     });\r\n    //   });\r\n    getAllRequests().then(res => {\r\n      this.setState({ requestDetails: res });\r\n    });\r\n\r\n    console.log(\"from redux\");\r\n    console.log(this.props);\r\n    // axios\r\n    //   .get(process.env.REACT_APP_GET_PLAYER, {\r\n    //     params: {\r\n    //       email_id: this.state.userEmail\r\n    //     }\r\n    //   })\r\n    //   .then(res => {\r\n    //     this.setState({\r\n    //       user: res.data\r\n    //     });\r\n    //   });\r\n    getAllPlayers().then(res => {\r\n      let row = res.filter(item => item.email_id === this.state.userEmail);\r\n      this.setState({ user: row });\r\n    });\r\n    // axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n    //   this.setState({\r\n    //     commentList: res.data\r\n    //   });\r\n    // });\r\n    getAllRequestComments().then(res => {\r\n      this.setState({ commentList: res });\r\n    });\r\n    // axios.get(process.env.REACT_APP_GET_IMAGE_S3).then(res => {\r\n    //   this.setState({\r\n    //     userImageDataList: res.data\r\n    //   });\r\n    // });\r\n    getAllImagesS3().then(res => {\r\n      this.setState({ userImageDataList: res });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <h1 className=\"pageHead\">{this.state.header}</h1>\r\n          <this.alrt />\r\n          {this.requestTbl(this.state.requestDetails)}\r\n          {/* {this.getDataFromOutside()} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    requests: state.allRequests\r\n  };\r\n}\r\n\r\n// export default withRouter(RequestAllTblClass);\r\nexport default withRouter(connect(mapStateToProps)(RequestAllTblClass));\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport GC from \"../../images/GC.jpg\";\r\n\r\nclass RequestMyTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      msg: this.props.msg ? this.props.msg : \"\",\r\n      header: \"My Requests\",\r\n      addCommentData: {\r\n        requestId: \"\",\r\n        comment: \"\",\r\n        userId: \"\",\r\n        created: \"\",\r\n        lastModified: \"\"\r\n      },\r\n      addToCommentList: {\r\n        id: null,\r\n        request_id: null,\r\n        comment: \"\",\r\n        user_id: null,\r\n        full_name: \"\",\r\n        email_id: \"\",\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      requestDetails: [],\r\n      myRequestDetails: [],\r\n      user: [],\r\n      commentList: [],\r\n      userImageData: [],\r\n      addMsg: \"comment added!\",\r\n      errMsg: \"error while adding added!\"\r\n    };\r\n  }\r\n\r\n  dateConvert(timestamp) {\r\n    // format YYYY-MM-DD HH:MM:SS AM/PM\r\n    // console.log(\"timestamp\");\r\n    // console.log(timestamp);\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    if (today.toDateString() === date.toDateString()) {\r\n      return (\r\n        date.toLocaleTimeString().slice(0, 4) +\r\n        \" \" +\r\n        date.toLocaleTimeString().split(\" \")[1]\r\n      );\r\n    } else {\r\n      return (\r\n        date.toDateString().split(\" \")[1] +\r\n        \" \" +\r\n        date.toDateString().split(\" \")[2]\r\n      );\r\n    }\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { addCommentData } = this.state;\r\n    addCommentData[name] = value;\r\n    this.setState({ addCommentData });\r\n  };\r\n\r\n  // add = (requestid, userid) => {\r\n  add(requestid) {\r\n    const { addCommentData } = this.state;\r\n    if (addCommentData.comment.length > 0) {\r\n      addCommentData.requestId = requestid;\r\n      // addCommentData.userId = userid;\r\n      addCommentData.userId = this.state.user[0].id;\r\n      // addCommentData.userId = 2;\r\n\r\n      const d = new Date();\r\n      let date = d.toUTCString();\r\n      addCommentData.created = date;\r\n      addCommentData.lastModified = date;\r\n\r\n      // add the comment to commentList\r\n      const { addToCommentList } = this.state;\r\n      let { commentList } = this.state;\r\n\r\n      addToCommentList.id =\r\n        this.state.commentList[this.state.commentList.length - 1].id + 1;\r\n      addToCommentList.request_id = requestid;\r\n      addToCommentList.comment = addCommentData.comment;\r\n      addToCommentList.user_id = this.state.user[0].id;\r\n      addToCommentList.full_name = this.state.user[0].full_name;\r\n      addToCommentList.email_id = this.state.user[0].email_id;\r\n      addToCommentList.created = date;\r\n      addToCommentList.last_modified = date;\r\n\r\n      commentList.push(addToCommentList);\r\n\r\n      this.setState({ addCommentData, addToCommentList, commentList });\r\n      axios\r\n        .post(process.env.REACT_APP_ADD_NEW_COMMENT, this.state.addCommentData)\r\n        .then(res => {\r\n          this.setState({\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          return this.props.history.push({\r\n            pathname: `/request/${requestid}`,\r\n            state: {\r\n              userEmail: this.state.userEmail,\r\n              msg: this.state.addMsg,\r\n              requestData: this.state.requestDetails.filter(\r\n                r => r.id === requestid\r\n              ),\r\n              comment: this.state.commentList.filter(\r\n                c => c.request_id === requestid\r\n              ),\r\n              user: this.state.user\r\n            }\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  // resetForm() {\r\n  //   document.getElementById(\"formId\").reset();\r\n  // }\r\n  handleKeyDown(e) {\r\n    const heightLimit = 130;\r\n    e.target.style.height = \"inherit\";\r\n    e.target.style.height = `${e.target.scrollHeight + 10}px`;\r\n    // In case you have a limitation\r\n    e.target.style.height = `${Math.min(e.target.scrollHeight, heightLimit)}px`;\r\n  }\r\n\r\n  requestTbl(data) {\r\n    return data.map((row, i) => {\r\n      let sendData = [];\r\n      sendData.push(row);\r\n      // console.log(this.state.requestDetails.filter(r => r.id === row.id));\r\n      return (\r\n        <div key={row.id} className=\"disp-div\">\r\n          <div className=\"displayFlex\">\r\n            <div>\r\n              <div>\r\n                <img\r\n                  src={\r\n                    this.state.userImageData.length > 0\r\n                      ? this.state.userImageData[0].image_data\r\n                      : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                        GC\r\n                  }\r\n                  className=\"disp-div-photo\"\r\n                  alt={\r\n                    this.state.userImageData.length > 0\r\n                      ? this.state.userImageData[0].image_data\r\n                      : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                        GC\r\n                  }\r\n                />\r\n              </div>\r\n              <br />\r\n              <NavLink\r\n                to={{\r\n                  pathname: `/player/${row.email_id}`,\r\n                  state: {\r\n                    userEmail: this.state.userEmail\r\n                  }\r\n                }}\r\n              >\r\n                {row.requestor}\r\n              </NavLink>\r\n            </div>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={{\r\n                pathname: `/request/${row.id}`,\r\n                state: {\r\n                  userEmail: this.state.userEmail,\r\n                  // requestData: data.filter(\r\n                  //   r => r.id === row.id\r\n                  // )\r\n                  requestData: sendData,\r\n                  comment: this.state.commentList.filter(\r\n                    c => c.request_id === row.id\r\n                  ),\r\n                  user: this.state.user\r\n                }\r\n              }}\r\n            >\r\n              <Row className=\"disp-div-row\">\r\n                <Col xs=\"10\" className=\"disp-div-row-col title\">\r\n                  {row.title}\r\n                </Col>\r\n                <Col xs=\"2\" className=\"disp-div-row-col textAlignRight\">\r\n                  {/* {row.created.split(\" \")[0]} */}\r\n                  {this.dateConvert(row.created)}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"disp-div-row\">\r\n                <Col className=\"disp-div-row-col sportType\">\r\n                  {row.sport_type ? row.sport_type : \"No sport selected\"}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"disp-div-row\">\r\n                <Col xs=\"6\" className=\"disp-div-row-col\">\r\n                  <i>Venue:</i> {row.address ? row.address : \"N/A\"}\r\n                </Col>\r\n                <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                  <i>Date:</i> {row.date ? row.date : \"N/A\"}\r\n                </Col>\r\n                <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                  <i>Time:</i> {row.time ? row.time : \"N/A\"}\r\n                </Col>\r\n              </Row>\r\n              {/* <Row className=\"disp-div-row\">\r\n              <Col className=\"disp-div-row-col\">\r\n                {row.description ? row.description : \"No description added\"}\r\n              </Col>\r\n            </Row> */}\r\n            </NavLink>\r\n          </div>\r\n          <Row className=\"disp-div-row\">\r\n            <Col className=\"disp-div-row-col\">\r\n              {/* <Form id=\"formId\" onSubmit={this.add.bind(this, row.id)}> */}\r\n              {/* <Form id=\"formId\"> */}\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for={\"comment\" + row.id}>Comment</Label>\r\n                  <div className=\"dispFlex comments\">\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"comment\"\r\n                      className=\"commentId\"\r\n                      id={\"comment\" + row.id}\r\n                      placeholder=\"Comment\"\r\n                      onKeyDown={this.handleKeyDown}\r\n                      onChange={this.handleOnChange}\r\n                    />\r\n                    <Button\r\n                      // type=\"submit\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      // onClick={this.add(row.id, this.state.user[0].id)}\r\n                      onClick={this.add.bind(this, row.id)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      type=\"reset\"\r\n                      color=\"secondary\"\r\n                      size=\"sm\"\r\n                      // onClick={this.resetForm.bind(this)}\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                </FormGroup>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(\"inside componentdidmount\");\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_REQUEST_LIST\r\n        // {\r\n        //   params: { email_id: this.state.userId }\r\n        // },\r\n        // { withCredentials: true }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          requestDetails: res.data,\r\n          //   filterMatchDetails: res.data,\r\n          myRequestDetails: res.data\r\n            // .map(el => {\r\n            //   return el.match_type;\r\n            // })\r\n            .filter(req => req.email_id === this.state.userEmail)\r\n        });\r\n      });\r\n    axios\r\n      .get(process.env.REACT_APP_GET_PLAYER, {\r\n        params: {\r\n          email_id: this.state.userEmail\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          user: res.data\r\n        });\r\n      });\r\n\r\n    axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n      this.setState({\r\n        commentList: res.data\r\n      });\r\n    });\r\n    axios\r\n      .get(process.env.REACT_APP_GET_IMAGE_S3, {\r\n        params: {\r\n          email_id: this.state.userEmail\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          userImageData: res.data\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"this.state.myRequestDetails\");\r\n    // console.log(this.state.requestDetails);\r\n    // console.log(this.state.myRequestDetails);\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <h1 className=\"pageHead\">{this.state.header}</h1>\r\n          <this.alrt />\r\n          {this.requestTbl(this.state.myRequestDetails)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestMyTblClass);\r\n","import React, { Component } from \"react\";\r\nimport RequestSubmitTblClass from \"./requestSubmitTbl\";\r\nimport RequestAllTblClass from \"./requestAllTbl\";\r\nimport RequestMyTblClass from \"./requestMyTbl\";\r\nimport { Alert } from \"reactstrap\";\r\nclass RequestOverviewTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      header: \"Requests Overview\",\r\n      msg: \"\"\r\n    };\r\n  }\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"pageHead\">{this.state.header}</h1>\r\n        <this.alrt />\r\n        <div className=\"displayFlex\">\r\n          <div className=\"requestOverviewAllRequest mr-2 requestOverviewChild\">\r\n            <RequestAllTblClass userEmail={this.state.userEmail} />\r\n          </div>\r\n          <div className=\"requestOverviewMyRequest mr-2 requestOverviewChild\">\r\n            <RequestMyTblClass userEmail={this.state.userEmail} />\r\n          </div>\r\n          <div className=\"requestOverviewSubmitRequest requestOverviewChild\">\r\n            <RequestSubmitTblClass userEmail={this.state.userEmail} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestOverviewTblClass;\r\n","import React, { Component } from \"react\";\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\n// import RequestSubmitTblClass from \"./tables/requestSubmitTbl\";\r\n// import RequestAllTblClass from \"./tables/requestAllTbl\";\r\n// import RequestMyTblClass from \"./tables/requestMyTbl\";\r\nimport RequestOverviewTblClass from \"./tables/requestOverviewTbl\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass RequestOverviewClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Requests Overview\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        <RequestOverviewTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        {/* <RequestAllTblClass userEmail={this.state.userEmail} />\r\n        <RequestMyTblClass userEmail={this.state.userEmail} />\r\n        <RequestSubmitTblClass userEmail={this.state.userEmail} /> */}\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestOverviewClass);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// import MatchScheduleTblClass from \"./tables/matchScheduleTbl\";\r\n// import MyTeamMatchPageClass from \"./myTeamMatchPage\";\r\nimport RequestOverviewClass from \"./requestOverview\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import { Alert } from \"reactstrap\";\r\n// import AddBtnClass from \"./addBtn\";\r\n\r\nclass HomePageClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // matchDetails: [],\r\n      // header: \"My Team Schedule\",\r\n      // emailId: this.props.emailId\r\n      // userEmail: this.props.match.params.userEmail\r\n      userEmail: this.props.location.state\r\n        ? this.props.location.state.userEmail\r\n        : \"\"\r\n      // message: \"\"\r\n      // dummyV: \"before add/update\"\r\n    };\r\n  }\r\n\r\n  // ******instead of using constructor and super() to bind standalone functions, arrow functions can also be used\r\n  // ******using constructor and super() to bind standalone functions\r\n  // constructor() {\r\n  //   super();\r\n  //   this.toggleEditMatchModal = this.toggleEditMatchModal.bind(this);\r\n  // }\r\n  // ******using arrow functions\r\n  // toggleEditMatchModal = () => {\r\n  //   this.setState(prevState => ({\r\n  //     editMatchModal: !prevState.editMatchModal\r\n  //   }));\r\n  // }\r\n  // ****** or you can use .bind(this) in every time the function is called. e.g.\r\n  // <ModalHeader toggle={this.toggleEditMatchModal.bind(this)}>\r\n\r\n  // messageFromChild = message => {\r\n  //   // this.forceUpdate();\r\n  //   this.setState({\r\n  //     message: message\r\n  //   });\r\n  //   // return <Alert color=\"info\">{message}</Alert>;\r\n  // };\r\n  // alrt = () => {\r\n  //   if (this.state.message !== \"\") {\r\n  //     return <Alert color=\"info\">{this.state.message}</Alert>;\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({ emailId: this.props.match.params });\r\n  // }\r\n\r\n  componentCalled = () => {\r\n    return (\r\n      <div>\r\n        {this.props.history.push({\r\n          pathname: \"/myTeamSchedule\",\r\n          state: { userEmail: this.state.userEmail }\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // this.tbl = new tblHeaderClass();\r\n    //this.nvbar = new NavbarDispClass();\r\n    console.log(\"this.props from homepage\");\r\n    console.log(this.props);\r\n\r\n    //return <h1>Hello WOrld</h1>;\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        {/* <h5 className=\"lead \">{this.state.message}</h5> */}\r\n        {/* <this.alrt /> */}\r\n        {/* <MatchScheduleTblClass\r\n          matchesLink={process.env.REACT_APP_MY_TEAM_MATCHES}\r\n          header={this.state.header}\r\n          // fetchmessage={this.messageFromChild}\r\n          // dummyVar={this.state.dummyV}\r\n        /> */}\r\n        {/* <MyTeamMatchPageClass userEmail={this.state.userEmail} /> */}\r\n        <RequestOverviewClass userEmail={this.state.userEmail} />\r\n        {/* {this.componentCalled()} */}\r\n        {/* <AddBtnClass /> */}\r\n        {/* <p>{this.state.dummyV}</p> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(HomePageClass);\r\n","import React, { Component } from \"react\";\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\n// import { NavLink as RouteNavLink } from \"react-router-dom\";\r\n\r\nclass HomeClass extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"mainHome\">\r\n        <NavbarDispClass />\r\n        <header className=\"masthead\">\r\n          <div className=\"container h-100\">\r\n            <div className=\"row h-100 align-items-center justify-content-center text-center\">\r\n              <div className=\"col-lg-10 align-self-end\">\r\n                <div className=\"homeBtn-box\">\r\n                  <div class=\"openReqSec\"></div>\r\n                  {/* <a className=\"homeBtn js-scroll-trigger\" href=\"/Home\">\r\n                    My Requests\r\n                  </a>\r\n                  <a className=\"homeBtn js-scroll-trigger\" href=\"/Home\">\r\n                    Open Requests\r\n                  </a>\r\n                  <a className=\"homeBtn js-scroll-trigger\" href=\"/Home\">\r\n                    Submit Requests\r\n                  </a> */}\r\n                </div>\r\n                {/* <h1 className=\"text-uppercase text-white font-weight-bold\">\r\n                  Your Favorite Source of Free Bootstrap Themes\r\n                </h1> */}\r\n                <hr className=\"divider my-4\" />\r\n              </div>\r\n              <div className=\"col-lg-8 align-self-baseline\">\r\n                {/* <p className=\"text-white-75 font-weight-light mb-5\">\r\n                  Start Bootstrap can help you build better websites using the\r\n                  Bootstrap framework! Just download a theme and start\r\n                  customizing, no strings attached!\r\n                </p> */}\r\n                <a\r\n                  //   className=\"btn btn-primary btn-xl js-scroll-trigger\"\r\n                  className=\"homeBtn js-scroll-trigger\"\r\n                  href=\"/Home\"\r\n                >\r\n                  Find Out More\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeClass;\r\n","import React, { Component } from \"react\";\r\n\r\nclass tblHeaderClass extends Component {\r\n  state = {};\r\n\r\n  createHeader(colHead) {\r\n    let heads = colHead.map(col => {\r\n      return <th key={col}>{col}</th>;\r\n    });\r\n    return heads;\r\n  }\r\n\r\n  // render() {\r\n  //     return (  );\r\n  // }\r\n}\r\n\r\nexport default tblHeaderClass;\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\nimport { Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\n// function getData() {\r\n//   useEffect(() => {\r\n//     axios.get(\"http://localhost:4000\").then(res => {\r\n//       this.setState({\r\n//         matchDetails: res.data\r\n//       });\r\n//     });\r\n//   }, []);\r\n// }\r\nclass MatchScheduleTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colHead: [\r\n        // \"Id\",\r\n        \"Date\",\r\n        \"Time\",\r\n        \"Home Team\",\r\n        \"Away Team\",\r\n        \"Venue\",\r\n        \"Address\",\r\n        \"Umpire\",\r\n        \"Match Type\"\r\n      ],\r\n      columns: [\r\n        \"date\",\r\n        \"time\",\r\n        \"Home_Team\",\r\n        \"Away_Team\",\r\n        \"venue_name\",\r\n        \"Address\",\r\n        \"full_name\",\r\n        \"match_type\"\r\n      ],\r\n      editModalDisplay: false,\r\n      deleteModalDisplay: false,\r\n      addModalDisplay: false,\r\n      filterModalDisplay: false,\r\n      addDetails: {\r\n        date: \"\",\r\n        time: \"\",\r\n        hTeam: null,\r\n        aTeam: null,\r\n        venue: null,\r\n        umpire: null,\r\n        matchType: \"\"\r\n      },\r\n      filterDetails: {\r\n        date: \"\",\r\n        time: \"\",\r\n        teamId: null,\r\n        venue: null,\r\n        umpire: null,\r\n        matchType: \"\"\r\n      },\r\n\r\n      editDetails: {\r\n        id: null,\r\n        date: \"\",\r\n        time: \"\",\r\n        hTeam: null,\r\n        aTeam: null,\r\n        venue: null,\r\n        umpire: null,\r\n        mType: \"\"\r\n      },\r\n      modalData: {\r\n        id: null,\r\n        date: \"\",\r\n        time: \"\",\r\n        hTeam: \"\",\r\n        aTeam: \"\",\r\n        venue: \"\",\r\n        umpire: \"\",\r\n        mType: \"\"\r\n      },\r\n      dateErrMsg: \"\",\r\n      timeErrMsg: \"\",\r\n      hTeamErrMsg: \"\",\r\n      aTeamErrMsg: \"\",\r\n      venueErrMsg: \"\",\r\n      umpireErrMsg: \"\",\r\n      mTypeErrMsg: \"\",\r\n      matchDetails: [],\r\n      filterMatchDetails: [],\r\n      matchTypeValues: [],\r\n      matchTypesList: [],\r\n      teamList: [],\r\n      venueList: [],\r\n      umpireList: [],\r\n      msg: \"\",\r\n      addMsg: \"New match added successfully!\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page`,\r\n      updateMsg: \"Match details updated successfully\",\r\n      delMsg: \"Match deleted!\",\r\n      matchesLink: this.props.matchesLink,\r\n      userEmail: this.props.userEmail,\r\n      header: this.props.header,\r\n      fromPage: this.props.fromPage,\r\n      showAdd: true,\r\n      showEdit: false,\r\n      showDelete: false\r\n    };\r\n  }\r\n\r\n  adminUser() {\r\n    if (this.state.userEmail === process.env.REACT_APP_ADMIN) {\r\n      this.setState({ showEdit: true, showDelete: true });\r\n    }\r\n  }\r\n\r\n  onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  toggleEditMatchModal() {\r\n    this.setState(prevState => ({\r\n      editModalDisplay: !prevState.editModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteMatchModal() {\r\n    this.setState(prevState => ({\r\n      deleteModalDisplay: !prevState.deleteModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleAddMatchModal() {\r\n    this.setState(prevState => ({\r\n      addModalDisplay: !prevState.addModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleFilterMatchModal() {\r\n    this.setState(prevState => ({\r\n      filterModalDisplay: !prevState.filterModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      dateErrMsg: \"\",\r\n      timeErrMsg: \"\",\r\n      hTeamErrMsg: \"\",\r\n      aTeamErrMsg: \"\",\r\n      venueErrMsg: \"\",\r\n      umpireErrMsg: \"\",\r\n      mTypeErrMsg: \"\",\r\n      addDetails: {\r\n        date: \"\",\r\n        time: \"\",\r\n        hTeam: null,\r\n        aTeam: null,\r\n        venue: null,\r\n        umpire: null,\r\n        matchType: \"\"\r\n      },\r\n      filterDetails: {\r\n        date: \"\",\r\n        time: \"\",\r\n        teamId: null,\r\n        venue: null,\r\n        umpire: null,\r\n        matchType: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  validate = data => {\r\n    let dateErrMsg = \"\";\r\n    let timeErrMsg = \"\";\r\n    let hTeamErrMsg = \"\";\r\n    let aTeamErrMsg = \"\";\r\n    let venueErrMsg = \"\";\r\n    let umpireErrMsg = \"\";\r\n    let mTypeErrMsg = \"\";\r\n\r\n    if (!data.date || data.date === \"\") {\r\n      dateErrMsg = \"please enter a valid date in mm/dd/yyyy format\";\r\n    }\r\n\r\n    if (!data.time) {\r\n      timeErrMsg = \"please enter a valid time in HH:MM:AM/PM format\";\r\n    }\r\n    if (!data.hTeam || data.hTeam === \"--Select--\") {\r\n      hTeamErrMsg = \"please select a team (e.g. your team)\";\r\n    }\r\n\r\n    if (!data.aTeam || data.aTeam === \"--Select--\") {\r\n      aTeamErrMsg = `please select a team (e.g. opponent team) or select\r\n      own team if opponent not yet decided or its a practise session`;\r\n    }\r\n\r\n    if (\r\n      dateErrMsg ||\r\n      timeErrMsg ||\r\n      hTeamErrMsg ||\r\n      aTeamErrMsg ||\r\n      venueErrMsg ||\r\n      umpireErrMsg ||\r\n      mTypeErrMsg\r\n    ) {\r\n      this.setState({\r\n        dateErrMsg,\r\n        timeErrMsg,\r\n        hTeamErrMsg,\r\n        aTeamErrMsg,\r\n        venueErrMsg,\r\n        umpireErrMsg,\r\n        mTypeErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  setEditMatchModalData(id, date, time, hTeam, aTeam, venue, umpire, mType) {\r\n    this.setState({\r\n      modalData: { id, date, time, hTeam, aTeam, venue, umpire, mType }\r\n    });\r\n    this.toggleEditMatchModal();\r\n  }\r\n  setDeleteMatchModalData(id, date, time, hTeam, aTeam, venue, umpire, mType) {\r\n    this.setState({\r\n      modalData: { id, date, time, hTeam, aTeam, venue, umpire, mType }\r\n    });\r\n    this.toggleDeleteMatchModal();\r\n  }\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n\r\n  editMatch() {\r\n    let isValid = this.validate(this.state.modalData);\r\n    if (isValid) {\r\n      let { modalData } = this.state;\r\n      let { editDetails } = this.state;\r\n\r\n      editDetails.id = modalData.id;\r\n      editDetails.date = modalData.date;\r\n      editDetails.time = modalData.time;\r\n      if (this.hasValue(modalData.hTeam)) {\r\n        editDetails.hTeam = this.state.teamList.filter(\r\n          team => team.team_name === modalData.hTeam\r\n        )[0].id;\r\n      }\r\n      // this.hasValue(modalData.hTeam)\r\n      //   ? (editDetails.hTeam = this.state.teamList.filter(\r\n      //       team => team.team_name === modalData.hTeam\r\n      //     )[0].id)\r\n      //   : (editDetails.hTeam = null);\r\n      if (this.hasValue(modalData.aTeam)) {\r\n        editDetails.aTeam = this.state.teamList.filter(\r\n          team => team.team_name === modalData.aTeam\r\n        )[0].id;\r\n      }\r\n      // this.hasValue(modalData.aTeam)\r\n      //   ? (editDetails.aTeam = this.state.teamList.filter(\r\n      //       team => team.team_name === modalData.aTeam\r\n      //     )[0].id)\r\n      //   : (editDetails.aTeam = null);\r\n\r\n      this.hasValue(modalData.venue)\r\n        ? (editDetails.venue = this.state.venueList.filter(\r\n            venue => venue.venue_name === modalData.venue\r\n          )[0].id)\r\n        : (editDetails.venue = null);\r\n\r\n      this.hasValue(modalData.umpire)\r\n        ? (editDetails.umpire = this.state.umpireList.filter(\r\n            umpire => umpire.full_name === modalData.umpire\r\n          )[0].id)\r\n        : (editDetails.umpire = null);\r\n\r\n      this.hasValue(modalData.mType)\r\n        ? (editDetails.mType = modalData.mType)\r\n        : (editDetails.mType = \"\");\r\n\r\n      this.setState({ editDetails });\r\n      console.log(this.state.modalData);\r\n      console.log(this.state.editDetails);\r\n      // const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      axios\r\n        .put(\r\n          // \"http://localhost:4000/put/updatematch\",\r\n          process.env.REACT_APP_UPDATE_MATCH,\r\n          this.state.editDetails\r\n          // config\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.updateMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(this.state.matchesLink).then(res => {\r\n            this.setState({\r\n              matchDetails: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditMatchModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg:\r\n              this.state.errMsg +\r\n              error.request.status +\r\n              \". \" +\r\n              error.request.responseText\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditMatchModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  deleteMatch() {\r\n    axios\r\n      .delete(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_DELETE_MATCH,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          // msg: this.state.addMsg + res.data\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.delMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        axios.get(this.state.matchesLink).then(res => {\r\n          this.setState({\r\n            matchDetails: res.data\r\n          });\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleDeleteMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleDeleteMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  addNewMatch() {\r\n    let isValid = this.validate(this.state.addDetails);\r\n    if (isValid) {\r\n      console.log(this.state.addDetails);\r\n      axios\r\n        .post(\r\n          // \"http://localhost:4000/post/addnewmatch\",\r\n          process.env.REACT_APP_ADD_NEW_MATCH,\r\n          this.state.addDetails\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.addMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(this.state.matchesLink).then(res => {\r\n            this.setState({\r\n              matchDetails: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddMatchModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddMatchModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n  filterData() {\r\n    console.log(this.state.filterDetails.teamId);\r\n    console.log(this.state.filterDetails.venue);\r\n    axios\r\n      .get(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_GET_MATCH,\r\n        {\r\n          withCredentials: true,\r\n          params: {\r\n            date: this.state.filterDetails.date,\r\n            time: this.state.filterDetails.time,\r\n            team_id: this.state.filterDetails.teamId,\r\n            venue_id: this.state.filterDetails.venue,\r\n            match_type: this.state.filterDetails.matchType,\r\n            umpire_id: this.state.filterDetails.umpire\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          matchDetails: res.data\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  td = (details, teams, venues, umpires, columns) => {\r\n    return columns.map((item, i) => {\r\n      let href = \"\";\r\n      let tdLinkCls = \"\";\r\n      let id = \"\";\r\n      let user_id = \"\";\r\n      if (item === \"Home_Team\" || item === \"Away_Team\") {\r\n        if (teams.length > 0) {\r\n          id = teams\r\n            .filter(t => t.team_name === details[item])[0]\r\n            .id.toString();\r\n        }\r\n        href = process.env.REACT_APP_GET_TEAM + id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      if (item === \"venue_name\") {\r\n        // console.log(venues);\r\n        if (venues.length > 0 && details[item]) {\r\n          id = venues\r\n            .filter(v => v.venue_name === details[item])[0]\r\n            .id.toString();\r\n        }\r\n        href = process.env.REACT_APP_GET_VENUE + id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      if (item === \"full_name\") {\r\n        if (umpires.length > 0 && details[item]) {\r\n          user_id = umpires\r\n            .filter(u => u.full_name === details[item])[0]\r\n            .user_id.toString();\r\n        }\r\n        href = process.env.REACT_APP_GET_PLAYER + user_id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      return (\r\n        <td key={i}>\r\n          <a className={tdLinkCls} href={href}>\r\n            {details[item]}\r\n          </a>\r\n        </td>\r\n      );\r\n    });\r\n  };\r\n  formatRows(data, teams, venues, umpires, columns) {\r\n    return data.map(details => {\r\n      return (\r\n        <tr key={details.id} className=\"trTbl\">\r\n          {/* <td>{details.id}</td> */}\r\n          {/* <td>{details.date}</td>\r\n          <td>{details.time}</td>\r\n          <td>{details.Home_Team}</td>\r\n          <td>{details.Away_Team}</td>\r\n          <td>{details.venue_name}</td>\r\n          <td>{details.Address}</td>\r\n          <td>{details.full_name}</td>\r\n          <td>{details.match_type}</td> */}\r\n          {this.td(details, teams, venues, umpires, columns)}\r\n          {this.state.showEdit ? (\r\n            <td>\r\n              <Button\r\n                color=\"info\"\r\n                className=\"mr-1\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleEditMatchModal.bind(this)}\r\n                onClick={this.setEditMatchModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.date,\r\n                  details.time,\r\n                  details.Home_Team,\r\n                  details.Away_Team,\r\n                  details.venue_name,\r\n                  details.full_name,\r\n                  details.match_type\r\n                )}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n          {this.state.showDelete ? (\r\n            <td>\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleDeleteMatchModal.bind(this)}\r\n                // onClick={this.setDeleteModalData.bind(\r\n                onClick={this.setDeleteMatchModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.date,\r\n                  details.time,\r\n                  details.Home_Team,\r\n                  details.Away_Team,\r\n                  details.venue_name,\r\n                  details.full_name,\r\n                  details.match_type\r\n                )}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  addModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.addModalDisplay}\r\n        toggle={this.toggleAddMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleAddMatchModal.bind(this)}>\r\n          Add Match Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"dateId\">\r\n                Date\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: if not decided, select any date now and change it later)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"dateId\"\r\n                placeholder=\"date placeholder\"\r\n                // value={this.state.addDetails.date}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.date = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              />\r\n              <p className=\"validationMsg\">{this.state.dateErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              <Label className=\"labelRequired\" for=\"timeId\">\r\n                Time\r\n              </Label>\r\n              <Input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                id=\"timeId\"\r\n                placeholder=\"time placeholder\"\r\n                // value={this.state.addDetails.time}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.time = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              />\r\n              <p className=\"validationMsg\">{this.state.timeErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectHomeTeamId\">\r\n                Home Team\r\n              </Label>\r\n              <p className=\"hintPara\">(Hint: your team )</p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectHomeTeamId\"\r\n                // value={this.state.addDetails.hTeam}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.hTeam = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.id}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.hTeamErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectAwayTeamId\">\r\n                Away Team\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: if opponent not decided/practice, select own team)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectAwayTeamId\"\r\n                // value={this.state.addDetails.aTeam}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.aTeam = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.id}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.aTeamErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectVenueId\">Venue</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectVenueId\"\r\n                // value={this.state.addDetails.venue}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.venue = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.venueList.map(venue => (\r\n                  <option key={venue.id} value={venue.id}>\r\n                    {venue.venue_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.venueErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectUmpireId\">Umpire</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectUmpireId\"\r\n                // value={this.state.addDetails.umpire}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.umpire = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.umpireList.map(umpire => (\r\n                  <option key={umpire.id} value={umpire.id}>\r\n                    {umpire.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.umpireErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectMatchTypeId\">Match Type</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectMatchTypeId\"\r\n                // value={this.state.addDetails.matchType}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.matchType = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.matchTypesList.map((key, index) => (\r\n                  <option key={index} value={key}>\r\n                    {key}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.mTypeErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNewMatch.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleAddMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n  filterModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.filterModalDisplay}\r\n        toggle={this.toggleFilterMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleFilterMatchModal.bind(this)}>\r\n          Filter\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"dateId\">Date</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"dateId\"\r\n                placeholder=\"date placeholder\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.date = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"timeId\">Time</Label>\r\n              <Input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                id=\"timeId\"\r\n                placeholder=\"time placeholder\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.time = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectTeamId\">Team</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectTeamId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.teamId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.id}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectVenueId\">Venue</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectVenueId\"\r\n                // value={this.state.addDetails.venue}\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.venue = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.venueList.map(venue => (\r\n                  <option key={venue.id} value={venue.id}>\r\n                    {venue.venue_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectUmpireId\">Umpire</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectUmpireId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.umpire = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.umpireList.map(umpire => (\r\n                  <option key={umpire.id} value={umpire.id}>\r\n                    {umpire.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectMatchTypeId\">Match Type</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectMatchTypeId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.matchType = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.matchTypesList.map((key, index) => (\r\n                  <option key={index} value={key}>\r\n                    {key}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.filterData.bind(this)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleFilterMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  editModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.editModalDisplay}\r\n        toggle={this.toggleEditMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleEditMatchModal.bind(this)}>\r\n          Edit Match Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"dateId\">\r\n                Date\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: if not decided, select any date now and change it later)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"dateId\"\r\n                // placeholder=\"date placeholder\"\r\n                // defaultValue={details.date}\r\n                value={this.state.modalData.date}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.date = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.dateErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              <Label className=\"labelRequired\" for=\"timeId\">\r\n                Time\r\n              </Label>\r\n              <Input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                id=\"timeId\"\r\n                // placeholder=\"time placeholder\"\r\n                // defaultValue={details.time}\r\n                value={this.state.modalData.time}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.time = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              />\r\n              <p className=\"validationMsg\">{this.state.timeErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectHomeTeamId\">\r\n                Home Team\r\n              </Label>\r\n              <p className=\"hintPara\">(Hint: your team )</p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectHomeTeamId\"\r\n                // defaultValue={details.Home_Team}\r\n                // value={this.state.modalData.hTeam}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.hTeam = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.hTeam}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.team_name}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n                {/* <option>1</option>\r\n                      <option>2</option>\r\n                      <option>3</option>\r\n                      <option>4</option>\r\n                      <option>5</option> */}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.hTeamErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectAwayTeamId\">\r\n                Away Team\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: if opponent not decided, select own team)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectAwayTeamId\"\r\n                // defaultValue={details.Away_Team}\r\n                // value={this.state.modalData.aTeam}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.aTeam = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.aTeam}\r\n                </option>\r\n                {/* <option disabled className=\"optionCls\">\r\n                        ────────────────────────────────────────────\r\n                      </option> */}\r\n                <option disabled className=\"optionCls\"></option>\r\n                {/* <hr /> */}\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.team_name}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.aTeamErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectVenueId\">Venue</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectVenueId\"\r\n                // defaultValue={details.venue_name}\r\n                // value={this.state.modalData.venue}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.venue = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.venue}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.venueList.map(venue => (\r\n                  <option key={venue.id} value={venue.venue_name}>\r\n                    {venue.venue_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.venueErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectUmpireId\">Umpire</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectUmpireId\"\r\n                // defaultValue={details.full_name}\r\n                // value={this.state.modalData.umpire}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.umpire = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.umpire}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.umpireList.map(umpire => (\r\n                  <option key={umpire.id} value={umpire.full_name}>\r\n                    {umpire.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.umpireErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectMatchTypeid\">Match Type</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectMatchTypeid\"\r\n                // defaultValue={details.match_type}\r\n                // value={this.state.modalData.mType}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.mType = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.mType}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.matchTypesList.map((item, i) => (\r\n                  <option key={i} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.mTypeErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            // onClick={this.toggleEditMatchModal.bind(this)}\r\n            onClick={this.editMatch.bind(this)}\r\n          >\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleEditMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  deleteModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteModalDisplay}\r\n        toggle={this.toggleDeleteMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteMatchModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this match? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Date: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.date}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Time: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.time}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Home Team: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.hTeam}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Away Team: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.aTeam}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Venue: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.venue}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Umpire: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.umpire}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Match Type: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.mType}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"warning\"\r\n            // onClick={this.toggleDeleteMatchModal.bind(this)}\r\n            onClick={this.deleteMatch.bind(this)}\r\n          >\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleDeleteMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  addBtn() {\r\n    if (this.state.showAdd) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mb-2\"\r\n            //   size=\"sm\"\r\n            onClick={this.toggleAddMatchModal.bind(this)}\r\n          >\r\n            Add New Match\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  filterBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.toggleFilterMatchModal.bind(this)}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n  handleOnViewAllClick = () => {\r\n    this.setState({\r\n      matchDetails: this.state.filterMatchDetails\r\n    });\r\n  };\r\n  viewAllBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.handleOnViewAllClick}\r\n        >\r\n          View All\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios.get(\"http://localhost:4000/getmyteammatches\").then(res => {\r\n    this.adminUser();\r\n    axios\r\n      .get(\r\n        this.state.matchesLink,\r\n        {\r\n          params: { email_id: this.state.userEmail },\r\n          withCredentials: true\r\n        }\r\n        // { withCredentials: true }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          matchDetails: res.data,\r\n          filterMatchDetails: res.data,\r\n          matchTypeValues: res.data\r\n            .map(el => {\r\n              return el.match_type;\r\n            })\r\n            .filter(v => v !== null), //filter(v => v.text !== null)\r\n          // matchTypesList: this.state.matchTypeValues.filter(this.onlyUnique)\r\n          matchTypesList: res.data\r\n            .map(el => {\r\n              return el.match_type;\r\n            })\r\n            .filter(v => v !== null)\r\n            .filter(v => v !== \"null\")\r\n            .filter(v => v !== \"\")\r\n            .filter(this.onlyUnique)\r\n        });\r\n      });\r\n\r\n    // axios.get(\"http://localhost:4000/getteamlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n      this.setState({\r\n        teamList: res.data\r\n      });\r\n      // this.state.teamList.splice(0, 0, \"--Select--\");\r\n    });\r\n    // axios.get(\"http://localhost:4000/getvenuelist\").then(res => {\r\n    axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n      this.setState({\r\n        venueList: res.data\r\n      });\r\n    });\r\n    // axios.get(\"http://localhost:4000/getumpirelist\").then(res => {\r\n    axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n      this.setState({\r\n        umpireList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.tbl = new tblHeaderClass();\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass\r\n          // homeActive={false}\r\n          // matchActive={false}\r\n          // requestActive={false}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <div className=\"container\">\r\n          {this.addModal()}\r\n          {this.editModal()}\r\n          {this.deleteModal()}\r\n          {this.filterModal()}\r\n          <h1 className=\"pageHead\">{this.state.header}</h1>\r\n          <this.alrt />\r\n          <div className=\"add-filter-btn\">\r\n            {this.filterBtn()}\r\n            {this.viewAllBtn()}\r\n            {this.addBtn()}\r\n          </div>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {\r\n                  /* <th>id</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>Home_Team</th>\r\n              <th>Away_Team</th>\r\n              <th>Venue_Id</th>\r\n              <th>Umpire_Id</th> */\r\n                  (this.state.showEdit &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Edit\" &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Edit\")\r\n                    : null,\r\n                  this.state.showDelete &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Delete\")\r\n                    : null,\r\n                  this.tbl.createHeader(this.state.colHead))\r\n                }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.formatRows(\r\n                this.state.matchDetails,\r\n                this.state.teamList,\r\n                this.state.venueList,\r\n                this.state.umpireList,\r\n                this.state.columns\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatchScheduleTblClass;\r\n","import React, { Component } from \"react\";\r\n\r\nimport MatchScheduleTblClass from \"./tables/matchScheduleTbl\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import { Alert } from \"reactstrap\";\r\n// import AddBtnClass from \"./addBtn\";\r\n\r\nclass AllMatchesPageClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // matchDetails: [],\r\n      header: \"All Matches Schedule\",\r\n      // fromPage: \"allMatchesPage\",\r\n      // fromPage: this.props.match.url\r\n      //   .replace(this.props.match.params.param, \"\")\r\n      //   .replace(/\\//g, \"\"),\r\n      userEmail: \"\"\r\n      // message: \"\"\r\n    };\r\n  }\r\n\r\n  // messageFromChild = message => {\r\n  //   // this.forceUpdate();\r\n  //   this.setState({\r\n  //     message: message\r\n  //   });\r\n  //   return <Alert color=\"info\">{message}</Alert>;\r\n  // };\r\n  // alrt = () => {\r\n  //   if (this.state.message !== \"\") {\r\n  //     return <Alert color=\"info\">{this.state.message}</Alert>;\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    // console.log(\"i am here\");\r\n    // console.log(this.props);\r\n    // console.log(this.state.fromPage);\r\n\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        {/* <this.alrt /> */}\r\n        <MatchScheduleTblClass\r\n          // matchesLink={process.env.REACT_APP_ALL_MATCHES}\r\n          matchesLink={process.env.REACT_APP_ALL_MATCHES}\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n          // fromPage={this.state.fromPage}\r\n          // fetchmessage={this.messageFromChild}\r\n        />\r\n        {/* <AddBtnClass /> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllMatchesPageClass;\r\n","import React, { Component } from \"react\";\r\n\r\nimport MatchScheduleTblClass from \"./tables/matchScheduleTbl\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import { Alert } from \"reactstrap\";\r\n// import AddBtnClass from \"./addBtn\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass MyTeamMatchPageClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"My Team Schedule\",\r\n      userEmail: this.props.location.state.userEmail\r\n      // this.props.location.state.userEmail ||\r\n      // this.props.location.state.userEmail.length > 0\r\n      //   ? \"\"\r\n      //   : this.props.location.state.userEmail\r\n      // message: \"\"\r\n    };\r\n  }\r\n\r\n  // messageFromChild = message => {\r\n  //   // this.forceUpdate();\r\n  //   this.setState({\r\n  //     message: message\r\n  //   });\r\n  //   return <Alert color=\"info\">{message}</Alert>;\r\n  // };\r\n  // alrt = () => {\r\n  //   if (this.state.message !== \"\") {\r\n  //     return <Alert color=\"info\">{this.state.message}</Alert>;\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    console.log(\"this.props from my match schedule page\");\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        {/* <this.alrt /> */}\r\n        <MatchScheduleTblClass\r\n          // matchesLink={process.env.REACT_APP_MY_TEAM_MATCHES}\r\n          matchesLink={process.env.REACT_APP_MY_TEAM_MATCHES}\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n          // fetchmessage={this.messageFromChild}\r\n        />\r\n        {/* <AddBtnClass /> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MyTeamMatchPageClass);\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\nimport { Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  // CustomInput,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\nclass TeamTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      colHead: [\r\n        // \"Id\",\r\n        \"Team Name\",\r\n        \"Captain\",\r\n        \"Captain Contact\",\r\n        \"Manager\",\r\n        \"Manager Contact\"\r\n      ],\r\n      columns: [\r\n        \"team_name\",\r\n        \"captain_name\",\r\n        \"captain_contact_no\",\r\n        \"manager_name\",\r\n        \"manager_contact_no\"\r\n      ],\r\n      editModalDisplay: false,\r\n      deleteModalDisplay: false,\r\n      addModalDisplay: false,\r\n      filterModalDisplay: false,\r\n      addDetails: {\r\n        teamName: \"\",\r\n        captainUserId: null,\r\n        managerUserId: null\r\n      },\r\n      filterDetails: {\r\n        teamName: \"\",\r\n        captainUserId: null,\r\n        managerUserId: null\r\n      },\r\n\r\n      editDetails: {\r\n        id: null,\r\n        teamName: \"\",\r\n        captainUserId: null,\r\n        managerUserId: null\r\n      },\r\n      modalData: {\r\n        id: null,\r\n        teamName: \"\",\r\n        captainUserId: \"\",\r\n        managerUserId: \"\"\r\n      },\r\n      modalDataOriginal: {\r\n        id: null,\r\n        teamName: \"\",\r\n        captainUserId: \"\",\r\n        managerUserId: \"\"\r\n      },\r\n      teamNameErrMsg: \"\",\r\n      captainErrMsg: \"\",\r\n      managerErrMsg: \"\",\r\n      playersErrMsg: \"\",\r\n      teamList: [],\r\n      filterTeamList: [],\r\n      playerList: [],\r\n      captainList: [],\r\n      managerList: [],\r\n      msg: \"\",\r\n      addMsg: \"New team added successfully!\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page. Error code: `,\r\n      updateMsg: \"Team details updated successfully\",\r\n      delMsg: \"Team deleted!\",\r\n      showAdd: false,\r\n      showEdit: false,\r\n      showDelete: false\r\n    };\r\n  }\r\n\r\n  adminUser() {\r\n    if (this.state.userEmail === process.env.REACT_APP_ADMIN) {\r\n      this.setState({ showAdd: true, showEdit: true, showDelete: true });\r\n    }\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState(prevState => ({\r\n      editModalDisplay: !prevState.editModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteModal() {\r\n    this.setState(prevState => ({\r\n      deleteModalDisplay: !prevState.deleteModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleAddModal() {\r\n    this.setState(prevState => ({\r\n      addModalDisplay: !prevState.addModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleFilterMatchModal() {\r\n    this.setState(prevState => ({\r\n      filterModalDisplay: !prevState.filterModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      teamNameErrMsg: \"\",\r\n      captainErrMsg: \"\",\r\n      managerErrMsg: \"\",\r\n      addDetails: {\r\n        teamName: \"\",\r\n        captainUserId: null,\r\n        managerUserId: null\r\n      },\r\n\r\n      filterDetails: {\r\n        teamName: \"\",\r\n        captainUserId: null,\r\n        managerUserId: null\r\n      }\r\n    });\r\n  };\r\n  //   isValidString2(str) {\r\n  //     var iChars = \"~`!#$%^&*+=-[]\\\\';,/{}|\\\":<>?\";\r\n  //     if (!iChars.match(/\\W/g) == \"\") {\r\n  //       // alert (\"File name has special characters ~`!#$%^&*+=-[]\\\\\\';,/{}|\\\":<>? \\nThese are not allowed\\n\");\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   }\r\n  isValidString(str) {\r\n    // return !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{@}|\\\\\":<>\\?]/g.test(str);\r\n    return !/[~`!$%^*+=[\\]\\\\';,/{}()|\\\\\"<>?]/g.test(str) && str.match(/[a-z]/i);\r\n  }\r\n\r\n  validate = data => {\r\n    let teamNameErrMsg = \"\";\r\n    let captainErrMsg = \"\";\r\n    // let managerErrMsg = \"\";\r\n\r\n    data.teamName = data.teamName.trim();\r\n\r\n    if (\r\n      this.state.modalDataOriginal.teamName !== data.teamName ||\r\n      this.state.modalDataOriginal.teamName === \"\"\r\n    ) {\r\n      if (\r\n        !data.teamName ||\r\n        data.teamName.length <= 2 ||\r\n        !isNaN(data.teamName) ||\r\n        !this.isValidString(data.teamName)\r\n      ) {\r\n        teamNameErrMsg =\r\n          \"At least 3 characters with one alphabet. Allowed special characters #&-@:_\";\r\n      } else {\r\n        if (\r\n          this.state.teamList.filter(d => d.team_name === data.teamName)\r\n            .length > 0\r\n        ) {\r\n          teamNameErrMsg =\r\n            data.teamName + \" is already taken. Please try a different name\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!data.captainUserId || data.captainUserId === \"--Select--\") {\r\n      captainErrMsg = `please select a captain`;\r\n    }\r\n\r\n    // if (!data.managerUserId || data.managerUserId === \"--Select--\") {\r\n    //   managerErrMsg = `please select a manager`;\r\n    // }\r\n\r\n    // if (teamNameErrMsg || captainErrMsg || managerErrMsg) {\r\n    if (teamNameErrMsg || captainErrMsg) {\r\n      this.setState({\r\n        teamNameErrMsg,\r\n        captainErrMsg\r\n        // managerErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  setEditModalData(id, teamName, captainUserId, managerUserId) {\r\n    this.setState({\r\n      modalData: { id, teamName, captainUserId, managerUserId },\r\n      modalDataOriginal: { id, teamName, captainUserId, managerUserId }\r\n      // editDetails: { id, teamName, captainUserId, managerUserId }\r\n    });\r\n    this.toggleEditModal();\r\n  }\r\n\r\n  setDeleteModalData(id, teamName, captainUserId, managerUserId) {\r\n    this.setState({\r\n      modalData: { id, teamName, captainUserId, managerUserId }\r\n      // editDetails: { id, teamName, captainUserId, managerUserId }\r\n    });\r\n    this.toggleDeleteModal();\r\n  }\r\n\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n  update() {\r\n    let isValid = this.validate(this.state.modalData);\r\n    if (isValid) {\r\n      let { modalData } = this.state;\r\n      let { editDetails } = this.state;\r\n\r\n      editDetails.id = modalData.id;\r\n      editDetails.teamName = modalData.teamName;\r\n\r\n      if (this.hasValue(modalData.captainUserId)) {\r\n        editDetails.captainUserId = this.state.playerList.filter(\r\n          player => player.full_name === modalData.captainUserId\r\n        )[0].id;\r\n      }\r\n\r\n      // if (this.hasValue(modalData.managerUserId)) {\r\n      //   editDetails.managerUserId = this.state.playerList.filter(\r\n      //     player => player.full_name === modalData.managerUserId\r\n      //   )[0].id;\r\n      // }\r\n      this.hasValue(modalData.managerUserId)\r\n        ? (editDetails.managerUserId = this.state.playerList.filter(\r\n            player => player.full_name === modalData.managerUserId\r\n          )[0].id)\r\n        : (editDetails.managerUserId = null);\r\n\r\n      this.setState({ editDetails });\r\n      console.log(this.state.modalData);\r\n      console.log(this.state.editDetails);\r\n      // const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      axios\r\n        .put(\r\n          // \"http://localhost:4000/put/updateteam\",\r\n          process.env.REACT_APP_UPDATE_TEAM,\r\n          this.state.editDetails\r\n        )\r\n        .then(res => {\r\n          // console.log(\r\n          //   res.config,\r\n          //   res.data,\r\n          //   res.headers,\r\n          //   res.request,\r\n          //   res.status,\r\n          //   res.statusText\r\n          // );\r\n          this.setState({\r\n            // msg: this.state.updateMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n            this.setState({\r\n              teamList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          // console.log(error.request);\r\n          this.setState({\r\n            msg:\r\n              this.state.errMsg +\r\n              error.request.status +\r\n              \". \" +\r\n              error.request.responseText\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    axios\r\n      .delete(\r\n        // \"http://localhost:4000/post/addnewteam\",\r\n        process.env.REACT_APP_DELETE_TEAM,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          // msg: this.state.addMsg + res.data\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.delMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n          this.setState({\r\n            teamList: res.data\r\n          });\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  add() {\r\n    let isValid = this.validate(this.state.addDetails);\r\n    if (isValid) {\r\n      // console.log(this.state.addDetails);\r\n      axios\r\n        .post(\r\n          // \"http://localhost:4000/post/addnewteam\",\r\n          process.env.REACT_APP_ADD_NEW_TEAM,\r\n          this.state.addDetails\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.addMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n            this.setState({\r\n              teamList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  filterData() {\r\n    console.log(this.state.filterDetails.teamName);\r\n    axios\r\n      .get(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_GET_TEAM,\r\n        {\r\n          params: {\r\n            id: this.state.filterDetails.teamName,\r\n            captain_id: this.state.filterDetails.captainUserId,\r\n            manager_id: this.state.filterDetails.managerUserId\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          teamList: res.data\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  td(details, players, columns) {\r\n    return columns.map((item, i) => {\r\n      let href = \"\";\r\n      let tdLinkCls = \"\";\r\n      let id = \"\";\r\n      if (item === \"captain_name\" || item === \"manager_name\") {\r\n        // check if playerList has been loaded from db on completion of componentDidMount()\r\n        // check if captain or manager value exists for the team in <td>\r\n        if (players.length > 0 && details[item]) {\r\n          id = players\r\n            .filter(p => p.full_name === details[item])[0]\r\n            .id.toString();\r\n        }\r\n        href = process.env.REACT_APP_GET_PLAYER + id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      if (item === \"team_name\") {\r\n        // check if teamList has been loaded from db on completion of componentDidMount()\r\n        // check if team exists in <td>\r\n        // if (teams.length > 0 && details[item]) {\r\n        //   id = teams\r\n        //     .filter(t => t.team_name === details[item])[0]\r\n        //     .id.toString();\r\n        // }\r\n        // href = process.env.REACT_APP_GET_TEAM + id;\r\n        href = process.env.REACT_APP_GET_TEAM + details.id.toString();\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      return (\r\n        <td key={i}>\r\n          <a className={tdLinkCls} href={href}>\r\n            {details[item]}\r\n          </a>\r\n        </td>\r\n      );\r\n    });\r\n  }\r\n  formatRows(data, players, columns) {\r\n    return data.map(details => {\r\n      return (\r\n        <tr key={details.id} className=\"trTbl\">\r\n          {this.td(details, players, columns)}\r\n          {this.state.showEdit ? (\r\n            <td>\r\n              <Button\r\n                color=\"info\"\r\n                className=\"mr-1\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleEditModal.bind(this)}\r\n                onClick={this.setEditModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.team_name,\r\n                  details.captain_name,\r\n                  details.manager_name\r\n                )}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n          {this.state.showDelete ? (\r\n            <td>\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleDeleteModal.bind(this)}\r\n                onClick={this.setDeleteModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.team_name,\r\n                  details.captain_name,\r\n                  details.manager_name\r\n                )}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  addModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.addModalDisplay}\r\n        toggle={this.toggleAddModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleAddModal.bind(this)}>\r\n          Add Team Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"teamNameId\">\r\n                Team Name\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your team )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"teamName\"\r\n                id=\"teamNameId\"\r\n                // value={this.state.addDetails.teamName}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.teamName = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n                placeholder=\"your team name\"\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.teamNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectCaptainId\">\r\n                Captain\r\n              </Label>\r\n              {/* <p className=\"hintPara\"> (Hint: Captain team) </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectCaptainId\"\r\n                // value={this.state.addDetails.aTeam}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.captainUserId = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.playerList.map(player => (\r\n                  <option key={player.id} value={player.id}>\r\n                    {player.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.captainErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectManagerId\">Manager</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectManagerId\"\r\n                // value={this.state.addDetails.venue}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.managerUserId = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.playerList.map(player => (\r\n                  <option key={player.id} value={player.id}>\r\n                    {player.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.managerErrMsg}</p>\r\n            </FormGroup>\r\n            {/* <FormGroup>\r\n                <Label for=\"selectPlayersId\">Select Players</Label>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  id=\"selectPlayersId\"\r\n                  name=\"customSelect\"\r\n                  multiple\r\n                  //   value={this.state.addDetails.aTeam}\r\n                  // onChange={e => {\r\n                  //   let { addDetails } = this.state;\r\n                  //   addDetails.aTeam = e.target.value;\r\n                  //   this.setState({ addDetails });\r\n                  // }}\r\n                >\r\n                  {this.state.playerList.map(player => (\r\n                    <option key={player.id} value={player.id}>\r\n                      {player.full_name}\r\n                    </option>\r\n                  ))}\r\n                </CustomInput>\r\n                <p className=\"validationMsg\">{this.state.playersErrMsg}</p>\r\n              </FormGroup> */}\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.add.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleAddModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  filterModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.filterModalDisplay}\r\n        toggle={this.toggleFilterMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleFilterMatchModal.bind(this)}>\r\n          Filter\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"teamNameId\">Team</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"teamNameId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.teamName = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {/* {this.state.teamList.map(team => ( */}\r\n                {this.state.filterTeamList.map(team => (\r\n                  <option key={team.id} value={team.id}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"captainId\">Captain</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"captainId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.captainUserId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.captainList.map(captain => (\r\n                  <option key={captain.id} value={captain.id}>\r\n                    {captain.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"selectTeamId\">Team</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectTeamId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.managerUserId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.managerList.map(manager => (\r\n                  <option key={manager.id} value={manager.id}>\r\n                    {manager.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.filterData.bind(this)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleFilterMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  editModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.editModalDisplay}\r\n        toggle={this.toggleEditModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleEditModal.bind(this)}>\r\n          Edit Team Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"teamNameId\">\r\n                Team Name\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your team )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"editTeamName\"\r\n                id=\"teamNameId\"\r\n                // defaultValue={this.state.modalData.teamName}\r\n                value={this.state.modalData.teamName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.teamName = e.target.value;\r\n                  this.setState({ modalData });\r\n                  // console.log(e.target.value);\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.teamNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectCaptainId\">\r\n                Captain\r\n              </Label>\r\n              {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectCaptain\"\r\n                id=\"selectCaptainId\"\r\n                // defaultValue={this.state.modalData.captainUserId}\r\n                // value={this.state.modalData.captainUserId}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.captainUserId = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.captainUserId}\r\n                </option>\r\n                {/* <option disabled className=\"optionCls\">\r\n                        ────────────────────────────────────────────\r\n                      </option> */}\r\n                <option disabled className=\"optionCls\"></option>\r\n                {/* <hr /> */}\r\n                {this.state.playerList.map(player => (\r\n                  <option key={player.id} value={player.full_name}>\r\n                    {player.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.captainErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectManagerId\">Manger</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectManager\"\r\n                id=\"selectManagerId\"\r\n                // defaultValue={this.state.modalData.managerUserId}\r\n                // value={this.state.modalData.managerUserId}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.managerUserId = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.managerUserId}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.playerList.map(player => (\r\n                  <option key={player.id} value={player.full_name}>\r\n                    {player.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.managerErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            // onClick={this.toggleEditModal.bind(this)}\r\n            onClick={this.update.bind(this)}\r\n          >\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleEditModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  deleteModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteModalDisplay}\r\n        toggle={this.toggleDeleteModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this team? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Team Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.teamName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Captain: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.captainUserId}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Manager: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.managerUserId}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"warning\"\r\n            // onClick={this.toggleDeleteModal.bind(this)}\r\n            onClick={this.delete.bind(this)}\r\n          >\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleDeleteModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  addBtn() {\r\n    if (this.state.showAdd) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mb-2\"\r\n            //   size=\"sm\"\r\n            onClick={this.toggleAddModal.bind(this)}\r\n          >\r\n            Add New Team\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  filterBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.toggleFilterMatchModal.bind(this)}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adminUser();\r\n    // axios.get(\"http://localhost:4000/getteamlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n      this.setState({\r\n        teamList: res.data,\r\n        filterTeamList: res.data\r\n      });\r\n      // this.state.teamList.splice(0, 0, \"--Select--\");\r\n    });\r\n\r\n    // axios.get(\"http://localhost:4000/getplayerlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n      this.setState({\r\n        playerList: res.data,\r\n        captainList: res.data.filter(player => player.role_id === 2),\r\n        managerList: res.data.filter(player => player.role_id === 3)\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.captainList);\r\n    console.log(this.state.managerList);\r\n    this.tbl = new tblHeaderClass();\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass\r\n          // homeActive={false}\r\n          // teamActive={false}\r\n          // requestActive={false}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <div className=\"container\">\r\n          {this.addModal()}\r\n          {this.editModal()}\r\n          {this.deleteModal()}\r\n          {this.filterModal()}\r\n          <h1 className=\"pageHead\">{this.props.header}</h1>\r\n          <this.alrt />\r\n          <div className=\"add-filter-btn\">\r\n            {this.filterBtn()}\r\n            {this.addBtn()}\r\n          </div>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {\r\n                  /* <th>id</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>Home_Team</th>\r\n              <th>Away_Team</th>\r\n              <th>Venue_Id</th>\r\n              <th>Umpire_Id</th> */\r\n                  (this.state.showEdit &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Edit\" &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Edit\")\r\n                    : null,\r\n                  this.state.showDelete &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Delete\")\r\n                    : null,\r\n                  this.tbl.createHeader(this.state.colHead))\r\n                }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.formatRows(\r\n                this.state.teamList,\r\n                this.state.playerList,\r\n                this.state.columns\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamTblClass;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TeamTblClass from \"./tables/teamTbl\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import AddBtnClass from \"./addBtn\";\r\n\r\nclass TeamsClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Teams List\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        <TeamTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        {/* <AddBtnClass /> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TeamsClass);\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\nimport { Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  // CustomInput,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass PlayerTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      colHead: [\r\n        // \"Id\",\r\n        \"Name\",\r\n        \"Team\",\r\n        \"Email ID\",\r\n        \"Contact\",\r\n        \"Umpire ID\"\r\n      ],\r\n      columns: [\r\n        \"full_name\",\r\n        \"team_name\",\r\n        \"email_id\",\r\n        \"contact_no\",\r\n        \"umpire_id\"\r\n      ],\r\n      editModalDisplay: false,\r\n      deleteModalDisplay: false,\r\n      addModalDisplay: false,\r\n      filterModalDisplay: false,\r\n      addDetails: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        phone: null,\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        secretQid: null,\r\n        secretA: \"\",\r\n        created: \"\",\r\n        modified: \"\",\r\n        roleId: null\r\n      },\r\n      filterDetails: {\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        roleId: null\r\n      },\r\n\r\n      editDetails: {\r\n        id: null,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        phone: null,\r\n        modified: \"\",\r\n        roleId: null\r\n      },\r\n      modalData: {\r\n        id: null,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        teamName: \"\",\r\n        phone: \"\",\r\n        roleId: null\r\n      },\r\n      modalDataOriginal: {\r\n        id: null,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        teamName: \"\",\r\n        phone: \"\",\r\n        roleId: null\r\n      },\r\n      firstNameErrMsg: \"\",\r\n      lastNameErrMsg: \"\",\r\n      middleNameErrMsg: \"\",\r\n      emailIdErrMsg: \"\",\r\n      phoneErrMsg: \"\",\r\n      passwordErrMsg: \"\",\r\n      confirmPasswordErrMsg: \"\",\r\n      secretQErrMsg: \"\",\r\n      secretAErrMsg: \"\",\r\n\r\n      teamList: [],\r\n      playerList: [],\r\n      filterPlayerList: [],\r\n      userRoleList: [],\r\n      secretQList: [],\r\n      msg: \"\",\r\n      addMsg: \"New player added successfully!\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page. Error code: `,\r\n      updateMsg: \"Player details updated successfully\",\r\n      delMsg: \"Player deleted!\",\r\n      showAdd: true,\r\n      showEdit: false,\r\n      showDelete: false\r\n    };\r\n  }\r\n\r\n  adminUser() {\r\n    if (this.state.userEmail === process.env.REACT_APP_ADMIN) {\r\n      this.setState({ showEdit: true, showDelete: true });\r\n    }\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState(prevState => ({\r\n      editModalDisplay: !prevState.editModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteModal() {\r\n    this.setState(prevState => ({\r\n      deleteModalDisplay: !prevState.deleteModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleAddModal() {\r\n    this.setState(prevState => ({\r\n      addModalDisplay: !prevState.addModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleFilterMatchModal() {\r\n    this.setState(prevState => ({\r\n      filterModalDisplay: !prevState.filterModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      firstNameErrMsg: \"\",\r\n      lastNameErrMsg: \"\",\r\n      middleNameErrMsg: \"\",\r\n      emailNameErrMsg: \"\",\r\n      phoneErrMsg: \"\",\r\n      passwordErrMsg: \"\",\r\n      confirmPasswordErrMsg: \"\",\r\n      secretQErrMsg: \"\",\r\n      secretAErrMsg: \"\",\r\n      addDetails: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        phone: \"\",\r\n        created: \"\",\r\n        modified: \"\",\r\n        roleId: 4\r\n      },\r\n      filterDetails: {\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        roleId: null\r\n      }\r\n    });\r\n  };\r\n  //   isValidString2(str) {\r\n  //     var iChars = \"~`!#$%^&*+=-[]\\\\';,/{}|\\\":<>?\";\r\n  //     if (!iChars.match(/\\W/g) == \"\") {\r\n  //       // alert (\"File name has special characters ~`!#$%^&*+=-[]\\\\\\';,/{}|\\\":<>? \\nThese are not allowed\\n\");\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   }\r\n  isValidName(str) {\r\n    // return !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{@}|\\\\\":<>\\?]/g.test(str);\r\n    return (\r\n      //   !/[~`!$%^*+=[\\]\\\\';,/{}()@-_&#:|\\\\\"<>?]/g.test(str) && str.match(/[a-z]/i)\r\n      str.match(/^[A-Za-z.\\s]+$/i)\r\n      //   str.match(/^\\w+(\\s)?\\w+$/i)\r\n    );\r\n  }\r\n  isValidEmail(email) {\r\n    // var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  isValidPhone(phone) {\r\n    // '(^\\+)?'checks if 1st char is '+' and this is opional. '[0-9]+' checks rest of the chars should be digit\r\n    // var re = /(^\\+)?[0-9]+/;\r\n    // var re = /(^\\+)?\\d+/;   // same as above replaced '[0-9]' with '\\d'\r\n    var re = /[0-9]+/; // checks if its a number\r\n    return re.test(phone);\r\n  }\r\n  isValidPassword(str) {\r\n    // return str.match(/[A-Za-z0-9.@#&*!]+/i);\r\n    // return str.match(/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8}$/);\r\n    return str.match(\r\n      /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z])(?=.{6,})/\r\n    );\r\n  }\r\n  isValidAnswer(str) {\r\n    return str.match(/^[A-Za-z\\s]+$/i);\r\n  }\r\n\r\n  validate = (data, checkExtra) => {\r\n    let firstNameErrMsg = \"\";\r\n    let middleNameErrMsg = \"\";\r\n    let lastNameErrMsg = \"\";\r\n    let emailIdErrMsg = \"\";\r\n    let phoneErrMsg = \"\";\r\n    let passwordErrMsg = \"\";\r\n    let confirmPasswordErrMsg = \"\";\r\n    let secretQErrMsg = \"\";\r\n    let secretAErrMsg = \"\";\r\n\r\n    // trim the text fields that are mandatory. non-mandatory may be null, so trim them after null validation.\r\n    data.firstName = data.firstName.trim();\r\n    data.emailId = data.emailId.trim();\r\n\r\n    // first name validation\r\n    if (\r\n      this.state.modalDataOriginal.firstName !== data.firstName ||\r\n      this.state.modalDataOriginal.firstName === \"\"\r\n    ) {\r\n      if (\r\n        !data.firstName ||\r\n        data.firstName.length < 1 ||\r\n        !isNaN(data.firstName) ||\r\n        !this.isValidName(data.firstName)\r\n      ) {\r\n        firstNameErrMsg =\r\n          \"At least one alphabet is required. No special characters or numbers allowed\";\r\n      }\r\n    }\r\n\r\n    // middle name validation\r\n    if (this.hasValue(data.middleName)) {\r\n      data.middleName = data.middleName.trim();\r\n      if (!isNaN(data.middleName) || !this.isValidName(data.middleName)) {\r\n        middleNameErrMsg = \"No special characters or numbers allowed\";\r\n      }\r\n    }\r\n\r\n    // last name validation\r\n    if (this.hasValue(data.lastName)) {\r\n      data.lastName = data.lastName.trim();\r\n      if (!isNaN(data.lastName) || !this.isValidName(data.lastName)) {\r\n        lastNameErrMsg = \"No special characters or numbers allowed\";\r\n      }\r\n    }\r\n\r\n    // emailid validation\r\n    if (\r\n      this.state.modalDataOriginal.emailId !== data.emailId ||\r\n      this.state.modalDataOriginal.emailId === \"\"\r\n    ) {\r\n      if (\r\n        !data.emailId ||\r\n        data.emailId.length < 1 ||\r\n        !isNaN(data.emailId) ||\r\n        !this.isValidEmail(data.emailId)\r\n      ) {\r\n        emailIdErrMsg = \"Please enter a valid email id!\";\r\n      } else {\r\n        if (\r\n          this.state.playerList.filter(p => p.email_id === data.emailId)\r\n            .length > 0\r\n        ) {\r\n          emailIdErrMsg =\r\n            data.emailId + \" is already taken. Please try a different emailId\";\r\n        }\r\n      }\r\n    }\r\n\r\n    // phone validation\r\n    if (this.hasValue(data.phone)) {\r\n      data.phone = data.phone.toString().trim();\r\n      if (!this.isValidPhone(data.phone)) {\r\n        phoneErrMsg = \"only digits allowed e.g. 9999999999\";\r\n      }\r\n    }\r\n\r\n    // check additional details when new user is added\r\n    if (checkExtra) {\r\n      // password validation\r\n      if (this.hasValue(data.password)) {\r\n        data.password = data.password.trim();\r\n        if (!this.isValidPassword(data.password)) {\r\n          passwordErrMsg = \"please enter a valid password\";\r\n        }\r\n      } else {\r\n        passwordErrMsg = \"password cannot be blank\";\r\n      }\r\n\r\n      // confirm password validation\r\n      if (this.hasValue(data.confirmPassword)) {\r\n        data.confirmPassword = data.confirmPassword.trim();\r\n        if (data.password !== data.confirmPassword) {\r\n          confirmPasswordErrMsg = \"password should match\";\r\n        }\r\n      } else {\r\n        confirmPasswordErrMsg = \"confirm password field cannot be blank\";\r\n      }\r\n\r\n      // secret question validation\r\n      if (!this.hasValue(data.secretQid) || data.secretQid === \"--Select--\") {\r\n        secretQErrMsg = \"please select a question\";\r\n      }\r\n\r\n      // secret answer validation\r\n      if (this.hasValue(data.secretA)) {\r\n        data.secretA = data.secretA.trim();\r\n        if (!this.isValidAnswer(data.secretA)) {\r\n          secretAErrMsg =\r\n            \"Only alphabates and space are allowed. No numbers, special characters allowed\";\r\n        }\r\n      } else {\r\n        secretAErrMsg = \"Please enter a answer\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      firstNameErrMsg ||\r\n      middleNameErrMsg ||\r\n      lastNameErrMsg ||\r\n      emailIdErrMsg ||\r\n      phoneErrMsg ||\r\n      passwordErrMsg ||\r\n      confirmPasswordErrMsg ||\r\n      secretQErrMsg ||\r\n      secretAErrMsg\r\n    ) {\r\n      this.setState({\r\n        firstNameErrMsg,\r\n        middleNameErrMsg,\r\n        lastNameErrMsg,\r\n        emailIdErrMsg,\r\n        phoneErrMsg,\r\n        passwordErrMsg,\r\n        confirmPasswordErrMsg,\r\n        secretQErrMsg,\r\n        secretAErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  setEditModalData(\r\n    id,\r\n    firstName,\r\n    lastName,\r\n    middleName,\r\n    emailId,\r\n    teamName,\r\n    phone,\r\n    roleId\r\n  ) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        middleName,\r\n        emailId,\r\n        teamName,\r\n        phone,\r\n        roleId\r\n      },\r\n      modalDataOriginal: {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        middleName,\r\n        emailId,\r\n        teamName,\r\n        phone,\r\n        roleId\r\n      }\r\n    });\r\n    this.toggleEditModal();\r\n  }\r\n\r\n  setDeleteModalData(\r\n    id,\r\n    firstName,\r\n    lastName,\r\n    middleName,\r\n    emailId,\r\n    teamName,\r\n    phone\r\n  ) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        middleName,\r\n        emailId,\r\n        teamName,\r\n        phone\r\n      }\r\n    });\r\n    this.toggleDeleteModal();\r\n  }\r\n\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n  update() {\r\n    let checkExtra = false; // if validation is called for update, do not check fields like password, secret q etc.\r\n    let isValid = this.validate(this.state.modalData, checkExtra);\r\n    if (isValid) {\r\n      let { modalData } = this.state;\r\n      let { editDetails } = this.state;\r\n\r\n      editDetails.id = modalData.id;\r\n      editDetails.firstName = modalData.firstName;\r\n      editDetails.lastName = modalData.lastName;\r\n      editDetails.middleName = modalData.middleName;\r\n      editDetails.emailId = modalData.emailId;\r\n      modalData.phone === \"\"\r\n        ? (editDetails.phone = null)\r\n        : (editDetails.phone = modalData.phone);\r\n      editDetails.fullName = modalData.firstName;\r\n      if (this.hasValue(modalData.middleName)) {\r\n        editDetails.fullName += \" \" + modalData.middleName;\r\n      }\r\n      if (this.hasValue(modalData.lastName)) {\r\n        editDetails.fullName += \" \" + modalData.lastName;\r\n      }\r\n\r\n      //   if (this.hasValue(modalData.managerUserId)) {\r\n      //     editDetails.managerUserId = this.state.playerList.filter(\r\n      //       player => player.full_name === modalData.managerUserId\r\n      //     )[0].id;\r\n      //   }\r\n      //   this.hasValue(modalData.managerUserId)\r\n      //     ? (editDetails.managerUserId = this.state.playerList.filter(\r\n      //         player => player.full_name === modalData.managerUserId\r\n      //       )[0].id)\r\n      //   : (editDetails.managerUserId = null);\r\n\r\n      this.hasValue(modalData.teamName)\r\n        ? (editDetails.teamId = this.state.teamList.filter(\r\n            t => t.team_name === modalData.teamName\r\n          )[0].id)\r\n        : (editDetails.teamId = null);\r\n\r\n      let d = new Date();\r\n      // let date =\r\n      //   d.getFullYear() +\r\n      //   \"-\" +\r\n      //   (d.getMonth() + 1) +\r\n      //   \"-\" +\r\n      //   d.getDate() +\r\n      //   \" \" +\r\n      //   d.toTimeString();\r\n      // date = date.slice(0, 19);\r\n      let date = d.toUTCString();\r\n      editDetails.modified = date;\r\n      editDetails.roleId = modalData.roleId;\r\n\r\n      this.setState({ editDetails });\r\n      console.log(this.state.modalData);\r\n      console.log(this.state.editDetails);\r\n      // const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      axios\r\n        .put(\r\n          // \"http://localhost:4000/put/updateteam\",\r\n          process.env.REACT_APP_UPDATE_PLAYER,\r\n          this.state.editDetails\r\n        )\r\n        .then(res => {\r\n          //   console.log(\r\n          //     res.config,\r\n          //     res.data,\r\n          //     res.headers,\r\n          //     res.request,\r\n          //     res.status,\r\n          //     res.statusText\r\n          //   );\r\n          this.setState({\r\n            // msg: this.state.updateMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n            this.setState({\r\n              playerList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          // console.log(error.request);\r\n          this.setState({\r\n            msg:\r\n              this.state.errMsg +\r\n              error.request.status +\r\n              \". \" +\r\n              error.request.responseText\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    axios\r\n      .delete(\r\n        // \"http://localhost:4000/post/addnewteam\",\r\n        process.env.REACT_APP_DELETE_PLAYER,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          // msg: this.state.addMsg + res.data\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.delMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n          this.setState({\r\n            playerList: res.data\r\n          });\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  add() {\r\n    let checkExtra = true; // validate additional details like password, secret q, secret ans etc.\r\n    let isValid = this.validate(this.state.addDetails, checkExtra);\r\n    if (isValid) {\r\n      let { addDetails } = this.state;\r\n      if (addDetails.teamId === 0) {\r\n        addDetails.teamId = null;\r\n      }\r\n      addDetails.fullName = addDetails.firstName;\r\n      if (this.hasValue(addDetails.middleName)) {\r\n        addDetails.fullName += \" \" + addDetails.middleName;\r\n      }\r\n      if (this.hasValue(addDetails.lastName)) {\r\n        addDetails.fullName += \" \" + addDetails.lastName;\r\n      }\r\n      addDetails.emailId = addDetails.emailId.toLowerCase();\r\n      let d = new Date();\r\n      // let date =\r\n      //   d.getFullYear() +\r\n      //   \"-\" +\r\n      //   (d.getMonth() + 1) +\r\n      //   \"-\" +\r\n      //   d.getDate() +\r\n      //   \" \" +\r\n      //   d.toTimeString();\r\n      // date = date.slice(0, 19);\r\n      let date = d.toUTCString();\r\n      addDetails.created = date;\r\n      addDetails.modified = date;\r\n      addDetails.roleId = 4;\r\n      this.setState({ addDetails });\r\n      axios\r\n        .post(\r\n          // \"http://localhost:4000/post/addnewteam\",\r\n          process.env.REACT_APP_ADD_NEW_PLAYER,\r\n          this.state.addDetails\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.addMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n            this.setState({\r\n              playerList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   addModalDisplay: !prevState.addModalDisplay\r\n          // }));\r\n          this.toggleAddModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n  filterData() {\r\n    axios\r\n      .get(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_GET_PLAYER,\r\n        {\r\n          params: {\r\n            full_name: this.state.filterDetails.fullName,\r\n            email_id: this.state.filterDetails.emailId,\r\n            team_id: this.state.filterDetails.teamId,\r\n            role_id: this.state.filterDetails.roleId\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          playerList: res.data\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  td(details, teams, columns) {\r\n    return columns.map((item, i) => {\r\n      let href = \"\";\r\n      let tdLinkCls = \"\";\r\n      let id = \"\";\r\n      if (item === \"full_name\") {\r\n        // check if playerList has been loaded from db on completion of componentDidMount()\r\n        // check if captain or manager value exists for the team in <td>\r\n        // if (players.length > 0) {\r\n        //   id = players\r\n        //     .filter(p => p.full_name === details[item])[0]\r\n        //     .id.toString();\r\n        // }\r\n        // href = process.env.REACT_APP_GET_PLAYER + details.id.toString();\r\n        // href = \"/player/\" + this.state.userId + \"/\" + details.email_id;\r\n        href = \"/player/\" + details.email_id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      if (item === \"team_name\") {\r\n        // check if playerList has been loaded from db on completion of componentDidMount()\r\n        // check if captain or manager value exists for the team in <td>\r\n        if (teams.length > 0 && details[item]) {\r\n          id = teams\r\n            .filter(t => t.team_name === details[item])[0]\r\n            .id.toString();\r\n        }\r\n        href = process.env.REACT_APP_GET_TEAM + id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n\r\n      return (\r\n        <td key={i}>\r\n          {/* <a className={tdLinkCls} href={href}> */}\r\n          <NavLink\r\n            className={tdLinkCls}\r\n            to={{\r\n              // pathname: \"/player/\" + details.email_id,\r\n              pathname: href,\r\n              state: {\r\n                userEmail: this.state.userEmail\r\n              }\r\n            }}\r\n          >\r\n            {details[item]}\r\n          </NavLink>\r\n        </td>\r\n      );\r\n    });\r\n  }\r\n  formatRows(data, teams, columns) {\r\n    return data.map(details => {\r\n      return (\r\n        <tr key={details.id} className=\"trTbl\">\r\n          {this.td(details, teams, columns)}\r\n          {this.state.showEdit ? (\r\n            <td>\r\n              <Button\r\n                color=\"info\"\r\n                className=\"mr-1\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleEditModal.bind(this)}\r\n                onClick={this.setEditModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.first_name,\r\n                  details.last_name,\r\n                  details.middle_name,\r\n                  details.email_id,\r\n                  details.team_name,\r\n                  details.contact_no,\r\n                  details.role_id\r\n                )}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n          {this.state.showDelete ? (\r\n            <td>\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleDeleteModal.bind(this)}\r\n                onClick={this.setDeleteModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.first_name,\r\n                  details.last_name,\r\n                  details.middle_name,\r\n                  details.email_id,\r\n                  details.team_name,\r\n                  details.contact_no\r\n                )}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  addModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.addModalDisplay}\r\n        toggle={this.toggleAddModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleAddModal.bind(this)}>\r\n          Add Player Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"firstNameId\">\r\n                First Name\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your team )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstNameId\"\r\n                // defaultValue={this.state.addDetails.firstName}\r\n                //   value={this.state.addDetails.firstName}\r\n                placeholder=\"First Name\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.firstName = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.firstNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label for=\"middleNameId\">Middle Name</Label>\r\n              {/* <p className=\"hintPara\">(Hint: your middleName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"middleName\"\r\n                id=\"middleNameId\"\r\n                // defaultValue={this.state.addDetails.middleName}\r\n                //   value={this.state.addDetails.middleName}\r\n                placeholder=\"Middle Name\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.middleName = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.middleNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label for=\"lastNameId\">Last Name</Label>\r\n              {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastNameId\"\r\n                // defaultValue={this.state.addDetails.teamName}\r\n                //   value={this.state.addDetails.lastName}\r\n                placeholder=\"Last Name\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.lastName = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.lastNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"emailId\">\r\n                Email ID\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"emailId\"\r\n                // defaultValue={this.state.addDetails.teamName}\r\n                // value={this.state.addDetails.emailId}\r\n                placeholder=\"Email ID\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.emailId = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.emailIdErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label for=\"selectTeamNameId\">Team</Label>\r\n              {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectTeam\"\r\n                id=\"selectTeamNameId\"\r\n                // defaultValue={this.state.addDetails.captainUserId}\r\n                // value={this.state.addDetails.captainUserId}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.teamId = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.teamList.map(t => (\r\n                  <option key={t.id} value={t.id}>\r\n                    {t.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              {/* <p className=\"validationMsg\">{this.state.teamNameErrMsg}</p> */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label for=\"phoneId\">Phone</Label>\r\n              <p className=\"hintPara\">(Hint: e.g. 9999999999)</p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phoneName\"\r\n                id=\"phoneId\"\r\n                // defaultValue={this.state.addDetails.managerUserId}\r\n                //   value={this.state.addDetails.phone}\r\n                placeholder=\"Phone Number\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.phone = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.phoneErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"passwordId\">\r\n                Password\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: at least one uppercase/number/special\r\n                character(!@#$&*)/lowercase required)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"password\"\r\n                name=\"passwordName\"\r\n                id=\"passwordId\"\r\n                // defaultValue={this.state.addDetails.managerUserId}\r\n                //   value={this.state.addDetails.phone}\r\n                placeholder=\"Password\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.password = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.passwordErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"confirmPasswordId\">\r\n                Confirm Password\r\n              </Label>\r\n              {/* <p className=\"hintPara\">\r\n                (Hint: at least one uppercase/number/special\r\n                character(!@#$&*)/lowercase required)\r\n              </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"password\"\r\n                name=\"confirmPasswordName\"\r\n                id=\"confirmPasswordId\"\r\n                // defaultValue={this.state.addDetails.managerUserId}\r\n                //   value={this.state.addDetails.phone}\r\n                placeholder=\"Password\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.confirmPassword = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">\r\n                {this.state.confirmPasswordErrMsg}\r\n              </p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"secretQId\">\r\n                Secret Question\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectsecretQ\"\r\n                id=\"secretQId\"\r\n                // defaultValue={this.state.addDetails.captainUserId}\r\n                // value={this.state.addDetails.captainUserId}\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.secretQid = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.secretQList.map(q => (\r\n                  <option key={q.id} value={q.id}>\r\n                    {q.question}\r\n                  </option>\r\n                ))}\r\n                >\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.secretQErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"secretAId\">\r\n                Secret Answer\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: only alphabets and space allowed. no numbers or special\r\n                characters allowed)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"secretAName\"\r\n                id=\"secretAId\"\r\n                // defaultValue={this.state.addDetails.managerUserId}\r\n                //   value={this.state.addDetails.phone}\r\n                placeholder=\"Secret Answer\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.secretA = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.secretAErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.add.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleAddModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n  filterModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.filterModalDisplay}\r\n        toggle={this.toggleFilterMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleFilterMatchModal.bind(this)}>\r\n          Filter\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"fullNameId\">Full Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"fullNameId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.fullName = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.filterPlayerList.map(player => (\r\n                  <option key={player.id} value={player.full_name}>\r\n                    {player.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"emailId\">Email ID</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"emailId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.emailId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.filterPlayerList.map(player => (\r\n                  <option key={player.id} value={player.email_id}>\r\n                    {player.email_id}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"selectTeamId\">Team</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectTeamId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.teamId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.teamList.map(team => (\r\n                  <option key={team.id} value={team.id}>\r\n                    {team.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectRoleId\">Role</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectRoleId\"\r\n                // value={this.state.addDetails.venue}\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.roleId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.userRoleList.map(role => (\r\n                  <option key={role.id} value={role.id}>\r\n                    {role.role}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.filterData.bind(this)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleFilterMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  editModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.editModalDisplay}\r\n        toggle={this.toggleEditModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleEditModal.bind(this)}>\r\n          Edit Player Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              <div className=\"inLine\">\r\n                <Label className=\"labelRequired\" for=\"firstNameId\">\r\n                  First Name\r\n                </Label>\r\n                {/* <p className=\"hintPara\">(Hint: your team )</p> */}\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstNameId\"\r\n                // defaultValue={this.state.modalData.firstName}\r\n                value={this.state.modalData.firstName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.firstName = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.firstNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <div className=\"inLine\">\r\n                <Label for=\"middleNameId\">Middle Name</Label>\r\n                {/* <p className=\"hintPara\">(Hint: your middleName )</p> */}\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"middleName\"\r\n                id=\"middleNameId\"\r\n                // defaultValue={this.state.modalData.middleName}\r\n                value={this.state.modalData.middleName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.middleName = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.middleNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <div className=\"inLine\">\r\n                <Label for=\"lastNameId\">Last Name</Label>\r\n                {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastNameId\"\r\n                // defaultValue={this.state.modalData.teamName}\r\n                value={this.state.modalData.lastName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.lastName = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.lastNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              <div className=\"inLine\">\r\n                <Label className=\"labelRequired\" for=\"emailId\">\r\n                  Email ID\r\n                </Label>\r\n                {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"emailId\"\r\n                // defaultValue={this.state.modalData.teamName}\r\n                value={this.state.modalData.emailId}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.emailId = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.emailIdErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <div className=\"inLine\">\r\n                <Label for=\"selectTeamNameId\">Team</Label>\r\n                {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              </div>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectTeam\"\r\n                id=\"selectTeamNameId\"\r\n                // defaultValue={this.state.modalData.captainUserId}\r\n                value={this.state.modalData.teamName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.teamName = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.teamName}\r\n                </option>\r\n                {/* <option disabled className=\"optionCls\">\r\n                        ────────────────────────────────────────────\r\n                      </option> */}\r\n                <option disabled className=\"optionCls\"></option>\r\n                {/* <hr /> */}\r\n                {this.state.teamList.map(t => (\r\n                  <option key={t.id} value={t.team_name}>\r\n                    {t.team_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              {/* <p className=\"validationMsg\">{this.state.teamNameErrMsg}</p> */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <div className=\"inLine\">\r\n                <Label for=\"phoneId\">Phone</Label>\r\n                <p className=\"hintPara\">\r\n                  (Hint: e.g. +19999999999 / +919999999999 / 9999999999)\r\n                </p>\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phoneName\"\r\n                id=\"phoneId\"\r\n                // defaultValue={this.state.modalData.managerUserId}\r\n                value={this.state.modalData.phone}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.phone = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.phoneErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            // onClick={this.toggleEditModal.bind(this)}\r\n            onClick={this.update.bind(this)}\r\n          >\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleEditModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  deleteModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteModalDisplay}\r\n        toggle={this.toggleDeleteModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this team? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">First Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.firstName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Middle Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.middleName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Last Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.lastName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Email ID: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.emailId}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Team: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.teamName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Phone: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.phone}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"warning\"\r\n            // onClick={this.toggleDeleteModal.bind(this)}\r\n            onClick={this.delete.bind(this)}\r\n          >\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleDeleteModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  addBtn() {\r\n    if (this.state.showAdd) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mb-2\"\r\n            //   size=\"sm\"\r\n            onClick={this.toggleAddModal.bind(this)}\r\n          >\r\n            Add New Player\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  filterBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.toggleFilterMatchModal.bind(this)}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adminUser();\r\n    // axios.get(\"http://localhost:4000/getteamlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n      this.setState({\r\n        teamList: res.data\r\n      });\r\n      // this.state.teamList.splice(0, 0, \"--Select--\");\r\n    });\r\n\r\n    // axios.get(\"http://localhost:4000/getplayerlist\").then(res => {\r\n    axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n      this.setState({\r\n        playerList: res.data,\r\n        filterPlayerList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_USER_ROLE_LIST).then(res => {\r\n      this.setState({\r\n        userRoleList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_SECRET_QUESTION_LIST).then(res => {\r\n      this.setState({\r\n        secretQList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.tbl = new tblHeaderClass();\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass\r\n        // homeActive={false}\r\n        // teamActive={false}\r\n        // requestActive={false}\r\n        // userId={this.state.userId}\r\n        />\r\n        <div className=\"container\">\r\n          {this.addModal()}\r\n          {this.editModal()}\r\n          {this.deleteModal()}\r\n          {this.filterModal()}\r\n          <h1 className=\"pageHead\">{this.props.header}</h1>\r\n          <this.alrt />\r\n          <div className=\"add-filter-btn\">\r\n            {this.filterBtn()}\r\n            {this.addBtn()}\r\n          </div>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {\r\n                  /* <th>id</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>Home_Team</th>\r\n              <th>Away_Team</th>\r\n              <th>Venue_Id</th>\r\n              <th>Umpire_Id</th> */\r\n                  // if user has permissions to see the action column, then showdisplay the column 'Action'\r\n                  (this.state.showEdit &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Edit\" &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Edit\")\r\n                    : null,\r\n                  this.state.showDelete &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Delete\")\r\n                    : null,\r\n                  this.tbl.createHeader(this.state.colHead))\r\n                }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.formatRows(\r\n                this.state.playerList,\r\n                this.state.teamList,\r\n                this.state.columns\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerTblClass;\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\n// import config from \"../../config-dev\";\r\n// import { Form, FormControl, Button, Image } from \"react-bootstrap\";\r\nimport GC from \"../../images/GC.jpg\";\r\n// import fs from \"fs\";\r\nimport axios from \"axios\";\r\n// import ReactDOM from \"react-dom\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nclass PlayerDetailsClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // userId: this.props.userId, // user email id\r\n      playerEmailId: this.props.playerEmailId, // player email id\r\n      userEmail: this.props.userEmail,\r\n      header: this.props.header,\r\n      //   data: [{ head1: \"body1\", head2: \"body2\" }],\r\n      player: [],\r\n      teamList: [],\r\n      playerList: [],\r\n      userRoleList: [],\r\n      secretQList: [],\r\n      imageList: [],\r\n      imageSrc: \"\",\r\n      userAlreadyHasImage_id: null,\r\n      userAlreadyHasImage_userId: null,\r\n      isDefaultImage: 1,\r\n      selectedPhoto: null,\r\n      loaded: 0,\r\n      addPhotoDetails: {\r\n        user_id: null,\r\n        image: null,\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      msgPhoto: \"\",\r\n      imageType: [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"],\r\n      imageSize: 500000,\r\n      showEdit:\r\n        this.props.userEmail.toLowerCase() === \"admin@myemail.com\"\r\n          ? true\r\n          : false\r\n    };\r\n  }\r\n\r\n  //------------------------------------------------------------------------------------------------------\r\n  // this method is called from fileupload() to alert user of the limitations of uploading a image file\r\n  //------------------------------------------------------------------------------------------------------\r\n  photoAlert = () => {\r\n    if (this.state.msgPhoto !== \"\") {\r\n      let m = <Alert color=\"danger\">{this.state.msgPhoto}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //------------------------------------------------------------------------------------------------------\r\n  // this is called from fileupload() to set 'imageSrc' value to the latest file uploaded by user\r\n  //------------------------------------------------------------------------------------------------------\r\n  // setImageVariable = imageVar => {\r\n  //   const reader = new FileReader();\r\n  //   reader.readAsDataURL(imageVar); // read in base64\r\n  //   // reader.readAsBinaryString(imageVar); // read in binary\r\n  //   reader.onload = e => {\r\n  //     this.setState({\r\n  //       imageSrc: reader.result,\r\n  //       isDefaultImage: 0,\r\n  //       msgPhoto: \"\"\r\n  //     });\r\n  //   };\r\n  // };\r\n  setImageVariable = () => {\r\n    axios\r\n      .get(process.env.REACT_APP_GET_IMAGE_S3, {\r\n        params: { email_id: this.state.playerEmailId }\r\n      })\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          console.log(\"res.data\");\r\n          console.log(res.data);\r\n          this.setState({\r\n            imageSrc: res.data[0].image_data,\r\n            userAlreadyHasImage_id: res.data[0].id,\r\n            userAlreadyHasImage_userId: res.data[0].user_id,\r\n            isDefaultImage: 0,\r\n            msgPhoto: \"\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  //------------------------------------------------------------------------------------------------------\r\n  // this is also called from fileupload() method to update image of an existimg user\r\n  //------------------------------------------------------------------------------------------------------\r\n  updateImageForExistingUser = (data, image) => {\r\n    console.log(\"in updateImageForExistingUser\");\r\n    // append the id of the entry of user_image_data_tb where user already has a image\r\n    data.append(\"id\", this.state.userAlreadyHasImage_id);\r\n    // append the image_data of the entry of user_image_data_tb where user already has a image\r\n    data.append(\"old_image_data\", this.state.imageSrc);\r\n    console.log(data);\r\n    axios.post(process.env.REACT_APP_UPDATE_IMAGE_S3, data).then(res => {\r\n      console.log(\"res from React code using update\");\r\n      console.log(res);\r\n      this.setImageVariable(image);\r\n    });\r\n  };\r\n\r\n  //------------------------------------------------------------------------------------------------------\r\n  // this is called from render method to update state variable when value is entered in input field.\r\n  //------------------------------------------------------------------------------------------------------\r\n  fileChangeHandler = e => {\r\n    let { addPhotoDetails } = this.state;\r\n    addPhotoDetails.user_id = this.state.player[0].id;\r\n    let d = new Date();\r\n    let date = d.toUTCString();\r\n    addPhotoDetails.created = date;\r\n    addPhotoDetails.last_modified = date;\r\n    addPhotoDetails.image = e.target.files[0];\r\n    this.setState({ addPhotoDetails });\r\n    // if (!e.target.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)) {\r\n    //   alert(\"not a file\");\r\n    // } else {\r\n    // this.setState({ selectedPhoto: e.target.files[0], loaded: 0 });\r\n    // }\r\n    // console.log(this.state.selectedPhoto);\r\n    // console.log(e.target.files);\r\n\r\n    // ==============================  SEND IMAGE AS BINARY DATA TO NODE JS FOR UPLOAD ================\r\n    // const reader = new FileReader();\r\n    // // reader.readAsDataURL(e.target.files[0]); // read in base64\r\n    // reader.readAsBinaryString(e.target.files[0]); // read in binary\r\n    // reader.onload = e => {\r\n    //   // console.log(e.target.result);\r\n    //   const image = new Buffer(e.target.result, \"binary\").toString(\"base64\"); // convert binary to base64\r\n    //   addPhotoDetails.image = image;\r\n    //   console.log(addPhotoDetails.user_id);\r\n    //   console.log(addPhotoDetails.created);\r\n    //   this.setState({ addPhotoDetails });\r\n    // };\r\n  };\r\n\r\n  //------------------------------------------------------------------------------------------------------\r\n  // this method uplaods file - add to database if the user does not have any existing image. Or\r\n  // replaces existng image of a user if he/she uplaods a new image\r\n  //------------------------------------------------------------------------------------------------------\r\n  fileUpload = e => {\r\n    // add image as base64 data into node js and then database\r\n    // axios\r\n    //   .post(process.env.REACT_APP_ADD_NEW_IMAGE, this.state.addPhotoDetails)\r\n    //   .then(res => {\r\n    //     this.setState({\r\n    //       msg:\r\n    //         res.status === 200\r\n    //           ? this.state.addMsg\r\n    //           : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n    //     });\r\n    //     axios\r\n    //       .get(process.env.REACT_APP_GET_IMAGE, {\r\n    //         params: { email_id: this.state.playerEmailId }\r\n    //       })\r\n    //       .then(res => {\r\n    //         if (res.data.length > 0) {\r\n    //           this.setState({\r\n    //             imageSrc: res.data[0].image\r\n    //           });\r\n    //         }\r\n    //       });\r\n    //   })\r\n    //   .catch(error => {\r\n    //     this.setState({\r\n    //       msg: this.state.errMsg + error\r\n    //     });\r\n    //   });\r\n    const { addPhotoDetails } = this.state;\r\n    console.log(\"addPhotoDetails.image.type\");\r\n    console.log(addPhotoDetails.image.type);\r\n    // check if file is a image\r\n    // if (!addPhotoDetails.image.name.match(/.(jpg|jpeg|png|gif)$/i)) {\r\n    if (\r\n      this.state.imageType.every(type => addPhotoDetails.image.type !== type)\r\n    ) {\r\n      this.setState({\r\n        msgPhoto: \"this is not a image (jpg|jpeg|png|gif) file\"\r\n      });\r\n    } else {\r\n      if (addPhotoDetails.image.size > this.state.imageSize) {\r\n        this.setState({\r\n          msgPhoto: \"max size limit 500kb. please upload a smaller file\"\r\n        });\r\n      } else {\r\n        const data = new FormData();\r\n        // data.append(\"file\", this.state.selectedPhoto);\r\n        data.append(\"file\", addPhotoDetails.image);\r\n        data.append(\"user_id\", addPhotoDetails.user_id);\r\n        data.append(\"created\", addPhotoDetails.created);\r\n        data.append(\"last_modified\", addPhotoDetails.last_modified);\r\n\r\n        // send file to server\r\n        // if the player has default image, add the new image in database\r\n        // else replace the existing image\r\n        this.state.isDefaultImage\r\n          ? axios\r\n              .post(process.env.REACT_APP_ADD_NEW_IMAGE_S3, data)\r\n              .then(res => {\r\n                // then print response status\r\n                // check if the data is binary\r\n                // console.log(\"res\");\r\n                // console.log(res); // response from node js after image file is uploaded in s3 and that image file data is uploaded in database\r\n                // console.log(this.state.imageSrc); // imageSrc is a direct path of image file stored in a website\r\n                // console.log(GC); // GC is a image .png file imported from a server/local folder\r\n                // console.log(addPhotoDetails.image); // this is derived as e.target.file[0] from input field as uploaded file\r\n\r\n                // this.setState({\r\n                //   imageSrc: res.data.path,\r\n                //   msgPhoto: \"\"\r\n                // });\r\n\r\n                this.setImageVariable(addPhotoDetails.image);\r\n                // const reader = new FileReader();\r\n                // reader.readAsDataURL(addPhotoDetails.image); // read in base64\r\n                // // reader.readAsBinaryString(addPhotoDetails.image); // read in binary\r\n                // reader.onload = e => {\r\n                //   this.setState({\r\n                //     imageSrc: reader.result,\r\n                //     msgPhoto: \"\"\r\n                //   });\r\n                // };\r\n              })\r\n          : this.updateImageForExistingUser(data, addPhotoDetails.image);\r\n      }\r\n    }\r\n  };\r\n\r\n  verticalTable(player) {\r\n    let keys = Object.keys(player[0]);\r\n    return keys.map(key => {\r\n      return (\r\n        <tr key={key}>\r\n          <th>{key}</th>\r\n          <td>{player[0][key]}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  showImage = imgSrc => {\r\n    if (imgSrc !== \"\") {\r\n      return (\r\n        // image sourced from database as binary data\r\n        // <img\r\n        //   src={`data:image/jpg;base64,${imgSrc}`} // convert imgSrc from base64 to binary\r\n        //   alt=\"CRICEXTRA\"\r\n        //   className=\"playerImage\"\r\n        // />\r\n        // image sourced from multer diskstorage as file\r\n        <img src={imgSrc} alt=\"CRICEXTRA\" className=\"playerImage\" />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          // src={process.env.REACT_APP_DEFAULT_IMAGE}\r\n          src={GC}\r\n          alt=\"CRICEXTRA\"\r\n          className=\"playerImage\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  // showImage = () => {\r\n  //   const data = this.state.imageSrc;\r\n  //   const ImageTag = ({ data }) => (\r\n  //     <img src={`data:image/jpeg;base64,${data}`} />\r\n  //   );\r\n  //   return <ImageTag data={data} />;\r\n  // };\r\n\r\n  componentDidMount() {\r\n    axios.get(process.env.REACT_APP_TEAM_LIST).then(res => {\r\n      this.setState({\r\n        teamList: res.data\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n      this.setState({\r\n        playerList: res.data,\r\n        player: res.data.filter(\r\n          p =>\r\n            p.email_id.toLowerCase() === this.state.playerEmailId.toLowerCase()\r\n        )\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_USER_ROLE_LIST).then(res => {\r\n      this.setState({\r\n        userRoleList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_SECRET_QUESTION_LIST).then(res => {\r\n      this.setState({\r\n        secretQList: res.data\r\n      });\r\n    });\r\n\r\n    // get image from database directly where column 'image' (as in res.data[0].image) conatins the\r\n    // image data in base64 format. If no data present, send a default image\r\n    // axios\r\n    //   .get(process.env.REACT_APP_GET_IMAGE, {\r\n    //     params: { email_id: this.state.playerEmailId }\r\n    //   })\r\n    //   .then(res => {\r\n    //     // default photo is a photo against user_id = 0\r\n    //     const defaultImage = res.data.filter(r => r.user_id === 1)[0].image; // this is base64 data\r\n    //     // if user does not have a photo, send default photo\r\n    //     const data =\r\n    //       res.data.filter(\r\n    //         r => r.email_id.toLowerCase() === this.state.playerEmailId.toLowerCase()\r\n    //       ).length === 0\r\n    //         ? defaultImage\r\n    //         : res.data.filter(\r\n    //             r =>\r\n    //               r.email_id.toLowerCase() ===\r\n    //               this.state.playerEmailId.toLowerCase()\r\n    //           )[0].image;\r\n    //     // const base64DataToBinary = data.replace(/^data:image\\/png;base64,/, \"\");\r\n    //     // const imageSrc = fs.writeFile(\"image.jpg\", base64Data, \"base64\", function(\r\n    //     //   err\r\n    //     // ) {\r\n    //     //   console.log(err);\r\n    //     // });\r\n    //     this.setState({\r\n    //       imageList: res.data,\r\n    //       imageSrc: data\r\n    //     });\r\n    //   });\r\n\r\n    // get image from database directly where column 'image' (as in res.data[0].image) conatins the\r\n    // image data in base64 format\r\n    // axios\r\n    //   .get(process.env.REACT_APP_GET_IMAGE, {\r\n    //     params: { email_id: this.state.playerEmailId }\r\n    //   })\r\n    //   .then(res => {\r\n    //     if (res.data.length > 0) {\r\n    //       this.setState({\r\n    //         imageSrc: res.data[0].image\r\n    //       });\r\n    //     }\r\n    //   });\r\n\r\n    // get image from s3\r\n    axios\r\n      .get(process.env.REACT_APP_GET_IMAGE_S3, {\r\n        params: { email_id: this.state.playerEmailId }\r\n      })\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          this.setState({\r\n            imageSrc: res.data[0].image_data,\r\n            userAlreadyHasImage_id: res.data[0].id,\r\n            userAlreadyHasImage_userId: res.data[0].user_id,\r\n            isDefaultImage: 0\r\n          });\r\n        }\r\n      });\r\n\r\n    if (\r\n      this.state.userEmail.toLowerCase() ===\r\n      this.state.playerEmailId.toLowerCase()\r\n    ) {\r\n      this.setState({ showEdit: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const data = this.state.imageSrc;\r\n    // const ImageTag = ({ data }) => (\r\n    //   <img src={`data:image/png;base64,${data}`} />\r\n    // );\r\n    // console.log(GC);\r\n    this.tbl = new tblHeaderClass();\r\n    // console.log(\"config var\");\r\n    // console.log(config.REACT_APP_GET_UMPIRE);\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        <div className=\"container playerDetailsTbl\">\r\n          <h1 className=\"pageHead\">{this.props.header}</h1>\r\n          <div className=\"inlineParent\">\r\n            <div className=\"inlineChild\">\r\n              {/* <img src={ball} alt=\"CRICEXTRA\" className=\"playerImage\" /> */}\r\n              {/* <img\r\n                src={this.state.imageSrc}\r\n                alt=\"CRICEXTRA\"\r\n                className=\"playerImage\"\r\n              /> */}\r\n              {this.showImage(this.state.imageSrc)}\r\n              {/* <div>\r\n                Attach Photo\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  id=\"userPhotoId\"\r\n                  onChange={this.fileChangeHandler}\r\n                />\r\n                <button onClick={this.fileUpload}>Upload</button>\r\n              </div> */}\r\n              {this.state.showEdit ? (\r\n                <div>\r\n                  {/* <form method=\"post\" action=\"#\" id=\"#\"> */}\r\n                  <div className=\"form-group files\">\r\n                    <label>Upload Your File </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      multiple=\"\"\r\n                      name=\"fileName\"\r\n                      // accept=\"image/*,video/*\"\r\n                      // accept=\".jpg\"\r\n                      onChange={this.fileChangeHandler}\r\n                    />\r\n                  </div>\r\n                  {/* </form> */}\r\n\r\n                  <this.photoAlert />\r\n                  <button onClick={this.fileUpload}>Upload</button>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <table className=\"inlineChild\">\r\n              <tbody>\r\n                {this.state.player.length === 0\r\n                  ? null\r\n                  : this.verticalTable(this.state.player)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerDetailsClass;\r\n","import React, { Component } from \"react\";\r\nimport PlayerTblClass from \"./tables/playerTbl\";\r\nimport PlayerDetailsClass from \"./tables/playerDetailsTbl\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass PlayerClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Player List\",\r\n      userEmail: this.props.location.state.userEmail\r\n      // userId: this.props.match.params.userId\r\n      // emailId: this.props.match.params.emailId\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    if (\r\n      !this.props.match.params.playerEmailId ||\r\n      this.props.match.params.playerEmailId === \"\"\r\n    ) {\r\n      // if (\r\n      //   this.props.match.url\r\n      //     // .replace(this.props.match.params.userId, \"\")\r\n      //     .replace(this.props.match.params.emailId, \"\")\r\n      //     .replace(/\\//g, \"\") === \"playersList\"\r\n      // ) {\r\n      return (\r\n        // <div>\r\n        // {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        // /> */}\r\n        // {/* <div className=\"container\"> */}\r\n        // {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        // <PlayerTblClass header={this.state.header} userId={this.state.userId} />\r\n        <PlayerTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        // {/* <AddBtnClass /> */}\r\n        // {/* </div> */}\r\n        // {/* <NavbarFooterClass /> */}\r\n        // </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <PlayerDetailsClass\r\n          header={\"Player Details\"}\r\n          userEmail={this.state.userEmail}\r\n          playerEmailId={this.props.match.params.playerEmailId}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(PlayerClass);\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\nimport { Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  // CustomInput,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\nclass VenueTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      colHead: [\r\n        // \"Id\",\r\n        \"Venue Name\",\r\n        \"Street\",\r\n        \"City\",\r\n        \"State\",\r\n        \"Zip\",\r\n        \"Country\"\r\n      ],\r\n      columns: [\"venue_name\", \"street\", \"city\", \"state\", \"zip\", \"country\"],\r\n      editModalDisplay: false,\r\n      deleteModalDisplay: false,\r\n      addModalDisplay: false,\r\n      filterModalDisplay: false,\r\n      countryStateList: [],\r\n      countryList: [],\r\n      venueList: [],\r\n      filterVenueList: [],\r\n      cityList: [],\r\n      zipList: [],\r\n      addDetails: {\r\n        venueName: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n      filterDetails: {\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n\r\n      editDetails: {\r\n        id: null,\r\n        venueName: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n      modalData: {\r\n        id: null,\r\n        venueName: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n      modalDataOriginal: {\r\n        id: null,\r\n        venueName: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n      venueNameErrMsg: \"\",\r\n      streetErrMsg: \"\",\r\n      cityErrMsg: \"\",\r\n      stateErrMsg: \"\",\r\n      zipErrMsg: \"\",\r\n      countryErrMsg: \"\",\r\n      msg: \"\",\r\n      addMsg: \"New Venue added successfully!\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page. Error code: `,\r\n      updateMsg: \"Venue details updated successfully\",\r\n      delMsg: \"Venue deleted!\",\r\n      showAdd: false,\r\n      showEdit: false,\r\n      showDelete: false\r\n    };\r\n  }\r\n\r\n  adminUser() {\r\n    if (this.state.userEmail === process.env.REACT_APP_ADMIN) {\r\n      this.setState({ showAdd: true, showEdit: true, showDelete: true });\r\n    }\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState(prevState => ({\r\n      editModalDisplay: !prevState.editModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteModal() {\r\n    this.setState(prevState => ({\r\n      deleteModalDisplay: !prevState.deleteModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleAddModal() {\r\n    this.setState(prevState => ({\r\n      addModalDisplay: !prevState.addModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleFilterMatchModal() {\r\n    this.setState(prevState => ({\r\n      filterModalDisplay: !prevState.filterModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      venueNameErrMsg: \"\",\r\n      streetErrMsg: \"\",\r\n      cityErrMsg: \"\",\r\n      stateErrMsg: \"\",\r\n      zipErrMsg: \"\",\r\n      countryErrMsg: \"\",\r\n      addDetails: {\r\n        venueName: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      },\r\n      filterDetails: {\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n\r\n  validate = data => {\r\n    let venueNameErrMsg = \"\";\r\n    let streetErrMsg = \"\";\r\n    let cityErrMsg = \"\";\r\n    let stateErrMsg = \"\";\r\n    let zipErrMsg = \"\";\r\n    let countryErrMsg = \"\";\r\n\r\n    // trim the text fields that are mandatory. non-mandatory may be null, so trim them after null validation.\r\n    data.venueName = data.venueName.trim();\r\n    data.street = data.street.trim();\r\n    data.city = data.city.trim();\r\n    data.state = data.state.trim();\r\n    data.zip = data.zip.trim();\r\n    data.country = data.country.trim();\r\n\r\n    // Venue name validation\r\n    // do not validate if its not changed. But validate if its a new entry\r\n    if (\r\n      this.state.modalDataOriginal.venueName !== data.venueName ||\r\n      this.state.modalDataOriginal.venueName === \"\"\r\n    ) {\r\n      // if (!data.venueName ||data.venueName.length < 1 ||!isNaN(data.venueName) ) {\r\n      //   venueNameErrMsg =\r\n      //     \"At least one alphabet is required\";\r\n      // }\r\n      console.log(data.venueName);\r\n      if (!this.hasValue(data.venueName)) {\r\n        venueNameErrMsg = \"Venue cannot be blank\";\r\n      }\r\n    }\r\n\r\n    // street validation\r\n    if (!this.hasValue(data.street)) {\r\n      streetErrMsg = \"Street cannot be blank\";\r\n    }\r\n\r\n    // city validation\r\n    if (!this.hasValue(data.city)) {\r\n      cityErrMsg = \"city cannot be blank\";\r\n    }\r\n\r\n    // state validation\r\n    if (!data.state || data.state === \"--Select--\") {\r\n      stateErrMsg = \"please select a state\";\r\n    }\r\n\r\n    // zip validation\r\n    if (\r\n      this.state.modalDataOriginal.zip !== data.zip ||\r\n      this.state.modalDataOriginal.zip === \"\"\r\n    ) {\r\n      if (!this.hasValue(data.zip)) {\r\n        zipErrMsg = \"city cannot be blank\";\r\n      }\r\n    }\r\n\r\n    // country validation\r\n    if (!data.country || data.country === \"--Select--\") {\r\n      countryErrMsg = \"please select a country\";\r\n    }\r\n\r\n    if (\r\n      venueNameErrMsg ||\r\n      streetErrMsg ||\r\n      cityErrMsg ||\r\n      stateErrMsg ||\r\n      zipErrMsg ||\r\n      countryErrMsg\r\n    ) {\r\n      this.setState({\r\n        venueNameErrMsg,\r\n        streetErrMsg,\r\n        cityErrMsg,\r\n        stateErrMsg,\r\n        zipErrMsg,\r\n        countryErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  setEditModalData(id, venueName, street, city, state, zip, country) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        venueName,\r\n        street,\r\n        city,\r\n        state,\r\n        zip,\r\n        country\r\n      },\r\n      modalDataOriginal: {\r\n        id,\r\n        venueName,\r\n        street,\r\n        city,\r\n        state,\r\n        zip,\r\n        country\r\n      }\r\n    });\r\n    this.toggleEditModal();\r\n  }\r\n\r\n  setDeleteModalData(id, venueName, street, city, state, zip, country) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        venueName,\r\n        street,\r\n        city,\r\n        state,\r\n        zip,\r\n        country\r\n      }\r\n    });\r\n    this.toggleDeleteModal();\r\n  }\r\n\r\n  update() {\r\n    let isValid = this.validate(this.state.modalData);\r\n    if (isValid) {\r\n      let { modalData } = this.state;\r\n      let { editDetails } = this.state;\r\n\r\n      editDetails.id = modalData.id;\r\n      editDetails.venueName = modalData.venueName;\r\n      editDetails.street = modalData.street;\r\n      editDetails.city = modalData.city;\r\n      editDetails.state = modalData.state;\r\n      editDetails.zip = modalData.zip;\r\n      editDetails.country = modalData.country;\r\n      // modalData.phone === \"\"\r\n      //   ? (editDetails.phone = null)\r\n      //   : (editDetails.phone = modalData.phone);\r\n      // editDetails.fullName = modalData.firstName;\r\n      // if (this.hasValue(modalData.middleName)) {\r\n      //   editDetails.fullName += \" \" + modalData.middleName;\r\n      // }\r\n      // if (this.hasValue(modalData.lastName)) {\r\n      //   editDetails.fullName += \" \" + modalData.lastName;\r\n      // }\r\n\r\n      //   if (this.hasValue(modalData.managerUserId)) {\r\n      //     editDetails.managerUserId = this.state.playerList.filter(\r\n      //       player => player.full_name === modalData.managerUserId\r\n      //     )[0].id;\r\n      //   }\r\n      //   this.hasValue(modalData.managerUserId)\r\n      //     ? (editDetails.managerUserId = this.state.playerList.filter(\r\n      //         player => player.full_name === modalData.managerUserId\r\n      //       )[0].id)\r\n      //   : (editDetails.managerUserId = null);\r\n\r\n      // this.hasValue(modalData.teamName)\r\n      //   ? (editDetails.teamId = this.state.teamList.filter(\r\n      //       t => t.team_name === modalData.teamName\r\n      //     )[0].id)\r\n      //   : (editDetails.teamId = null);\r\n\r\n      // let d = new Date();\r\n      // let date =\r\n      //   d.getFullYear() +\r\n      //   \"-\" +\r\n      //   (d.getMonth() + 1) +\r\n      //   \"-\" +\r\n      //   d.getDate() +\r\n      //   \" \" +\r\n      //   d.toTimeString();\r\n      // date = date.slice(0, 19);\r\n      // editDetails.modified = date;\r\n\r\n      this.setState({ editDetails });\r\n      console.log(this.state.modalData);\r\n      console.log(this.state.editDetails);\r\n      // const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      axios\r\n        .put(\r\n          // \"http://localhost:4000/put/updateteam\",\r\n          process.env.REACT_APP_UPDATE_VENUE,\r\n          this.state.editDetails\r\n        )\r\n        .then(res => {\r\n          //   console.log(\r\n          //     res.config,\r\n          //     res.data,\r\n          //     res.headers,\r\n          //     res.request,\r\n          //     res.status,\r\n          //     res.statusText\r\n          //   );\r\n          this.setState({\r\n            // msg: this.state.updateMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n            this.setState({\r\n              venueList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          // console.log(error.request);\r\n          this.setState({\r\n            msg:\r\n              this.state.errMsg +\r\n              error.request.status +\r\n              \". \" +\r\n              error.request.responseText\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    axios\r\n      .delete(\r\n        // \"http://localhost:4000/post/addnewteam\",\r\n        process.env.REACT_APP_DELETE_VENUE,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          // msg: this.state.addMsg + res.data\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.delMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n          this.setState({\r\n            venueList: res.data\r\n          });\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  add() {\r\n    let isValid = this.validate(this.state.addDetails);\r\n    if (isValid) {\r\n      axios\r\n        .post(\r\n          // \"http://localhost:4000/post/addnewteam\",\r\n          process.env.REACT_APP_ADD_NEW_VENUE,\r\n          this.state.addDetails\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.addMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n            this.setState({\r\n              venueList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   addModal: !prevState.addModal\r\n          // }));\r\n          this.toggleAddModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   addModal: !prevState.addModal\r\n          // }));\r\n          this.toggleAddModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n  filterData() {\r\n    axios\r\n      .get(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_GET_VENUE,\r\n        {\r\n          params: {\r\n            city: this.state.filterDetails.city,\r\n            state: this.state.filterDetails.state,\r\n            zip: this.state.filterDetails.zip,\r\n            country: this.state.filterDetails.country\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          venueList: res.data\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  td(details, columns) {\r\n    return columns.map((item, i) => {\r\n      let href = \"\";\r\n      let tdLinkCls = \"\";\r\n      if (item === \"venue_name\") {\r\n        // check if playerList has been loaded from db on completion of componentDidMount()\r\n        // check if captain or manager value exists for the team in <td>\r\n        // if (players.length > 0) {\r\n        //   id = players\r\n        //     .filter(p => p.full_name === details[item])[0]\r\n        //     .id.toString();\r\n        // }\r\n        href = process.env.REACT_APP_GET_VENUE + details.id.toString();\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n      // if (item === \"team_name\") {\r\n      //   // check if playerList has been loaded from db on completion of componentDidMount()\r\n      //   // check if captain or manager value exists for the team in <td>\r\n      //   if (teams.length > 0 && details[item]) {\r\n      //     id = teams\r\n      //       .filter(t => t.team_name === details[item])[0]\r\n      //       .id.toString();\r\n      //   }\r\n      //   href = process.env.REACT_APP_GET_TEAM + id;\r\n      //   tdLinkCls = \"tdLink\";\r\n      // }\r\n\r\n      return (\r\n        <td key={i}>\r\n          <a className={tdLinkCls} href={href}>\r\n            {details[item]}\r\n          </a>\r\n        </td>\r\n      );\r\n    });\r\n  }\r\n  formatRows(data, columns) {\r\n    return data.map(details => {\r\n      return (\r\n        <tr key={details.id} className=\"trTbl\">\r\n          {this.td(details, columns)}\r\n          {this.state.showEdit ? (\r\n            <td>\r\n              <Button\r\n                color=\"info\"\r\n                className=\"mr-1\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleEditModal.bind(this)}\r\n                onClick={this.setEditModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.venue_name,\r\n                  details.street,\r\n                  details.city,\r\n                  details.state,\r\n                  details.zip,\r\n                  details.country\r\n                )}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n          {this.state.showDelete ? (\r\n            <td>\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleDeleteModal.bind(this)}\r\n                onClick={this.setDeleteModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.venue_name,\r\n                  details.street,\r\n                  details.city,\r\n                  details.state,\r\n                  details.zip,\r\n                  details.country\r\n                )}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n  onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  handleOnAddChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    let { addDetails } = this.state;\r\n    addDetails[name] = value;\r\n    this.setState({ addDetails });\r\n  };\r\n  addModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.addModalDisplay}\r\n        toggle={this.toggleAddModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleAddModal.bind(this)}>\r\n          Add Venue Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"venueId\">\r\n                Venue\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your team )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"venueName\"\r\n                id=\"venueId\"\r\n                placeholder=\"Venue Name\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.venueName = e.target.value;\r\n                //   this.setState({ addDetails });\r\n                //   // console.log(e.target.value);\r\n                // }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.venueNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"streetId\">\r\n                Street\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your middleName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                id=\"streetId\"\r\n                placeholder=\"Street\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.street = e.target.value;\r\n                //   this.setState({ addDetails });\r\n                // }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.streetErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"cityId\">\r\n                City\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"cityId\"\r\n                placeholder=\"City\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.city = e.target.value;\r\n                //   this.setState({ addDetails });\r\n                // }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.cityErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectStateId\">\r\n                State\r\n              </Label>\r\n              {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"state\"\r\n                id=\"selectStateId\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.state = e.target.value;\r\n                //   this.setState({ addDetails });\r\n                // }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.addDetails.country !== \"\"\r\n                  ? this.state.countryStateList\r\n                      .filter(\r\n                        v => v.country_name === this.state.addDetails.country\r\n                      )\r\n                      .map(s => (\r\n                        <option key={s.id} value={s.state_name}>\r\n                          {s.state_name}\r\n                        </option>\r\n                      ))\r\n                  : this.state.countryStateList.map(s => (\r\n                      <option key={s.id} value={s.state_name}>\r\n                        {s.state_name}\r\n                      </option>\r\n                    ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.stateErrMsg}</p>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"zipId\">\r\n                ZIP/Postal Code\r\n              </Label>\r\n              {/* <p className=\"hintPara\">(Hint: your lastName )</p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"zip\"\r\n                id=\"zipId\"\r\n                placeholder=\"ZIP/Postal Code\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.zip = e.target.value;\r\n                //   this.setState({ addDetails });\r\n                // }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.zipErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectCountryId\">\r\n                Country\r\n              </Label>\r\n              {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"country\"\r\n                id=\"selectCountryId\"\r\n                onChange={this.handleOnAddChange}\r\n                // onChange={e => {\r\n                //   let { addDetails } = this.state;\r\n                //   addDetails.country = e.target.value;\r\n                //   // addDetails.state = \"--Select--\";\r\n                //   this.setState({ addDetails });\r\n                // }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.countryList.map(c => (\r\n                  // <option key={c.id} value={c.id}>\r\n                  <option key={c.id} value={c.country_name}>\r\n                    {c.country_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.countryErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.add.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleAddModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n  filterModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.filterModalDisplay}\r\n        toggle={this.toggleFilterMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleFilterMatchModal.bind(this)}>\r\n          Filter\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"cityId\">City</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"cityId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.city = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {/* {this.state.teamList.map(team => ( */}\r\n                {this.state.cityList.map((key, index) => (\r\n                  <option key={index} value={key}>\r\n                    {key}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"stateId\">State</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"stateId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.state = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.countryStateList.map(state => (\r\n                  <option key={state.id} value={state.state_name}>\r\n                    {state.state_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"zipId\">ZIP/Postal Code</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"zipId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.zip = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {/* {this.state.teamList.map(team => ( */}\r\n                {this.state.zipList.map((key, index) => (\r\n                  <option key={index} value={key}>\r\n                    {key}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"selectCountryId\">Country</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectCountryId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.country = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.countryList.map(c => (\r\n                  <option key={c.id} value={c.country_name}>\r\n                    {c.country_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.filterData.bind(this)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleFilterMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  editModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.editModalDisplay}\r\n        toggle={this.toggleEditModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleEditModal.bind(this)}>\r\n          Edit Venue Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"venueNameId\">\r\n                Venue Name\r\n              </Label>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"venueName\"\r\n                id=\"venueNameId\"\r\n                value={this.state.modalData.venueName}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.venueName = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.venueNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"streetId\">\r\n                Street\r\n              </Label>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"streetName\"\r\n                id=\"streetId\"\r\n                value={this.state.modalData.street}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.street = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.streetNameErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"cityId\">\r\n                City\r\n              </Label>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"cityId\"\r\n                value={this.state.modalData.city}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.city = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.cityErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectStateId\">\r\n                State\r\n              </Label>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selectState\"\r\n                id=\"selectStateId\"\r\n                value={this.state.modalData.state}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.state = e.target.value;\r\n                  // console.log(e);\r\n                  // console.log(e.target.textContent);\r\n                  // console.log(e.target.innerHTML);\r\n                  // console.log(e.target.innerText);\r\n                  // console.log(e.target.value);\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.countryStateList\r\n                    .filter(\r\n                      v => v.country_name === this.state.modalData.country\r\n                    )\r\n                    .includes(this.state.modalData.state)\r\n                    ? this.state.modalData.state\r\n                    : \"--Select--\"}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.countryStateList\r\n                  .filter(v => v.country_name === this.state.modalData.country)\r\n                  .map(s => (\r\n                    <option key={s.id} value={s.state_name}>\r\n                      {s.state_name}\r\n                    </option>\r\n                  ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.stateErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"zipId\">\r\n                Zip/Postal Code\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: e.g. 799004 / 85032 / 9999999999)\r\n              </p>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"zipName\"\r\n                id=\"zipId\"\r\n                value={this.state.modalData.zip}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.zip = e.target.value;\r\n                  this.setState({ modalData });\r\n                }}\r\n              ></Input>\r\n              <p className=\"validationMsg\">{this.state.zipErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectCountryId\">\r\n                Country\r\n              </Label>\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"country\"\r\n                id=\"selectCountryId\"\r\n                value={this.state.modalData.country}\r\n                onChange={e => {\r\n                  let { modalData } = this.state;\r\n                  modalData.country = e.target.value;\r\n                  modalData.state = \"--Select--\";\r\n                  this.setState({ modalData });\r\n                }}\r\n              >\r\n                <option key={this.state.modalData.id}>\r\n                  {this.state.modalData.country}\r\n                </option>\r\n                <option disabled className=\"optionCls\"></option>\r\n                {this.state.countryList.map(c => (\r\n                  <option key={c.id} value={c.country_name}>\r\n                    {c.country_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.countryErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            // onClick={this.toggleEditModal.bind(this)}\r\n            onClick={this.update.bind(this)}\r\n          >\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleEditModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  deleteModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteModalDisplay}\r\n        toggle={this.toggleDeleteModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this team? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Venue Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.venueName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Street: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.street}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">City: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.city}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">State: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.state}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Zip: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.zip}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Country: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.country}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"warning\" onClick={this.delete.bind(this)}>\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleDeleteModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  addBtn() {\r\n    if (this.state.showAdd) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mb-2\"\r\n            //   size=\"sm\"\r\n            onClick={this.toggleAddModal.bind(this)}\r\n          >\r\n            Add New Venue\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  filterBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.toggleFilterMatchModal.bind(this)}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleOnViewAllClick = () => {\r\n    this.setState({\r\n      venueList: this.state.filterVenueList\r\n    });\r\n  };\r\n  viewAllBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.handleOnViewAllClick}\r\n        >\r\n          View All\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adminUser();\r\n    axios.get(process.env.REACT_APP_COUNTRY_STATE_LIST).then(res => {\r\n      this.setState({\r\n        countryStateList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_COUNTRY_LIST).then(res => {\r\n      this.setState({\r\n        countryList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_VENUE_LIST).then(res => {\r\n      this.setState({\r\n        venueList: res.data,\r\n        filterVenueList: res.data,\r\n        cityList: res.data\r\n          .map(el => {\r\n            return el.city;\r\n          })\r\n          .filter(v => v !== null)\r\n          .filter(v => v !== \"null\")\r\n          .filter(v => v !== \"\")\r\n          .filter(this.onlyUnique),\r\n        zipList: res.data\r\n          .map(el => {\r\n            return el.zip;\r\n          })\r\n          .filter(v => v !== null)\r\n          .filter(v => v !== \"null\")\r\n          .filter(v => v !== \"\")\r\n          .filter(this.onlyUnique)\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.tbl = new tblHeaderClass();\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass\r\n          // homeActive={false}\r\n          // teamActive={false}\r\n          // requestActive={false}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <div className=\"container\">\r\n          {this.addModal()}\r\n          {this.editModal()}\r\n          {this.deleteModal()}\r\n          {this.filterModal()}\r\n          <h1 className=\"pageHead\">{this.props.header}</h1>\r\n          <this.alrt />\r\n          <div className=\"add-filter-btn\">\r\n            {this.filterBtn()}\r\n            {this.viewAllBtn()}\r\n            {this.addBtn()}\r\n          </div>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {\r\n                  (this.state.showEdit &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Edit\" &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Edit\")\r\n                    : null,\r\n                  this.state.showDelete &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Delete\")\r\n                    : null,\r\n                  this.tbl.createHeader(this.state.colHead))\r\n                }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.formatRows(\r\n                this.state.venueList,\r\n                // this.state.countryStateList,\r\n                this.state.columns\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VenueTblClass;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport VenueTblClass from \"./tables/venueTbl\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import AddBtnClass from \"./addBtn\";\r\n\r\nclass VenueClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Venue List\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        <VenueTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        {/* <AddBtnClass /> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VenueClass);\r\n","import React, { Component } from \"react\";\r\nimport tblHeaderClass from \"./createTableHeader\";\r\nimport NavbarDispClass from \"../navbarTop\";\r\nimport NavbarFooterClass from \"../navbarFooter\";\r\nimport { Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  // CustomInput,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\nclass UmpireTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      colHead: [\"Umpire Id\", \"Player Id\", \"Umpire Name\"],\r\n      columns: [\"id\", \"user_id\", \"full_name\"],\r\n      editModalDisplay: false,\r\n      deleteModalDisplay: false,\r\n      addModalDisplay: false,\r\n      filterModalDisplay: false,\r\n      playerList: [],\r\n      umpireList: [],\r\n      filterUmpireList: [],\r\n      addDetails: {\r\n        userId: null\r\n      },\r\n      filterDetails: {\r\n        userId: \"\"\r\n      },\r\n\r\n      editDetails: {\r\n        id: null,\r\n        userId: null\r\n      },\r\n      modalData: {\r\n        id: null,\r\n        umpireName: \"\",\r\n        userId: \"\"\r\n      },\r\n      umpireNameErrMsg: \"\",\r\n      msg: \"\",\r\n      addMsg: \"New Umpire added successfully!\",\r\n      errMsg: `Sorry we encountered an error. Please report below details to the admin using \r\n      Contact Us link at bottom of the page. Error code: `,\r\n      updateMsg: \"Umpire details updated successfully\",\r\n      delMsg: \"Umpire deleted!\",\r\n      showAdd: false,\r\n      showDelete: false\r\n    };\r\n  }\r\n\r\n  adminUser() {\r\n    if (this.state.userEmail === process.env.REACT_APP_ADMIN) {\r\n      this.setState({ showAdd: true, showDelete: true });\r\n    }\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState(prevState => ({\r\n      editModalDisplay: !prevState.editModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteModal() {\r\n    this.setState(prevState => ({\r\n      deleteModalDisplay: !prevState.deleteModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleAddModal() {\r\n    this.setState(prevState => ({\r\n      addModalDisplay: !prevState.addModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleFilterMatchModal() {\r\n    this.setState(prevState => ({\r\n      filterModalDisplay: !prevState.filterModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      umpireNameErrMsg: \"\",\r\n      addDetails: {\r\n        userId: null\r\n      },\r\n      filterDetails: {\r\n        userId: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n\r\n  validate = data => {\r\n    let umpireNameErrMsg = \"\";\r\n\r\n    // Umpire name validation\r\n    if (!this.hasValue(data.userId)) {\r\n      umpireNameErrMsg = \"Please select a user as umpire\";\r\n    }\r\n    if (\r\n      this.state.umpireList.filter(u => u.user_id.toString() === data.userId)\r\n        .length !== 0\r\n    ) {\r\n      umpireNameErrMsg =\r\n        \"User is already an umpire. Please select a different user\";\r\n    }\r\n    if (umpireNameErrMsg) {\r\n      this.setState({\r\n        umpireNameErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  setEditModalData(id, umpireName, userId) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        umpireName,\r\n        userId\r\n      }\r\n    });\r\n    this.toggleEditModal();\r\n  }\r\n\r\n  setDeleteModalData(id, umpireName, userId) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        umpireName,\r\n        userId\r\n      }\r\n    });\r\n    this.toggleDeleteModal();\r\n  }\r\n\r\n  update() {\r\n    let isValid = this.validate(this.state.modalData);\r\n    if (isValid) {\r\n      let { modalData } = this.state;\r\n      let { editDetails } = this.state;\r\n\r\n      editDetails.id = modalData.id;\r\n      editDetails.userId = this.state.playerList.filter(\r\n        player => player.full_name === modalData.umpireName\r\n      )[0].id;\r\n\r\n      this.setState({ editDetails });\r\n      console.log(this.state.modalData);\r\n      console.log(this.state.editDetails);\r\n      // const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      axios\r\n        .put(\r\n          // \"http://localhost:4000/put/updateteam\",\r\n          process.env.REACT_APP_UPDATE_UMPIRE,\r\n          this.state.editDetails\r\n        )\r\n        .then(res => {\r\n          //   console.log(\r\n          //     res.config,\r\n          //     res.data,\r\n          //     res.headers,\r\n          //     res.request,\r\n          //     res.status,\r\n          //     res.statusText\r\n          //   );\r\n          this.setState({\r\n            // msg: this.state.updateMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n            this.setState({\r\n              umpireList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          // console.log(error.request);\r\n          this.setState({\r\n            msg:\r\n              this.state.errMsg +\r\n              error.request.status +\r\n              \". \" +\r\n              error.request.responseText\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   editModalDisplay: !prevState.editModalDisplay\r\n          // }));\r\n          this.toggleEditModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    axios\r\n      .delete(\r\n        // \"http://localhost:4000/post/addnewteam\",\r\n        process.env.REACT_APP_DELETE_UMPIRE,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          // msg: this.state.addMsg + res.data\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.delMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n          this.setState({\r\n            umpireList: res.data\r\n          });\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addteamModal: !prevState.addteamModal\r\n        // }));\r\n        this.toggleDeleteModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  add() {\r\n    let isValid = this.validate(this.state.addDetails);\r\n    if (isValid) {\r\n      axios\r\n        .post(\r\n          // \"http://localhost:4000/post/addnewteam\",\r\n          process.env.REACT_APP_ADD_NEW_UMPIRE,\r\n          this.state.addDetails\r\n        )\r\n        .then(res => {\r\n          this.setState({\r\n            // msg: this.state.addMsg + res.data\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n            this.setState({\r\n              umpireList: res.data\r\n            });\r\n          });\r\n          // this.props.fetchmessage(this.state.addMsg);\r\n          // this.setState(prevState => ({\r\n          //   addModal: !prevState.addModal\r\n          // }));\r\n          this.toggleAddModal();\r\n          // page is refreshed / page refresh\r\n          // window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n          // this.setState(prevState => ({\r\n          //   addModal: !prevState.addModal\r\n          // }));\r\n          this.toggleAddModal();\r\n          // this.props.fetchmessage(this.state.errMsg);\r\n        });\r\n    }\r\n  }\r\n\r\n  filterData() {\r\n    console.log(this.state.filterDetails.teamName);\r\n    axios\r\n      .get(\r\n        // \"http://localhost:4000/post/addnewmatch\",\r\n        process.env.REACT_APP_GET_UMPIRE,\r\n        {\r\n          params: {\r\n            user_id: this.state.filterDetails.userId\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          umpireList: res.data\r\n        });\r\n        // this.props.fetchmessage(this.state.addMsg);\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // page is refreshed / page refresh\r\n        // window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        // this.setState(prevState => ({\r\n        //   addModalDisplay: !prevState.addModalDisplay\r\n        // }));\r\n        this.toggleFilterMatchModal();\r\n        // this.props.fetchmessage(this.state.errMsg);\r\n      });\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  td(details, players, columns) {\r\n    return columns.map((item, i) => {\r\n      let href = \"\";\r\n      let tdLinkCls = \"\";\r\n      let id = \"\";\r\n      if (item === \"full_name\") {\r\n        // check if playerList has been loaded from db on completion of componentDidMount()\r\n        // check if captain or manager value exists for the team in <td>\r\n        if (players.length > 0) {\r\n          id = players\r\n            .filter(p => p.full_name === details[item])[0]\r\n            .id.toString();\r\n        }\r\n        // href = process.env.REACT_APP_GET_PLAYER + details.id.toString();\r\n        href = process.env.REACT_APP_GET_PLAYER + id;\r\n        tdLinkCls = \"tdLink\";\r\n      }\r\n\r\n      return (\r\n        <td key={i}>\r\n          <a className={tdLinkCls} href={href}>\r\n            {details[item]}\r\n          </a>\r\n        </td>\r\n      );\r\n    });\r\n  }\r\n  formatRows(data, players, columns) {\r\n    return data.map(details => {\r\n      return (\r\n        <tr key={details.id} className=\"trTbl\">\r\n          {this.td(details, players, columns)}\r\n          {this.state.showDelete ? (\r\n            <td>\r\n              {/* <Button\r\n              color=\"info\"\r\n              className=\"mr-1\"\r\n              size=\"sm\"\r\n              // onClick={this.toggleEditModal.bind(this)}\r\n              onClick={this.setEditModalData.bind(\r\n                this,\r\n                details.id,\r\n                details.user_id,\r\n                details.full_name\r\n              )}\r\n            >\r\n              Edit\r\n            </Button> */}\r\n\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                // onClick={this.toggleDeleteModal.bind(this)}\r\n                onClick={this.setDeleteModalData.bind(\r\n                  this,\r\n                  details.id,\r\n                  details.user_id,\r\n                  details.full_name\r\n                )}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          ) : null}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  addModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.addModalDisplay}\r\n        toggle={this.toggleAddModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleAddModal.bind(this)}>\r\n          Add Umpire Details\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup className=\"formRequired\">\r\n              {/* <div className=\"inLine\"> */}\r\n              <Label className=\"labelRequired\" for=\"selectUmpireId\">\r\n                Umpire Name\r\n              </Label>\r\n              {/* <p className=\"hintPara\">\r\n                        (Hint: if opponent not decided, select own team)\r\n                      </p> */}\r\n              {/* </div> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"umpireName\"\r\n                id=\"selectUmpireId\"\r\n                onChange={e => {\r\n                  let { addDetails } = this.state;\r\n                  addDetails.userId = e.target.value;\r\n                  this.setState({ addDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {this.state.playerList.map(p => (\r\n                  <option key={p.id} value={p.id}>\r\n                    {p.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <p className=\"validationMsg\">{this.state.umpireNameErrMsg}</p>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.add.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleAddModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  filterModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.filterModalDisplay}\r\n        toggle={this.toggleFilterMatchModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleFilterMatchModal.bind(this)}>\r\n          Filter\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"umpireId\">Umpire Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"umpireId\"\r\n                onChange={e => {\r\n                  let { filterDetails } = this.state;\r\n                  filterDetails.userId = e.target.value;\r\n                  this.setState({ filterDetails });\r\n                }}\r\n              >\r\n                <option key=\"0\" value=\"--Select--\">\r\n                  --Select--\r\n                </option>\r\n                {/* {this.state.teamList.map(team => ( */}\r\n                {this.state.filterUmpireList.map(u => (\r\n                  <option key={u.id} value={u.user_id}>\r\n                    {u.full_name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.filterData.bind(this)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleFilterMatchModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  // getUniqueUsers(players, umpires){\r\n  //   let result = [];\r\n  //   for (var x in players) {\r\n  //     if (players[x] !== )\r\n  //   }\r\n  // }\r\n\r\n  // editModal() {\r\n  //   return (\r\n  //     <Modal\r\n  //       isOpen={this.state.editModalDisplay}\r\n  //       toggle={this.toggleEditModal.bind(this)}\r\n  //     >\r\n  //       <ModalHeader toggle={this.toggleEditModal.bind(this)}>\r\n  //         Edit Umpire Details\r\n  //       </ModalHeader>\r\n  //       <ModalBody>\r\n  //         <Form>\r\n  //           <FormGroup className=\"formRequired\">\r\n  //             <div className=\"inLine\">\r\n  //               <Label className=\"labelRequired\" for=\"selectUmpireId\">\r\n  //                 State\r\n  //               </Label>\r\n  //             </div>\r\n  //             <Input\r\n  //               type=\"select\"\r\n  //               name=\"selectUmpireName\"\r\n  //               id=\"selectUmpireId\"\r\n  //               value={this.state.modalData.umpireName}\r\n  //               onChange={e => {\r\n  //                 let { modalData } = this.state;\r\n  //                 modalData.umpireName = e.target.value;\r\n  //                 this.setState({ modalData });\r\n  //               }}\r\n  //             >\r\n  //               <option key={this.state.modalData.id}>\r\n  //                 {this.state.modalData.umpireName}\r\n  //               </option>\r\n  //               <option disabled className=\"optionCls\"></option>\r\n  //               {this.state.playerList.map(p => (\r\n  //                 <option key={p.id} value={p.full_name}>\r\n  //                   {p.full_name}\r\n  //                 </option>\r\n  //               ))}\r\n  //             </Input>\r\n  //             <p className=\"validationMsg\">{this.state.umpireNameErrMsg}</p>\r\n  //           </FormGroup>\r\n  //         </Form>\r\n  //       </ModalBody>\r\n  //       <ModalFooter>\r\n  //         <Button\r\n  //           color=\"primary\"\r\n  //           // onClick={this.toggleEditModal.bind(this)}\r\n  //           onClick={this.update.bind(this)}\r\n  //         >\r\n  //           Save\r\n  //         </Button>{\" \"}\r\n  //         <Button color=\"secondary\" onClick={this.toggleEditModal.bind(this)}>\r\n  //           Cancel\r\n  //         </Button>\r\n  //       </ModalFooter>\r\n  //     </Modal>\r\n  //   );\r\n  // }\r\n\r\n  deleteModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteModalDisplay}\r\n        toggle={this.toggleDeleteModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this team? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Umpire Name: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.umpireName}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">User/Player Id: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.userId}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"warning\" onClick={this.delete.bind(this)}>\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggleDeleteModal.bind(this)}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  addBtn() {\r\n    if (this.state.showAdd) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mb-2\"\r\n            //   size=\"sm\"\r\n            onClick={this.toggleAddModal.bind(this)}\r\n          >\r\n            Add Umpire\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  filterBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.toggleFilterMatchModal.bind(this)}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n  handleOnViewAllClick = () => {\r\n    this.setState({\r\n      umpireList: this.state.filterUmpireList\r\n    });\r\n  };\r\n  viewAllBtn() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"info\"\r\n          className=\"mb-2 mr-2\"\r\n          //   size=\"sm\"\r\n          onClick={this.handleOnViewAllClick}\r\n        >\r\n          View All\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.adminUser();\r\n    axios.get(process.env.REACT_APP_UMPIRE_LIST).then(res => {\r\n      this.setState({\r\n        umpireList: res.data,\r\n        filterUmpireList: res.data\r\n      });\r\n    });\r\n\r\n    axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n      this.setState({\r\n        playerList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.tbl = new tblHeaderClass();\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass\r\n          // homeActive={false}\r\n          // teamActive={false}\r\n          // requestActive={false}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <div className=\"container\">\r\n          {this.addModal()}\r\n          {/* {this.editModal()} */}\r\n          {this.deleteModal()}\r\n          {this.filterModal()}\r\n          <h1 className=\"pageHead\">{this.props.header}</h1>\r\n          <this.alrt />\r\n          <div className=\"add-filter-btn\">\r\n            {this.filterBtn()}\r\n            {this.viewAllBtn()}\r\n            {this.addBtn()}\r\n          </div>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {\r\n                  (this.state.showDelete &&\r\n                  this.state.colHead.slice(-1)[0] !== \"Delete\"\r\n                    ? this.state.colHead.push(\"Delete\")\r\n                    : null,\r\n                  this.tbl.createHeader(this.state.colHead))\r\n                }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.formatRows(\r\n                this.state.umpireList,\r\n                this.state.playerList,\r\n                this.state.columns\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UmpireTblClass;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport UmpireTblClass from \"./tables/umpireTbl\";\r\n// import NavbarDispClass from \"./navbarTop\";\r\n// import NavbarFooterClass from \"./navbarFooter\";\r\n// import AddBtnClass from \"./addBtn\";\r\n\r\nclass UmpireClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Umpire List\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <NavbarDispClass\r\n        // homeActive={false}\r\n        // matchActive={false}\r\n        // requestActive={false}\r\n        /> */}\r\n        {/* <div className=\"container\"> */}\r\n        {/* <h1 className=\"pageHead\">{this.state.header}</h1> */}\r\n        <UmpireTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        {/* <AddBtnClass /> */}\r\n        {/* </div> */}\r\n        {/* <NavbarFooterClass /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UmpireClass);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Label, Input, Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport auth from \"./auth\";\r\n\r\nclass LoginClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameValues: {\r\n        nameEmail: \"\",\r\n        namePassword: \"\"\r\n      },\r\n      userLogin: [],\r\n      msg: \"\",\r\n      errMsg: \"sorry wrong username/password combination\",\r\n      emailIdErrMsg: \"\",\r\n      passwordErrMsg: \"\",\r\n      fireRedirect: false\r\n    };\r\n  }\r\n\r\n  LoginForm() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutter\">\r\n          <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n          <div className=\"col-md-8 col-lg-6\">\r\n            <div className=\"login d-flex align-items-center py-5\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                    <h3 className=\"login-heading mb-4 login-h\">Sign In</h3>\r\n                    <this.alrt />\r\n                    <form onSubmit={this.handleOnSubmit}>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"email\"\r\n                          id=\"inputEmail\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email address\"\r\n                          required\r\n                          autoFocus\r\n                          name=\"nameEmail\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputEmail\">Username (your email)</Label>\r\n                        {/* <p className=\"validationMsg\">\r\n                          {this.state.emailIdErrMsg}\r\n                        </p> */}\r\n                      </div>\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          id=\"inputPassword\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          required\r\n                          name=\"namePassword\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputPassword\">Password</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.passwordErrMsg}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* <div className=\"custom-control custom-checkbox mb-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input\"\r\n                          id=\"customCheck1\"\r\n                        />\r\n                        <Label\r\n                          className=\"custom-control-label\"\r\n                          for=\"customCheck1\"\r\n                        >\r\n                          Remember password\r\n                        </Label>\r\n                      </div> */}\r\n                      <button\r\n                        className=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                      <div className=\"text-center\">\r\n                        <a className=\"small\" href=\"/forgotPassword\">\r\n                          Forgot password?\r\n                        </a>\r\n                        <br />\r\n                        <a className=\"small\" href=\"/register\">\r\n                          New User? Register/Create Account\r\n                        </a>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.validate(this.state.nameValues)) {\r\n      // console.log(\"email id is valid\");\r\n      // console.log(this.state.nameValues.nameEmail);\r\n      axios\r\n        .post(process.env.REACT_APP_POST_LOGIN, this.state.nameValues, {\r\n          withCredentials: true\r\n        })\r\n        .then(res => {\r\n          // console.log(\"inside then\");\r\n          // console.log(res.status);\r\n          auth.setTrue();\r\n          // console.log(this.props);\r\n          // console.log(\"inside then\");\r\n          // window.location.href = `/Home/${this.state.nameValues.nameEmail}`;\r\n          // window.location.href = `/home`;\r\n          // return <Redirect to={{ pathname: \"/home\" }} />;\r\n          this.props.history.push({\r\n            pathname: \"/home\",\r\n            state: { userEmail: this.state.nameValues.nameEmail.toLowerCase() }\r\n          });\r\n          // this.setState({\r\n          //   fireRedirect: true\r\n          // });\r\n\r\n          //   axios\r\n          //     .get(process.env.REACT_APP_GET_USER_LOGIN, {\r\n          //       params: {\r\n          //         email_id: this.state.addDetails.emailId\r\n          //       }\r\n          //     })\r\n          //     .then(res => {\r\n          //       this.setState({\r\n          //         userLogin: res.data,\r\n          //         userid: res.data[0].id.toString(),\r\n          //         page: \"homepage\"\r\n          //       });\r\n          //     });\r\n\r\n          //   open a new tab\r\n          //   window.open(\"/Home\");\r\n          //   opens in a new window\r\n          //   window.open(\"/Home\", \"_blank\", \"toolbar=0,location=0,menubar=0\");\r\n          //   opens in a new window\r\n          //   window.open(\"/Home\", \"windowName\", \"height=200,width=200\");\r\n          //   opens in self/same tab\r\n          //   window.open(\"/Home\", \"_self\");\r\n          //   opens in self/same tab\r\n          //   window.location.replace(\"/Home\");\r\n          //   opens in self/same tab\r\n          //   window.location.href = `/Home/${this.state.addDetails.emailId}`;\r\n\r\n          //   OPTION 2\r\n          //   ReactDOM.createPortal(this.props.children, this.containerEl);\r\n          //   this.externalWindow = window.open(\"\", \"_self\");\r\n          // this.containerEl = this.externalWindow.document.createElement('div');\r\n          // this.externalWindow.document.body.appendChild(this.containerEl);\r\n          //   this.externalWindow.document.body.appendChild(HomePageClass);\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    let { nameValues } = this.state;\r\n    nameValues[name] = value;\r\n    this.setState({ nameValues });\r\n  };\r\n\r\n  isValidEmail(email) {\r\n    // var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n\r\n  validate = data => {\r\n    let emailIdErrMsg = \"\";\r\n    let passwordErrMsg = \"\";\r\n\r\n    // trim the text fields that are mandatory. non-mandatory may be null, so trim them after null validation.\r\n    data.nameEmail = data.nameEmail.trim();\r\n    // console.log(\"inside validate\");\r\n\r\n    // emailid validation\r\n    if (\r\n      !data.nameEmail ||\r\n      data.nameEmail.length < 1 ||\r\n      !isNaN(data.nameEmail) ||\r\n      !this.isValidEmail(data.nameEmail)\r\n    ) {\r\n      emailIdErrMsg = \"Please enter a valid email id (your username)!\";\r\n    }\r\n\r\n    if (!this.hasValue(data.namePassword)) {\r\n      passwordErrMsg = \"password cannot be blank\";\r\n    }\r\n\r\n    if (emailIdErrMsg || passwordErrMsg) {\r\n      this.setState({\r\n        emailIdErrMsg,\r\n        passwordErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //   componentDidMount() {\r\n  //     axios.get(process.env.REACT_APP_GET_USER_LOGIN).then(res => {\r\n  //       this.setState({\r\n  //         userLogin: res.data\r\n  //       });\r\n  //     });\r\n  //   }\r\n\r\n  render() {\r\n    // console.log(\"this.state.fireRedirect\");\r\n    // console.log(this.state.fireRedirect);\r\n    // if (this.state.fireRedirect) {\r\n    //   console.log(\"this.state.fireRedirect inside if\");\r\n    //   console.log(this.state.fireRedirect);\r\n    //   return <Redirect to={{ pathname: \"/home\" }} />;\r\n    // }\r\n    return <div>{this.LoginForm()}</div>;\r\n  }\r\n}\r\n\r\n// export default LoginClass;\r\nexport default withRouter(LoginClass);\r\n","import React, { Component } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import { Label } from \"react-bootstrap\";\r\nimport { Label, Input, Alert } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n// import HomePageClass from \"./homePage\";\r\n\r\nclass RegistrationClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addDetails: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        emailId: \"\",\r\n        fullName: \"\",\r\n        teamId: null,\r\n        phone: null,\r\n        password: \"\",\r\n        secretQid: null,\r\n        secretA: \"\",\r\n        created: \"\",\r\n        modified: \"\"\r\n      },\r\n      nameValues: {\r\n        nameFirstname: \"\",\r\n        nameMiddlename: \"\",\r\n        nameLastname: \"\",\r\n        nameEmail: \"\",\r\n        namePassword: \"\",\r\n        nameConfirmPassword: \"\",\r\n        nameSecretQ: \"\",\r\n        nameSecretA: \"\"\r\n      },\r\n\r\n      firstNameErrMsg: \"\",\r\n      lastNameErrMsg: \"\",\r\n      middleNameErrMsg: \"\",\r\n      emailIdErrMsg: \"\",\r\n      passwordErrMsg: \"\",\r\n      confirmPasswordErrMsg: \"\",\r\n      secretQErrMsg: \"\",\r\n      secretAErrMsg: \"\",\r\n      msg: \"\",\r\n      secretQList: [],\r\n      playerList: [],\r\n      userLogin: [],\r\n      userid: \"\"\r\n      //   page: \"registration\"\r\n      //   externalWindow: null,\r\n      //   containerEl: null\r\n    };\r\n  }\r\n\r\n  RegistrationForm() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutter\">\r\n          <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n          <div className=\"col-md-8 col-lg-6\">\r\n            <div className=\"login d-flex align-items-center py-5\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                    <h3 className=\"login-heading mb-4\">Register</h3>\r\n                    <this.alrt />\r\n                    <form onSubmit={this.handleOnSubmit}>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"inputFirstname\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"First Name\"\r\n                          required\r\n                          autoFocus\r\n                          name=\"nameFirstname\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputFirstname\">First Name</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.firstNameErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"inputMiddlename\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Middle Name\"\r\n                          autoFocus\r\n                          name=\"nameMiddlename\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputMiddlename\">Middle Name</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.middleNameErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"inputLastname\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Last Name\"\r\n                          autoFocus\r\n                          name=\"nameLastname\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputLastname\">Last Name</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.lastNameErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"email\"\r\n                          id=\"inputEmail\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email address\"\r\n                          required\r\n                          autoFocus\r\n                          name=\"nameEmail\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputEmail\">Email address</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.emailIdErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          id=\"inputPassword\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          required\r\n                          name=\"namePassword\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputPassword\">Password</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.passwordErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          id=\"inputConfirmPassword\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Confirm Password\"\r\n                          required\r\n                          name=\"nameConfirmPassword\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputConfirmPassword\">\r\n                          Confirm Password\r\n                        </Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.confirmPasswordErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"selectSecretQues\"\r\n                          className=\"form-control\"\r\n                          //   placeholder=\"Last Name\"\r\n                          required\r\n                          autoFocus\r\n                          name=\"nameSecretQ\"\r\n                          onChange={this.handleOnChange}\r\n                        >\r\n                          <option key=\"0\" value=\"--Select--\">\r\n                            --Select Secret Question--\r\n                          </option>\r\n                          {this.state.secretQList.map(s => (\r\n                            <option key={s.id} value={s.id}>\r\n                              {s.question}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {/* <Label for=\"selectSecretQues\">Secret Question</Label> */}\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.secretQErrMsg}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"inputSecretA\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Secret Answer\"\r\n                          required\r\n                          name=\"nameSecretA\"\r\n                          onChange={this.handleOnChange}\r\n                        />\r\n                        <Label for=\"inputSecretA\">Secret Answer</Label>\r\n                        <p className=\"validationMsg\">\r\n                          {this.state.secretAErrMsg}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <button\r\n                        className=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                      <div className=\"text-center\">\r\n                        <a className=\"small\" href=\"/login\">\r\n                          Existing User? Login Here\r\n                        </a>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.validate(this.state.nameValues)) {\r\n      let { addDetails } = this.state;\r\n      let { nameValues } = this.state;\r\n      addDetails.firstName = nameValues.nameFirstname;\r\n      addDetails.lastName = nameValues.nameMiddlename;\r\n      addDetails.middleName = nameValues.nameLastname;\r\n      addDetails.emailId = nameValues.nameEmail.toLowerCase();\r\n      addDetails.password = nameValues.namePassword;\r\n      addDetails.confirmPassword = nameValues.nameConfirmPassword;\r\n      addDetails.secretQid = nameValues.nameSecretQ;\r\n      addDetails.secretA = nameValues.nameSecretA;\r\n      addDetails.teamId = null;\r\n      addDetails.fullName = addDetails.firstName;\r\n      if (this.hasValue(addDetails.middleName)) {\r\n        addDetails.fullName += \" \" + addDetails.middleName;\r\n      }\r\n      if (this.hasValue(addDetails.lastName)) {\r\n        addDetails.fullName += \" \" + addDetails.lastName;\r\n      }\r\n      let d = new Date();\r\n      // let date =\r\n      //   d.getFullYear() +\r\n      //   \"-\" +\r\n      //   (d.getMonth() + 1) +\r\n      //   \"-\" +\r\n      //   d.getDate() +\r\n      //   \" \" +\r\n      //   d.toTimeString();\r\n      // date = date.slice(0, 19);\r\n      let date = d.toUTCString();\r\n      addDetails.created = date;\r\n      addDetails.modified = date;\r\n\r\n      this.setState({ addDetails });\r\n      axios\r\n        .post(process.env.REACT_APP_ADD_NEW_PLAYER, this.state.addDetails)\r\n        .then(res => {\r\n          this.setState({\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n\r\n          //   axios\r\n          //     .get(process.env.REACT_APP_GET_USER_LOGIN, {\r\n          //       params: {\r\n          //         email_id: this.state.addDetails.emailId\r\n          //       }\r\n          //     })\r\n          //     .then(res => {\r\n          //       this.setState({\r\n          //         userLogin: res.data,\r\n          //         userid: res.data[0].id.toString(),\r\n          //         page: \"homepage\"\r\n          //       });\r\n          //     });\r\n\r\n          //   open a new tab\r\n          //   window.open(\"/Home\");\r\n          //   opens in a new window\r\n          //   window.open(\"/Home\", \"_blank\", \"toolbar=0,location=0,menubar=0\");\r\n          //   opens in a new window\r\n          //   window.open(\"/Home\", \"windowName\", \"height=200,width=200\");\r\n          //   opens in self/same tab\r\n          //   window.open(\"/Home\", \"_self\");\r\n          //   opens in self/same tab\r\n          //   window.location.replace(\"/Home\");\r\n          //   opens in self/same tab\r\n          window.location.href = `/Home/${this.state.addDetails.emailId}`;\r\n\r\n          //   OPTION 2\r\n          //   ReactDOM.createPortal(this.props.children, this.containerEl);\r\n          //   this.externalWindow = window.open(\"\", \"_self\");\r\n          // this.containerEl = this.externalWindow.document.createElement('div');\r\n          // this.externalWindow.document.body.appendChild(this.containerEl);\r\n          //   this.externalWindow.document.body.appendChild(HomePageClass);\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    let { nameValues } = this.state;\r\n    nameValues[name] = value;\r\n    this.setState({ nameValues });\r\n  };\r\n\r\n  isValidName(str) {\r\n    // return !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{@}|\\\\\":<>\\?]/g.test(str);\r\n    return (\r\n      //   !/[~`!$%^*+=[\\]\\\\';,/{}()@-_&#:|\\\\\"<>?]/g.test(str) && str.match(/[a-z]/i)\r\n      str.match(/^[A-Za-z.\\s]+$/i)\r\n      //   str.match(/^\\w+(\\s)?\\w+$/i)\r\n    );\r\n  }\r\n  isValidEmail(email) {\r\n    // var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  isValidPhone(phone) {\r\n    // '(^\\+)?'checks if 1st char is '+' and this is opional. '[0-9]+' checks rest of the chars should be digit\r\n    // var re = /(^\\+)?[0-9]+/;\r\n    // var re = /(^\\+)?\\d+/;   // same as above replaced '[0-9]' with '\\d'\r\n    var re = /[0-9]+/; // checks if its a number\r\n    return re.test(phone);\r\n  }\r\n  isValidPassword(str) {\r\n    // return str.match(/[A-Za-z0-9.@#&*!]+/i);\r\n    // return str.match(/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8}$/);\r\n    return str.match(\r\n      /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z])(?=.{6,})/\r\n    );\r\n  }\r\n  isValidAnswer(str) {\r\n    return str.match(/^[A-Za-z\\s]+$/i);\r\n  }\r\n  hasValue(data) {\r\n    return data !== undefined && data !== null && data !== \"\";\r\n  }\r\n\r\n  validate = data => {\r\n    let firstNameErrMsg = \"\";\r\n    let middleNameErrMsg = \"\";\r\n    let lastNameErrMsg = \"\";\r\n    let emailIdErrMsg = \"\";\r\n    let passwordErrMsg = \"\";\r\n    let confirmPasswordErrMsg = \"\";\r\n    let secretQErrMsg = \"\";\r\n    let secretAErrMsg = \"\";\r\n\r\n    // trim the text fields that are mandatory. non-mandatory may be null, so trim them after null validation.\r\n    data.nameFirstname = data.nameFirstname.trim();\r\n    data.nameEmail = data.nameEmail.trim();\r\n\r\n    // first name validation\r\n\r\n    if (\r\n      !data.nameFirstname ||\r\n      data.nameFirstname.length < 1 ||\r\n      !isNaN(data.nameFirstname) ||\r\n      !this.isValidName(data.nameFirstname)\r\n    ) {\r\n      firstNameErrMsg =\r\n        \"At least one alphabet is required. No special characters or numbers allowed\";\r\n    }\r\n\r\n    // middle name validation\r\n    if (this.hasValue(data.nameMiddlename)) {\r\n      data.nameMiddlename = data.nameMiddlename.trim();\r\n      if (\r\n        !isNaN(data.nameMiddlename) ||\r\n        !this.isValidName(data.nameMiddlename)\r\n      ) {\r\n        middleNameErrMsg = \"No special characters or numbers allowed\";\r\n      }\r\n    }\r\n\r\n    // last name validation\r\n    if (this.hasValue(data.nameLastname)) {\r\n      data.nameLastname = data.nameLastname.trim();\r\n      if (!isNaN(data.nameLastname) || !this.isValidName(data.nameLastname)) {\r\n        lastNameErrMsg = \"No special characters or numbers allowed\";\r\n      }\r\n    }\r\n\r\n    // emailid validation\r\n    if (\r\n      !data.nameEmail ||\r\n      data.nameEmail.length < 1 ||\r\n      !isNaN(data.nameEmail) ||\r\n      !this.isValidEmail(data.nameEmail)\r\n    ) {\r\n      emailIdErrMsg = \"Please enter a valid email id!\";\r\n    } else {\r\n      if (\r\n        this.state.playerList.filter(p => p.email_id === data.nameEmail)\r\n          .length > 0\r\n      ) {\r\n        emailIdErrMsg =\r\n          data.nameEmail + \" is already taken. Please try a different email Id\";\r\n      }\r\n    }\r\n\r\n    // password validation\r\n    if (this.hasValue(data.namePassword)) {\r\n      data.namePassword = data.namePassword.trim();\r\n      if (!this.isValidPassword(data.namePassword)) {\r\n        passwordErrMsg = \"please enter a valid password\";\r\n      }\r\n    } else {\r\n      passwordErrMsg = \"password cannot be blank\";\r\n    }\r\n\r\n    // confirm password validation\r\n    if (this.hasValue(data.nameConfirmPassword)) {\r\n      data.nameConfirmPassword = data.nameConfirmPassword.trim();\r\n      if (data.namePassword !== data.nameConfirmPassword) {\r\n        confirmPasswordErrMsg = \"password should match\";\r\n      }\r\n    } else {\r\n      confirmPasswordErrMsg = \"confirm password field cannot be blank\";\r\n    }\r\n\r\n    // secret question validation\r\n    if (!this.hasValue(data.nameSecretQ) || data.nameSecretQ === \"--Select--\") {\r\n      secretQErrMsg = \"please select a question\";\r\n    }\r\n\r\n    // secret answer validation\r\n    if (this.hasValue(data.nameSecretA)) {\r\n      data.nameSecretA = data.nameSecretA.trim();\r\n      if (!this.isValidAnswer(data.nameSecretA)) {\r\n        secretAErrMsg =\r\n          \"Only alphabates and space are allowed. No numbers, special characters allowed\";\r\n      }\r\n    } else {\r\n      secretAErrMsg = \"Please enter a answer\";\r\n    }\r\n\r\n    if (\r\n      firstNameErrMsg ||\r\n      middleNameErrMsg ||\r\n      lastNameErrMsg ||\r\n      emailIdErrMsg ||\r\n      passwordErrMsg ||\r\n      confirmPasswordErrMsg ||\r\n      secretQErrMsg ||\r\n      secretAErrMsg\r\n    ) {\r\n      this.setState({\r\n        firstNameErrMsg,\r\n        middleNameErrMsg,\r\n        lastNameErrMsg,\r\n        emailIdErrMsg,\r\n        passwordErrMsg,\r\n        confirmPasswordErrMsg,\r\n        secretQErrMsg,\r\n        secretAErrMsg\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(process.env.REACT_APP_SECRET_QUESTION_LIST).then(res => {\r\n      this.setState({\r\n        secretQList: res.data\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_PLAYER_LIST).then(res => {\r\n      this.setState({\r\n        playerList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // let { page } = this.state;\r\n\r\n    // switch (page) {\r\n    //   case \"registration\":\r\n    //     return this.RegistrationForm();\r\n    //   //   case \"homepage\":\r\n    //   // return <HomePageClass userid={this.state.userid} />;\r\n    //   // return <HomePageClass emailId={this.state.addDetails.emailId} />;\r\n\r\n    //   default:\r\n    //     return this.RegistrationForm();\r\n    // }\r\n    return this.RegistrationForm();\r\n  }\r\n}\r\n\r\nexport default RegistrationClass;\r\n","import React, { Component } from \"react\";\r\n// import { Label } from \"react-bootstrap\";\r\nimport { Label } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass ForgotPasswordClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userLoginList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(process.env.REACT_APP_USER_LOGIN_LIST).then(res => {\r\n      this.setState({\r\n        userLoginList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid fixed-top\">\r\n        <div className=\"row no-gutter\">\r\n          <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n          <div className=\"col-md-8 col-lg-6\">\r\n            <div className=\"login d-flex align-items-center py-5\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                    <h3 className=\"login-heading mb-4\">Sign In</h3>\r\n                    <form>\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          type=\"email\"\r\n                          id=\"inputEmail\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email address\"\r\n                          required\r\n                          autoFocus\r\n                        />\r\n                        <Label for=\"inputEmail\">Email address</Label>\r\n                      </div>\r\n\r\n                      <div className=\"form-label-group\">\r\n                        <input\r\n                          type=\"password\"\r\n                          id=\"inputPassword\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          required\r\n                        />\r\n                        <Label for=\"inputPassword\">Password</Label>\r\n                      </div>\r\n\r\n                      <div className=\"custom-control custom-checkbox mb-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input\"\r\n                          id=\"customCheck1\"\r\n                        />\r\n                        <Label\r\n                          className=\"custom-control-label\"\r\n                          for=\"customCheck1\"\r\n                        >\r\n                          Remember password\r\n                        </Label>\r\n                      </div>\r\n                      <button\r\n                        className=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                      <div className=\"text-center\">\r\n                        {/* <a className=\"small\" href=\"#\">\r\n                          Forgot password?\r\n                        </a>\r\n                        <br /> */}\r\n                        <a className=\"small\" href=\"/register\">\r\n                          New User? Register/Create Account\r\n                        </a>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPasswordClass;\r\n","import React, { Component } from \"react\";\r\nimport RequestAllTblClass from \"./tables/requestAllTbl\";\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass RequestAllClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"All Requests\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        <RequestAllTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestAllClass);\r\n","import React, { Component } from \"react\";\r\nimport RequestMyTblClass from \"./tables/requestMyTbl\";\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass RequestMyClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"My Requests\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        <RequestMyTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestMyClass);\r\n","import React, { Component } from \"react\";\r\nimport RequestSubmitTblClass from \"./tables/requestSubmitTbl\";\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass RequestSubmitClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Submit Request\",\r\n      userEmail: this.props.location.state.userEmail\r\n    };\r\n  }\r\n  render() {\r\n    // console.log(\"inside request submit, user email is \");\r\n    // console.log(this.props);\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        <RequestSubmitTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n        />\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestSubmitClass);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport default_image from \"../../images/00_default_image.jpg\";\r\n\r\nclass RequestDetailsTblClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: this.props.userEmail,\r\n      // requestId: this.props.requestId,\r\n      requestData: this.props.requestData,\r\n      msg: this.props.msg ? this.props.msg : \"\",\r\n      user: this.props.user,\r\n      // comments: this.props.comment,\r\n      comments: [],\r\n      commentList: [],\r\n      requestTemplateList: [],\r\n      sportTypeList: [],\r\n      requestStatusList: [],\r\n      matchList: [],\r\n      userImageDataList: [],\r\n      header: \"Request Details\",\r\n      addComment: {\r\n        requestId: \"\",\r\n        comment: \"\",\r\n        userId: \"\",\r\n        created: \"\",\r\n        lastModified: \"\"\r\n      },\r\n      addToCommentList: {\r\n        id: null,\r\n        request_id: null,\r\n        comment: \"\",\r\n        user_id: null,\r\n        full_name: \"\",\r\n        email_id: \"\",\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      modalDataComment: {\r\n        id: null,\r\n        request_id: null,\r\n        comment: \"\",\r\n        user_id: null,\r\n        full_name: \"\",\r\n        email_id: \"\",\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      editedCommentData: {\r\n        id: null,\r\n        request_id: null,\r\n        comment: \"\",\r\n        user_id: null,\r\n        full_name: \"\",\r\n        email_id: \"\",\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      editRequestModalDisplay: false,\r\n      deleteRequestModalDisplay: false,\r\n      editCommentModalDisplay: false,\r\n      deleteCommentModalDisplay: false,\r\n      modalData: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        requestStatus: \"\",\r\n        sportType: \"\",\r\n        address: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        matchId: \"\"\r\n      },\r\n      modalDataOriginal: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        requestStatus: \"\",\r\n        sportType: \"\",\r\n        address: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        matchId: \"\"\r\n      },\r\n      editRequestData: {\r\n        id: null,\r\n        title: \"\",\r\n        requestTemplateId: null,\r\n        description: \"\",\r\n        requestorId: null,\r\n        requestStatusId: null,\r\n        sportType: \"\",\r\n        address: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        matchId: null,\r\n        lastModified: \"\"\r\n      },\r\n      editRequestDataToUpdate: {\r\n        id: null,\r\n        title: \"\",\r\n        request_template: null,\r\n        description: \"\",\r\n        requestor: null,\r\n        email_id: \"\",\r\n        phone_no: \"\",\r\n        request_status: null,\r\n        sport_type: \"\",\r\n        address: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        match_id: null,\r\n        created: \"\",\r\n        last_modified: \"\"\r\n      },\r\n      originalComment: \"\",\r\n      addCommentMsg: \"comment added!\",\r\n      errMsg: \"error!\",\r\n      updateRequestMsg: \"request updated!\",\r\n      deleteRequestMsg: \"request deleted!\",\r\n      updateCommentMsg: \"comment updated!\",\r\n      deleteCommentMsg: \"comment deleted!\",\r\n      showEditRequest: false,\r\n      showEditComment: false\r\n      //   cols: [\r\n      //     \"sport_type\",\r\n      //     \"requestor\",\r\n      //     \"title\",\r\n      //     \"created\",\r\n      //     \"description\",\r\n      //     \"address\",\r\n      //     \"date\",\r\n      //     \"time\",\r\n      //     \"request_status\"\r\n      //   ]\r\n      // colsRequest: [\"id\", \"title\", \"request_template\", \"description\", \"requestor\", \"email_id\", \"phone_no\",\r\n      // \"request_status\", \"sport_type\", \"address\", \"date\", \"time\", \"match_id\",\r\n      // \"created\", \"last_modified\"]\r\n\r\n      // colsComment: [\"id\", \"request_id\", \"comment\", \"user_id\", \"full_name\", \"email_id\",\r\n      // \"created\", \"last_modified\"]\r\n    };\r\n  }\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      msg: \"\"\r\n    });\r\n  };\r\n\r\n  alrt = () => {\r\n    if (this.state.msg !== \"\") {\r\n      let m = <Alert color=\"info\">{this.state.msg}</Alert>;\r\n      return m;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  handleOnChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { addComment } = this.state;\r\n    addComment[name] = value;\r\n    this.setState({ addComment });\r\n  };\r\n  onChangeEdit = e => {\r\n    e.preventDefault();\r\n    // console.log(e.target.value);\r\n    const { name, value } = e.target;\r\n    const { modalData } = this.state;\r\n    modalData[name] = value;\r\n    this.setState({ modalData });\r\n  };\r\n  handleKeyDown(e) {\r\n    const heightLimit = 130;\r\n    e.target.style.height = \"inherit\";\r\n    e.target.style.height = `${e.target.scrollHeight + 10}px`;\r\n    // In case you have a limitation\r\n    e.target.style.height = `${Math.min(e.target.scrollHeight, heightLimit)}px`;\r\n  }\r\n  resetForm() {\r\n    document.getElementById(\"formId\").reset();\r\n    // document.getElementById(\"formEditId\").reset();\r\n  }\r\n  toggleEditRequestModal() {\r\n    this.setState(prevState => ({\r\n      editRequestModalDisplay: !prevState.editRequestModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteRequestModal() {\r\n    this.setState(prevState => ({\r\n      deleteRequestModalDisplay: !prevState.deleteRequestModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n  toggleEditCommentModal(row) {\r\n    // this.setState(prevState => ({\r\n    //   editCommentModalDisplay: !prevState.editCommentModalDisplay\r\n    // }));\r\n\r\n    const inputid = \"input\" + row.id;\r\n    const divid = \"div\" + row.id;\r\n    const divactionid = \"divAction\" + row.id;\r\n    let divs = document.getElementById(divid);\r\n    let inputs = document.getElementById(inputid);\r\n    let divactions = document.getElementById(divactionid);\r\n    // console.log(\"divs.style.display\");\r\n    // console.log(divs.style.display);\r\n    // console.log(inputs.style.display);\r\n    // console.log(divactions.style.display);\r\n    if (divs.style.display === \"block\") {\r\n      divs.style.display = \"none\";\r\n    } else {\r\n      divs.style.display = \"block\";\r\n    }\r\n    if (inputs.style.display === \"block\") {\r\n      inputs.style.display = \"none\";\r\n    } else {\r\n      inputs.style.display = \"block\";\r\n    }\r\n    if (divactions.style.display === \"block\") {\r\n      divactions.style.display = \"none\";\r\n    } else {\r\n      divactions.style.display = \"block\";\r\n    }\r\n    // console.log(\"divs.style.display\");\r\n    // console.log(divs.style.display);\r\n    // console.log(inputs.style.display);\r\n    // console.log(divactions.style.display);\r\n    this.resetStates();\r\n  }\r\n  toggleDeleteCommentModal() {\r\n    this.setState(prevState => ({\r\n      deleteCommentModalDisplay: !prevState.deleteCommentModalDisplay\r\n    }));\r\n    this.resetStates();\r\n  }\r\n\r\n  setEditRequestModalData(\r\n    id,\r\n    title,\r\n    description,\r\n    requestStatus,\r\n    sportType,\r\n    address,\r\n    date,\r\n    time,\r\n    matchId\r\n  ) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        title,\r\n        description,\r\n        requestStatus,\r\n        sportType,\r\n        address,\r\n        date,\r\n        time,\r\n        matchId\r\n      },\r\n      modalDataOriginal: {\r\n        id,\r\n        title,\r\n        description,\r\n        requestStatus,\r\n        sportType,\r\n        address,\r\n        date,\r\n        time,\r\n        matchId\r\n      }\r\n    });\r\n    this.toggleEditRequestModal();\r\n  }\r\n\r\n  setDeleteRequestModalData(\r\n    id,\r\n    title,\r\n    description,\r\n    requestStatus,\r\n    sportType,\r\n    address,\r\n    date,\r\n    time,\r\n    matchId\r\n  ) {\r\n    this.setState({\r\n      modalData: {\r\n        id,\r\n        title,\r\n        description,\r\n        requestStatus,\r\n        sportType,\r\n        address,\r\n        date,\r\n        time,\r\n        matchId\r\n      }\r\n    });\r\n    this.toggleDeleteRequestModal();\r\n  }\r\n  editRequestModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.editRequestModalDisplay}\r\n        toggle={this.toggleEditRequestModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleEditRequestModal.bind(this)}>\r\n          Edit Request\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form id=\"formEditId\">\r\n            <FormGroup className=\"formRequired\">\r\n              <Label className=\"labelRequired\" for=\"titleId\">\r\n                Title\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"titleId\"\r\n                list=\"requesttemplate\"\r\n                value={this.state.modalData.title}\r\n                onChange={this.onChangeEdit}\r\n              />\r\n              <datalist id=\"requesttemplate\">\r\n                {this.state.requestTemplateList.map(t => (\r\n                  <option key={t.id} value={t.request_template}>\r\n                    {t.request_template}\r\n                  </option>\r\n                ))}\r\n              </datalist>\r\n              <p className=\"validationMsg\">{this.state.titleErrMsg}</p>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"descriptionId\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"descriptionId\"\r\n                value={this.state.modalData.description}\r\n                onChange={this.onChangeEdit}\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"requestStatusId\">Status</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"requestStatus\"\r\n                id=\"requestStatusId\"\r\n                value={this.state.modalData.requestStatus}\r\n                onChange={this.onChangeEdit}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.requestStatusList.map(s => (\r\n                  <option key={s.id} value={s.request_status}>\r\n                    {s.request_status}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"sporttypedid\">Sport</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"sportType\"\r\n                id=\"sporttypedid\"\r\n                list=\"sporttype\"\r\n                value={this.state.modalData.sportType}\r\n                onChange={this.onChangeEdit}\r\n              />\r\n              <datalist id=\"sporttype\">\r\n                {this.state.sportTypeList.map(s => (\r\n                  <option key={s.id} value={s.sport_type}>\r\n                    {/* {s.sport_type} */}\r\n                  </option>\r\n                ))}\r\n              </datalist>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"addressid\">Address</Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: e.g. deer valley community park)\r\n              </p>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"addressid\"\r\n                value={this.state.modalData.address}\r\n                onChange={this.onChangeEdit}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"dateId\">Date</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"dateId\"\r\n                value={this.state.modalData.date}\r\n                onChange={this.onChangeEdit}\r\n              />\r\n              {/* <p className=\"validationMsg\">{this.state.dateErrMsg}</p> */}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"timeId\">Time</Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: e.g. 6pm/6-7pm/around 6-6:30pm/etc.)\r\n              </p>\r\n              <Input\r\n                // type=\"time\"\r\n                type=\"text\"\r\n                name=\"time\"\r\n                id=\"timeId\"\r\n                value={this.state.modalData.time}\r\n                onChange={this.onChangeEdit}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"matchid\">\r\n                Match reference{\" \"}\r\n                {/* <p>\r\n              <i> (optional)</i>\r\n            </p> */}\r\n              </Label>\r\n              <p className=\"hintPara\">\r\n                (Hint: e.g. refer a match for which you need umpire - if you\r\n                have one)\r\n              </p>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"matchId\"\r\n                id=\"matchid\"\r\n                value={this.state.modalData.matchId}\r\n                onChange={this.onChangeEdit}\r\n              >\r\n                <option key=\"0\">--Select--</option>\r\n                {this.state.matchList.map(m => (\r\n                  <option key={m.id} value={m.id}>\r\n                    {m.id}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.update.bind(this)}>\r\n            Save\r\n          </Button>{\" \"}\r\n          {/* <Button\r\n            type=\"reset\"\r\n            color=\"secondary\"\r\n            // onClick={this.resetForm.bind(this)}\r\n          >\r\n            Reset\r\n          </Button> */}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleEditRequestModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  deleteRequestModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteRequestModalDisplay}\r\n        toggle={this.toggleDeleteRequestModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteRequestModal.bind(this)}>\r\n          Delete\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this request? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">{this.state.modalData.id}</span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Title: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.title}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Description: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.description}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Sport: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.sportType}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Address: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.address}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Date: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.date}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Time: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.time}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Reference Match: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalData.matchId}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"warning\"\r\n            // onClick={this.toggleDeleteRequestModal.bind(this)}\r\n            onClick={this.delete.bind(this)}\r\n          >\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleDeleteRequestModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  // addCommentFunc = (requestid, userid) => {\r\n  addCommentFunc(requestid) {\r\n    const { addComment } = this.state;\r\n    if (addComment.comment.length > 0) {\r\n      addComment.requestId = requestid;\r\n      addComment.userId = this.state.user[0].id;\r\n\r\n      const d = new Date();\r\n      let date = d.toUTCString();\r\n      addComment.created = date;\r\n      addComment.lastModified = date;\r\n      this.setState({ addComment });\r\n\r\n      // add the comment to comments\r\n      // const { addToCommentList } = this.state;\r\n      // let { comments } = this.state;\r\n\r\n      // addToCommentList.id =\r\n      //   this.state.comments[this.state.comments.length - 1].id + 1;\r\n      // addToCommentList.request_id = requestid;\r\n      // addToCommentList.comment = addComment.comment;\r\n      // addToCommentList.user_id = this.state.user[0].id;\r\n      // addToCommentList.full_name = this.state.user[0].full_name;\r\n      // addToCommentList.email_id = this.state.user[0].email_id;\r\n      // addToCommentList.created = date;\r\n      // addToCommentList.last_modified = date;\r\n\r\n      // comments.push(addToCommentList);\r\n\r\n      // this.setState({ addToCommentList, comments });\r\n\r\n      axios\r\n        .post(process.env.REACT_APP_ADD_NEW_COMMENT, this.state.addComment)\r\n        .then(res => {\r\n          this.setState({\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.addCommentMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n          });\r\n          axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n            this.setState({\r\n              commentList: res.data,\r\n              comments: res.data.filter(\r\n                c => c.request_id === this.state.requestData[0].id\r\n              )\r\n            });\r\n          });\r\n          this.resetForm();\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    let { editRequestData } = this.state;\r\n    const { modalData } = this.state;\r\n    const { modalDataOriginal } = this.state;\r\n    let { editRequestDataToUpdate } = this.state;\r\n    const { requestData } = this.state;\r\n    let tempArr = [];\r\n    // compare modalData and modalOriginalData to verufy if there was any change\r\n    if (JSON.stringify(modalData) === JSON.stringify(modalDataOriginal)) {\r\n      console.log(\"same\");\r\n    } else {\r\n      // fillup editRequestData fields\r\n      editRequestData.id = modalData.id;\r\n      editRequestData.title = modalData.title;\r\n      editRequestData.description = modalData.description;\r\n      editRequestData.sportType = modalData.sportType;\r\n      editRequestData.address = modalData.address;\r\n      editRequestData.date = modalData.date;\r\n      editRequestData.time = modalData.time;\r\n\r\n      const reqTemp = this.state.requestTemplateList.filter(\r\n        f => f.request_template === modalData.title\r\n      );\r\n      if (reqTemp.length > 0) {\r\n        editRequestData.requestTemplateId = reqTemp[0].id;\r\n      }\r\n      editRequestData.requestTemplateId = Number(\r\n        editRequestData.requestTemplateId\r\n      );\r\n      editRequestData.requestorId = this.state.user[0].id;\r\n      editRequestData.requestorId = Number(editRequestData.requestorId);\r\n      // editRequestData.requestStatusId = 1; // active\r\n      editRequestData.requestStatusId = this.state.requestStatusList.filter(\r\n        s => s.requestStatusId === modalData.requestStatusId\r\n      )[0].id;\r\n      if (modalData.matchId === \"--Select--\") {\r\n        editRequestData.matchId = null;\r\n      } else {\r\n        editRequestData.matchId = modalData.matchId;\r\n      }\r\n\r\n      const d = new Date();\r\n      let date = d.toUTCString();\r\n      editRequestData.lastModified = date;\r\n      this.setState({ editRequestData });\r\n      axios\r\n        .put(process.env.REACT_APP_UPDATE_REQUEST, this.state.editRequestData)\r\n        .then(res => {\r\n          this.setState({\r\n            msg:\r\n              res.status === 200\r\n                ? this.state.updateRequestMsg\r\n                : \"status code \" + res.status + \"\\n\" + this.state.errRequestMsg\r\n          });\r\n          // edit the existing request\r\n          editRequestDataToUpdate.title = modalData.title;\r\n          editRequestDataToUpdate.description = modalData.description;\r\n          editRequestDataToUpdate.sport_type = modalData.sportType;\r\n          editRequestDataToUpdate.address = modalData.address;\r\n          editRequestDataToUpdate.request_status = modalData.request_status;\r\n          editRequestDataToUpdate.date = modalData.date;\r\n          editRequestDataToUpdate.time = modalData.time;\r\n          editRequestDataToUpdate.match_id = modalData.matchId;\r\n\r\n          editRequestDataToUpdate.id = requestData[0].id;\r\n          editRequestDataToUpdate.requestor = requestData[0].requestor;\r\n          editRequestDataToUpdate.email_id = requestData[0].email_id;\r\n          editRequestDataToUpdate.phone_no = requestData[0].phone_no;\r\n          editRequestDataToUpdate.created = requestData[0].created;\r\n\r\n          if (reqTemp.length > 0) {\r\n            editRequestDataToUpdate.request_template = modalData.title;\r\n          }\r\n          editRequestDataToUpdate.lastModified = date;\r\n\r\n          tempArr.push(editRequestDataToUpdate);\r\n          this.setState({ requestData: tempArr });\r\n\r\n          // let index = this.state.requestData.findIndex(\r\n          //   element => element.id === editRequestDataToUpdate.id\r\n          // );\r\n          // this.state.requestData.splice(index, 1, editRequestDataToUpdate);\r\n\r\n          // return this.props.history.push({\r\n          //   pathname: \"/myRequest\",\r\n          //   state: {\r\n          //     userEmail: this.state.userEmail,\r\n          //     msg: \"request submitted successfully\"\r\n          //   }\r\n          // });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            msg: this.state.errMsg + error\r\n          });\r\n        });\r\n    }\r\n    this.toggleEditRequestModal();\r\n  }\r\n  delete() {\r\n    axios\r\n      .delete(\r\n        process.env.REACT_APP_DELETE_REQUEST,\r\n        { data: this.state.modalData.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.deleteRequestMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        console.log(\"before return\");\r\n        return this.props.history.push({\r\n          pathname: \"/allRequest\",\r\n          state: { userEmail: this.state.userEmail }\r\n        });\r\n        // this.toggleDeleteRequestModal();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        this.toggleDeleteRequestModal();\r\n      });\r\n  }\r\n\r\n  // update comment\r\n  updateComment() {\r\n    const d = new Date();\r\n    let date = d.toUTCString();\r\n    let { modalDataComment } = this.state;\r\n    modalDataComment.last_modified = date;\r\n    this.setState({ modalDataComment });\r\n    console.log(this.state.modalDataComment);\r\n    axios\r\n      .put(process.env.REACT_APP_UPDATE_COMMENT, this.state.modalDataComment)\r\n      .then(res => {\r\n        this.setState({\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.updateCommentMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errRequestMsg\r\n        });\r\n        // toggle commnet edit box\r\n        this.toggleEditCommentModal(modalDataComment);\r\n        // update comments list\r\n        const { comments } = this.state;\r\n        // const index = comments.findIndex(e => e.id === modalDataComment.id)\r\n        // comments.splice(index, 1, modalDataComment)\r\n        comments[\r\n          comments.findIndex(e => e.id === modalDataComment.id)\r\n        ] = modalDataComment;\r\n        this.setState({ comments });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n      });\r\n  }\r\n  // cancel update comment\r\n  cancelEditComment(row) {\r\n    // const inputid = \"input\" + row.id;\r\n    const divid = \"div\" + row.id;\r\n    // console.log(\"row.comment\");\r\n    // console.log(this.state.originalComment);\r\n    // console.log(this.state.modalDataComment.comment);\r\n    // console.log(document.getElementById(divid).innerHTML);\r\n\r\n    document.getElementById(divid).innerHTML = this.state.originalComment;\r\n    // const divactionid = \"divAction\" + row.id;\r\n    // document.getElementById(divid).style.display = \"block\";\r\n    // document.getElementById(inputid).style.display = \"none\";\r\n    // document.getElementById(divactionid).style.display = \"none\";\r\n\r\n    this.toggleEditCommentModal(row);\r\n  }\r\n  // set modal data for edit comment\r\n  setEditCommentModalData(row) {\r\n    this.setState({\r\n      modalDataComment: row,\r\n      originalComment: row.comment\r\n    });\r\n    const inputid = \"input\" + row.id;\r\n    const divid = \"div\" + row.id;\r\n    const divactionid = \"divAction\" + row.id;\r\n\r\n    document.getElementById(divid).style.display = \"none\";\r\n    document.getElementById(divactionid).style.display = \"block\";\r\n    document.getElementById(inputid).style.display = \"block\";\r\n    // this.toggleEditCommentModal(row);\r\n\r\n    // if (document.getElementById(divid).contentEditable === \"true\") {\r\n    //   document.getElementById(divid).contentEditable = \"false\";\r\n    //   // document.getElementById(\"editCmntBtnId\").innerHTML = \"Save\";\r\n    // } else {\r\n    //   document.getElementById(divid).contentEditable = \"true\";\r\n    // }\r\n    // this.toggleEditCommentModal();\r\n  }\r\n  // set modal data for delete comment\r\n  setDeleteCommentModalData(row) {\r\n    this.setState({\r\n      modalDataComment: row\r\n    });\r\n    this.toggleDeleteCommentModal();\r\n  }\r\n  // delete comment modal\r\n  deleteCommentModal() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.deleteCommentModalDisplay}\r\n        toggle={this.toggleDeleteCommentModal.bind(this)}\r\n      >\r\n        <ModalHeader toggle={this.toggleDeleteCommentModal.bind(this)}>\r\n          Delete Comment\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h6 className=\"colorRed\">\r\n            Do you want to delete this comment? It cannot be recovered after\r\n            deletion\r\n          </h6>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Id: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalDataComment.id}\r\n            </span>\r\n          </p>\r\n          <p className=\"modalPara\">\r\n            <span className=\"modalParaHeadSpan\">Comment: </span>\r\n            <span className=\"modalParaDataSpan\">\r\n              {this.state.modalDataComment.comment}\r\n            </span>\r\n          </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"warning\"\r\n            // onClick={this.toggleDeleteRequestModal.bind(this)}\r\n            onClick={this.deleteCommentFunc.bind(this)}\r\n          >\r\n            Confirm Delete\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={this.toggleDeleteCommentModal.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n  // delete comment function\r\n  deleteCommentFunc() {\r\n    axios\r\n      .delete(\r\n        process.env.REACT_APP_DELETE_COMMENT,\r\n        { data: this.state.modalDataComment.id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"text/plain\"\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          msg:\r\n            res.status === 200\r\n              ? this.state.deleteCommentMsg\r\n              : \"status code \" + res.status + \"\\n\" + this.state.errMsg\r\n        });\r\n        // // delete comment from comments list\r\n        // let { comments } = this.state;\r\n        // const index = comments.findIndex(\r\n        //   i => i.id === this.state.modalDataComment.id\r\n        // );\r\n        // if (index > -1) {\r\n        //   comments.splice(index, 1);\r\n        // }\r\n        axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n          this.setState({\r\n            commentList: res.data,\r\n            comments: res.data.filter(\r\n              c => c.request_id === this.state.requestData[0].id\r\n            )\r\n          });\r\n        });\r\n        this.toggleDeleteCommentModal();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          msg: this.state.errMsg + error\r\n        });\r\n        this.toggleDeleteRequestModal();\r\n      });\r\n  }\r\n\r\n  dateConvert(timestamp) {\r\n    // format YYYY-MM-DD HH:MM:SS AM/PM\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    if (today.toDateString() === date.toDateString()) {\r\n      return (\r\n        date.toLocaleTimeString().slice(0, 4) +\r\n        \" \" +\r\n        date.toLocaleTimeString().split(\" \")[1]\r\n      );\r\n    } else {\r\n      return (\r\n        date.toDateString().split(\" \")[1] +\r\n        \" \" +\r\n        date.toDateString().split(\" \")[2]\r\n      );\r\n    }\r\n  }\r\n\r\n  displayRequest(data) {\r\n    return (\r\n      <div key={data.id} className=\"disp-div\">\r\n        <div className=\"displayFlex\">\r\n          {/* <div>\r\n            <div id=\"disp-div-photo\"></div>\r\n            <br />\r\n            <NavLink\r\n              to={{\r\n                pathname: `/player/${data.email_id}`,\r\n                state: {\r\n                  userEmail: this.state.userEmail\r\n                }\r\n              }}\r\n            >\r\n              {data.requestor}\r\n            </NavLink>\r\n          </div> */}\r\n          <div className=\"disp-div-requestor\">\r\n            <div>\r\n              <img\r\n                src={\r\n                  this.state.userImageDataList.filter(\r\n                    u => u.email_id === data.email_id\r\n                  ).length > 0\r\n                    ? this.state.userImageDataList.filter(\r\n                        u => u.email_id === data.email_id\r\n                      )[0].image_data\r\n                    : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                      default_image\r\n                }\r\n                className=\"disp-div-photo\"\r\n                alt={\r\n                  this.state.userImageDataList.filter(\r\n                    u => u.email_id === data.email_id\r\n                  ).length > 0\r\n                    ? this.state.userImageDataList.filter(\r\n                        u => u.email_id === data.email_id\r\n                      )[0].image_data\r\n                    : // : process.env.REACT_APP_DEFAULT_IMAGE\r\n                      default_image\r\n                }\r\n              />\r\n            </div>\r\n            <NavLink\r\n              className=\"fontSmall\"\r\n              to={{\r\n                pathname: `/player/${data.email_id}`,\r\n                state: {\r\n                  userEmail: this.state.userEmail\r\n                }\r\n              }}\r\n            >\r\n              {data.requestor}\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"nav-link\">\r\n            <Row className=\"disp-div-row\">\r\n              <Col xs=\"9\" className=\"disp-div-row-col title\">\r\n                {data.title}\r\n              </Col>\r\n              <Col xs=\"3\" className=\"disp-div-row-col textAlignRight\">\r\n                {this.dateConvert(data.created)}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"disp-div-row\">\r\n              <Col xs=\"9\" className=\"disp-div-row-col sportType\">\r\n                {data.sport_type ? data.sport_type : \"No sport selected\"}\r\n              </Col>\r\n              <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                <i>Status:</i>{\" \"}\r\n                {data.request_status ? data.request_status : \"N/A\"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"disp-div-row\">\r\n              <Col xs=\"6\" className=\"disp-div-row-col\">\r\n                <i>Venue:</i> {data.address ? data.address : \"N/A\"}\r\n              </Col>\r\n              <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                <i>Date:</i> {data.date ? data.date : \"N/A\"}\r\n              </Col>\r\n              <Col xs=\"3\" className=\"disp-div-row-col\">\r\n                <i>Time:</i> {data.time ? data.time : \"N/A\"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"disp-div-row\">\r\n              <Col className=\"disp-div-row-col\">\r\n                <i>Description:</i>{\" \"}\r\n                {data.description ? data.description : \"N/A\"}\r\n              </Col>\r\n            </Row>\r\n            {this.state.showEditRequest ? (\r\n              <Row className=\"disp-div-row\">\r\n                <Col className=\"disp-div-row-col\">\r\n                  <button\r\n                    className=\"transparentButton\"\r\n                    onClick={this.setEditRequestModalData.bind(\r\n                      this,\r\n                      data.id,\r\n                      data.title,\r\n                      data.description,\r\n                      data.request_status,\r\n                      data.sport_type,\r\n                      data.address,\r\n                      data.date,\r\n                      data.time,\r\n                      data.match_id\r\n                    )}\r\n                  >\r\n                    Edit\r\n                  </button>{\" \"}\r\n                  <button\r\n                    className=\"transparentButton\"\r\n                    onClick={this.setDeleteRequestModalData.bind(\r\n                      this,\r\n                      data.id,\r\n                      data.title,\r\n                      data.description,\r\n                      data.request_status,\r\n                      data.sport_type,\r\n                      data.address,\r\n                      data.date,\r\n                      data.time,\r\n                      data.match_id\r\n                    )}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <Row className=\"disp-div-row\">\r\n          <Col className=\"disp-div-row-col\">\r\n            <Form id=\"formId\">\r\n              <FormGroup>\r\n                <Label for=\"commentId\">Comment</Label>\r\n                <div className=\"dispFlex comments\">\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"comment\"\r\n                    id=\"commentId\"\r\n                    placeholder=\"Comment\"\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onChange={this.handleOnChange}\r\n                  />\r\n                  <Button\r\n                    // type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    // onClick={this.addCommentFunc(data.id, this.state.user[0].id)}\r\n                    onClick={this.addCommentFunc.bind(this, data.id)}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    type=\"reset\"\r\n                    color=\"secondary\"\r\n                    size=\"sm\"\r\n                    // onClick={this.resetForm.bind(this)}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              </FormGroup>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayComment(data) {\r\n    return data.map(row => {\r\n      // const href = \"/player/\" + row.email_id;\r\n      const inputId = \"input\" + row.id;\r\n      const divId = \"div\" + row.id;\r\n      const divActionId = \"divAction\" + row.id;\r\n      // console.log(\"this.state.userEmail\");\r\n      // console.log(this.state.userEmail);\r\n      // console.log(row.email_id);\r\n      return (\r\n        // <div key={row.id} className=\"reqDetTbl commentTbody tbody\">\r\n        <div key={row.id}>\r\n          <div className=\"disp-comment\">\r\n            <div className=\"disp-div-comment\">\r\n              <div className=\"displayFlex\">\r\n                <div className=\"commentRequestor\">\r\n                  {/* <NavLink to={{ pathname: `/player/${row.email_id}` }}> */}\r\n                  {/* <a className=\"tdLink colorBlue\" href={href}>\r\n                    {row.full_name}\r\n                  </a> */}\r\n                  <NavLink\r\n                    className=\"fontSmall\"\r\n                    to={{\r\n                      pathname: `/player/${row.email_id}`,\r\n                      state: {\r\n                        userEmail: this.state.userEmail\r\n                      }\r\n                    }}\r\n                  >\r\n                    {row.full_name}\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"commentDate\">\r\n                  {this.dateConvert(row.created)}\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id={inputId}\r\n                className=\"displayNone editCommentInput\"\r\n                name=\"editCommentLine\"\r\n                value={row.comment}\r\n                onChange={e => {\r\n                  let { modalDataComment } = this.state;\r\n                  modalDataComment.comment = e.target.value;\r\n                  this.setState({ modalDataComment });\r\n                }}\r\n              />\r\n              {/* <div id={divId} className=\"commentLine\"> */}\r\n\r\n              <div\r\n                id={divId}\r\n                className=\"displayBlock\"\r\n                onChange={e => {\r\n                  let { modalDataComment } = this.state;\r\n                  modalDataComment.comment = e.target.value;\r\n                  this.setState({ modalDataComment });\r\n                }}\r\n              >\r\n                {row.comment}\r\n              </div>\r\n\r\n              <div id={divActionId} className=\"displayNone\">\r\n                <button\r\n                  onClick={this.updateComment.bind(this)}\r\n                  className=\"transparentButton ml-1 fontSmall\"\r\n                >\r\n                  Save\r\n                </button>{\" \"}\r\n                |\r\n                <button\r\n                  onClick={this.cancelEditComment.bind(this, row)}\r\n                  className=\"transparentButton ml-1 fontSmall\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {this.state.userEmail.toLowerCase() === row.email_id ||\r\n            this.state.showEditComment ? (\r\n              <div className=\"disp-div-action\">\r\n                <button\r\n                  id=\"editCmntBtnId\"\r\n                  onClick={this.setEditCommentModalData.bind(this, row)}\r\n                  className=\"transparentButton ml-2 fontSmall\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={this.setDeleteCommentModalData.bind(this, row)}\r\n                  className=\"transparentButton ml-2 fontSmall\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    if (\r\n      this.state.userEmail.toLowerCase() ===\r\n      this.state.requestData[0].email_id.toLowerCase()\r\n    ) {\r\n      this.setState({\r\n        showEditRequest: true\r\n      });\r\n    }\r\n    if (this.state.userEmail.toLowerCase() === process.env.REACT_APP_ADMIN) {\r\n      this.setState({\r\n        showEditRequest: true,\r\n        showEditComment: true\r\n      });\r\n    }\r\n    axios.get(process.env.REACT_APP_REQUEST_COMMENT_LIST).then(res => {\r\n      this.setState({\r\n        commentList: res.data,\r\n        comments: res.data.filter(\r\n          c => c.request_id === this.state.requestData[0].id\r\n        )\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_REQUEST_TEMPLATE_LIST).then(res => {\r\n      this.setState({\r\n        requestTemplateList: res.data\r\n      });\r\n      // this.state.teamList.splice(0, 0, \"--Select--\");\r\n    });\r\n    axios.get(process.env.REACT_APP_SPORT_TYPE_LIST).then(res => {\r\n      this.setState({\r\n        sportTypeList: res.data\r\n      });\r\n    });\r\n    axios.get(process.env.REACT_APP_REQUEST_STATUS_LIST).then(res => {\r\n      this.setState({\r\n        requestStatusList: res.data\r\n      });\r\n    });\r\n    // axios\r\n    //   .get(process.env.REACT_APP_GET_PLAYER, {\r\n    //     params: {\r\n    //       email_id: this.state.userEmail\r\n    //     }\r\n    //   })\r\n    //   .then(res => {\r\n    //     this.setState({\r\n    //       user: res.data\r\n    //     });\r\n    //     console.log(\"user fetched from database is \", res.data);\r\n    //   });\r\n    axios\r\n      .get(process.env.REACT_APP_ALL_MATCHES, {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          matchList: res.data\r\n        });\r\n      });\r\n\r\n    axios.get(process.env.REACT_APP_GET_IMAGE_S3).then(res => {\r\n      this.setState({\r\n        userImageDataList: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          {this.editRequestModal()}\r\n          {this.deleteRequestModal()}\r\n          {this.deleteCommentModal()}\r\n          <h1 className=\"pageHead\">{this.state.header}</h1>\r\n          <this.alrt />\r\n          {this.displayRequest(this.state.requestData[0])}\r\n          <div className=\"disp-div\">\r\n            <p>Comments:</p>\r\n            {this.displayComment(this.state.comments)}\r\n          </div>\r\n          {/* </div> */}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestDetailsTblClass);\r\n","import React, { Component } from \"react\";\r\nimport RequestDetailsTblClass from \"./tables/requestDetailsTbl\";\r\n\r\nimport NavbarDispClass from \"./navbarTop\";\r\nimport NavbarFooterClass from \"./navbarFooter\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass RequestDetailsClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      header: \"Request Details\",\r\n      userEmail: this.props.location.state.userEmail,\r\n      requestId: this.props.match.params.id,\r\n      requestData: this.props.location.state.requestData,\r\n      msg: this.props.location.state.msg,\r\n      comment: this.props.location.state.comment,\r\n      user: this.props.location.state.user,\r\n      requestTemplateList: this.props.location.state.requestTemplateList,\r\n      sportTypeList: this.props.location.state.sportTypeList,\r\n      matchList: this.props.location.state.matchList\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pageTop\">\r\n        <NavbarDispClass userEmail={this.state.userEmail} />\r\n        {/* <RequestDetailsTblClass */}\r\n        <RequestDetailsTblClass\r\n          header={this.state.header}\r\n          userEmail={this.state.userEmail}\r\n          requestId={this.state.requestId}\r\n          requestData={this.state.requestData}\r\n          msg={this.state.msg}\r\n          comment={this.state.comment}\r\n          user={this.state.user}\r\n        />\r\n        <a href=\"#pageTop\">\r\n          <div className=\"topBtn\">Top</div>\r\n        </a>\r\n        <NavbarFooterClass />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RequestDetailsClass);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorClass extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <h1>\r\n        Page not found. Please reach out to Sujoy at\r\n        sujoychakraborty93@gmail.com\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorClass;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport HomePageClass from \"./components/homePage\";\nimport HomeClass from \"./components/home-incomplete\";\nimport AllMatchesPageClass from \"./components/allMatchesPage\";\nimport MyTeamMatchPageClass from \"./components/myTeamMatchPage\";\nimport TeamsClass from \"./components/teamsPage\";\nimport PlayerClass from \"./components/playerPage\";\nimport VenueClass from \"./components/venuePage\";\nimport UmpireClass from \"./components/umpirepage\";\nimport LoginClass from \"./components/loginPage\";\nimport RegistrationClass from \"./components/registrationPage\";\nimport ForgotPasswordClass from \"./components/forgotPasswordPage\";\n// import auth from \"./components/auth\";\nimport RequestOverviewClass from \"./components/requestOverview\";\nimport RequestAllClass from \"./components/requestAll\";\nimport RequestMyClass from \"./components/requestMy\";\nimport RequestSubmitClass from \"./components/requestSubmit\";\nimport RequestDetailsClass from \"./components/requestDetails\";\nimport ErrorClass from \"./components/errorPage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nfunction PrivateRoute({ children, ...rest }) {\n  // console.log(\"auth.isAuthenticated()\");\n  // console.log(auth.isAuthenticated());\n  // console.log(localStorage.getItem(\"loggedIn\"));\n  // console.log(sessionStorage.getItem(\"loggedIn\"));\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        // auth.isAuthenticated() ? (\n        sessionStorage.getItem(\"loggedIn\") === \"true\" ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n// const LoginRoute = ({ component: Component, ...rest }) => (\n//   <Route\n//     {...rest} render={props => (\n//       auth.isAuthenticated() ? (\n//         <Redirect to={{\n//           pathname: '/private-route',\n//           state: { from: props.location }\n//         }} />\n//       ) : (\n//         <Component {...props} />\n//       )\n//   )} />\n// );\n\nfunction App() {\n  // const authorized = auth.authenticate();\n  // console.log(\"authorized\");\n  // console.log(authorized);\n  // console.log(auth.isAuthenticated);\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LoginClass} />\n          <Route path=\"/login\" component={LoginClass} />\n          <Route path=\"/register\" component={RegistrationClass} />\n          <Route path=\"/forgotPassword\" component={ForgotPasswordClass} />\n          {/* </Switch>\n        {console.log(\"auth.isAuthenticated()\")}\n        {console.log(auth.isAuthenticated())}\n        {auth.isAuthenticated() === true ? (\n          <Switch> */}\n          {/* <Route path=\"/home\" component={HomePageClass} /> */}\n          <PrivateRoute path=\"/home\">\n            <HomePageClass />\n          </PrivateRoute>\n          <Route path=\"/house\" component={HomeClass} />\n          {/* <Route path=\"/allMatchSchedule\" component={AllMatchesPageClass} /> */}\n          <PrivateRoute path=\"/allMatchSchedule\">\n            <AllMatchesPageClass />\n          </PrivateRoute>\n          {/* <Route path=\"/myTeamSchedule\" component={MyTeamMatchPageClass} /> */}\n          <PrivateRoute path=\"/myTeamSchedule\">\n            <MyTeamMatchPageClass />\n          </PrivateRoute>\n          {/* <Route path=\"/teamsList\" exact component={TeamsClass} /> */}\n          <PrivateRoute path=\"/teamsList\">\n            <TeamsClass />\n          </PrivateRoute>\n          {/* {console.log(\"5\")} */}\n          {/* <Route path=\"/venuesList\" exact component={VenueClass} /> */}\n          <PrivateRoute path=\"/venuesList\">\n            <VenueClass />\n          </PrivateRoute>\n          {/* {console.log(\"6\")} */}\n          {/* <Route path=\"/umpiresList\" exact component={UmpireClass} /> */}\n          <PrivateRoute path=\"/umpiresList\">\n            <UmpireClass />\n          </PrivateRoute>\n          {/* {console.log(\"7\")} */}\n          {/* <Route path=\"/playersList\" component={PlayerClass} /> */}\n          <PrivateRoute path=\"/playersList\">\n            <PlayerClass />\n          </PrivateRoute>\n          {/* {console.log(\"8\")} */}\n          {/* <Route path=\"/player/:id?\" component={PlayerClass} /> */}\n          <PrivateRoute path=\"/player/:playerEmailId?\">\n            <PlayerClass />\n          </PrivateRoute>\n          {/* {console.log(\"9\")} */}\n          {/* <Route path=\"/request\" component={RequestPageClass} /> */}\n          {/* <PrivateRoute path=\"/request\">\n            <RequestPageClass />\n          </PrivateRoute> */}\n          <PrivateRoute path=\"/requestOverview\">\n            <RequestOverviewClass />\n          </PrivateRoute>\n          <PrivateRoute path=\"/allRequest\">\n            <RequestAllClass />\n          </PrivateRoute>\n          <PrivateRoute path=\"/myRequest\">\n            <RequestMyClass />\n          </PrivateRoute>\n          <PrivateRoute path=\"/submitRequest\">\n            <RequestSubmitClass />\n          </PrivateRoute>\n          <PrivateRoute path=\"/request/:id?\">\n            <RequestDetailsClass />\n          </PrivateRoute>\n          <Route component={ErrorClass} />\n        </Switch>\n        {/* ) : (\n        <Redirect to=\"/\" />\n        )} */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport { AllRequests, AllMatches } from \"./fetchData\";\r\n\r\nconst allReducers = combineReducers({\r\n  allRequests: AllRequests,\r\n  allMatches: AllMatches\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index1.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n//import \"./index.css\";\nimport \"./index1.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import HomePageClass from \"./components/homePage\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./components/reducer/allReducer\";\n\nconst store = createStore(allReducers);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// ReactDOM.render(<HomePageClass />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/GC.7e476855.jpg\";","module.exports = __webpack_public_path__ + \"static/media/00_default_image.7eb07ee1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ball33.d6514b89.png\";"],"sourceRoot":""}